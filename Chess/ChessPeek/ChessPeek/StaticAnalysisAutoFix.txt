StaticAnalysisJobIdentifier: [011]
2023-09-11T16:23:35
[35m2023-09-11T16:24:31[0m | [33mBuildAndRun.sh:28[0m | The current path is [/d/a/aprg/aprg/Chess/ChessPeek/ChessPeek].
[35m2023-09-11T16:24:31[0m | [33mBuildAndRun.sh:29[0m | The scriptPath is [/d/a/aprg/aprg/AllCommonScripts/BuildAndRunScripts/BuildAndRun.sh].
[35m2023-09-11T16:24:31[0m | [33mBuildAndRun.sh:30[0m | The scriptOption is [buildOnOneCore].
[35m2023-09-11T16:24:31[0m | [33mBuildAndRun.sh:31[0m | The buildDirectoryName is [StaticAnalyzersBuild].
[35m2023-09-11T16:24:31[0m | [33mBuildAndRun.sh:32[0m | The argument1 is [Debug] and argument2 is [].
[35m2023-09-11T16:24:31[0m | [33mBuildAndRun.sh:33[0m | The immediateDirectoryName is [ChessPeek].
[35m2023-09-11T16:24:31[0m | [33mBuildAndRun.sh:84[0m | The buildType is [Debug].
[35m2023-09-11T16:24:31[0m | [33mBuildAndRun.sh:85[0m | The numberOfCores is [2].
[35m2023-09-11T16:24:31[0m | [33mBuildAndRun.sh:68[0m | The build path is [/d/a/aprg/aprg/Chess/ChessPeek/StaticAnalyzersBuild] and the output of [ls -la --color=auto]:
total 253
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 16:24 .
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 16:23 ..
-rw-r--r-- 1 runneradmin 197121  18008 Sep 11 16:24 CMakeCache.txt
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 16:24 CMakeFiles
-rw-r--r-- 1 runneradmin 197121    536 Sep 11 16:24 CTestTestfile.cmake
-rw-r--r-- 1 runneradmin 197121 217577 Sep 11 16:24 build.ninja
-rw-r--r-- 1 runneradmin 197121   2271 Sep 11 16:24 cmake_install.cmake
[1/89] Building CXX object CMakeFiles/gtest.dir/D_/a/aprg/aprg/gtest/gtest/googletest/src/gtest-all.cc.obj
In file included from D:/a/aprg/aprg/gtest/gtest/googletest/src/gtest-all.cc:49:
D:/a/aprg/aprg/gtest/gtest/googletest\src/gtest.cc:2604:3: warning: extension used [-Wlanguage-extension-token]
  __try {
  ^
1 warning generated.
[2/89] Building CXX object CMakeFiles/gtest.dir/D_/a/aprg/aprg/gtest/gtest/googletest/src/gtest_main.cc.obj
[3/89] Linking CXX static library gtest.lib
[4/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Container/AlbaContainerHelper.cpp.obj
[5/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/File/AlbaFileReader.cpp.obj
[6/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Angle/AlbaAngle.cpp.obj
[7/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/ComplexNumberHelpers.cpp.obj
[8/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/ComputationHelpers.cpp.obj
[9/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/FactorAndMulitplesHelpers.cpp.obj
[10/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/PowerHelpers.cpp.obj
[11/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/PrecisionHelpers.cpp.obj
[12/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/StatisticsHelpers.cpp.obj
[13/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/AlbaComplexNumber.cpp.obj
[14/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/AlbaNumber.cpp.obj
[15/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberInterval.cpp.obj
[16/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberIntervalEndpoint.cpp.obj
[17/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberIntervalHelpers.cpp.obj
[18/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Ratio/AlbaRatio.cpp.obj
[19/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Memory/AlbaMemoryBuffer.cpp.obj
[20/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/PathHandler/AlbaPathHandler.cpp.obj
[21/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/PathHandler/AlbaWebPathHandler.cpp.obj
[22/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Print/AlbaPrintFunctions.cpp.obj
[23/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/AlbaOldRandomizer.cpp.obj
[24/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/EntropySources/AlbaCombinedEntropySource.cpp.obj
[25/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/EntropySources/AlbaEntropySourceBasedOnTime.cpp.obj
[26/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamBitReader.cpp.obj
[27/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamBitWriter.cpp.obj
[28/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamParameterReader.cpp.obj
[29/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamParameterWriter.cpp.obj
[30/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/String/AlbaStringHelper.cpp.obj
[31/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaDateTime.cpp.obj
[32/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaDateTimeHelper.cpp.obj
[33/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimeHelper.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\Time\AlbaLocalTimeHelper.cpp:23:34: warning: 'localtime' is deprecated: This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    struct tm const localTime = *localtime(&currentTimeT);
                                 ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h:524:9: note: 'localtime' has been explicitly marked deprecated here
        _CRT_INSECURE_DEPRECATE(localtime_s)
        ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimeHelper.cpp:23:34: warning: 'localtime' is deprecated: This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    struct tm const localTime = *localtime(&currentTimeT);
                                 ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h:524:9: note: 'localtime' has been explicitly marked deprecated here
        _CRT_INSECURE_DEPRECATE(localtime_s)
        ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
1 warning generated.
[34/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimer.cpp.obj
[35/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/User/AlbaUserInterface.cpp.obj
[36/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/User/DisplayTable.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\User\DisplayTable.cpp:205:67: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
int DisplayTablePrinter::getVerticalBorderLength() const { return m_verticalBorder.length(); }
                                                                  ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\User\DisplayTable.cpp:208:12: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return ((m_maxLengthAtColumn.size() + 1) * getVerticalBorderLength()) + m_totalColumnLength;
           ^
[37/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Utility/AlbaScopeGuard.cpp.obj
[38/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities/CommonTestsUtilities/File/BaseFileReaderTest.cpp.obj
[39/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities/CommonTestsUtilities/File/FileUtilities.cpp.obj
[40/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/PathHandler/AlbaWindowsPathHandler.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:28:24: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const length = fullPath.length();
                       ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:30:45: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        int const indexWithSlashCharacter = fullPath.find_first_of(m_slashCharacterString, index);
                                            ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:270:23: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const index = m_directory.find_first_of(m_slashCharacterString + ":");
                      ^
[41/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Time/AlbaWindowsTimeHelper.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\Time\AlbaWindowsTimeHelper.cpp:6:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return AlbaDateTime(
           ^
[42/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Time/AlbaWindowsTimer.cpp.obj
[43/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Windows/AlbaWindowsHelper.cpp.obj
[44/89] Linking CXX static library APRG_COMMON.lib
[45/89] Building CXX object CMakeFiles/APRG_LOCAL_SCREEN_MONITORING.dir/D_/a/aprg/aprg/AprgLocalScreenMonitoring/AprgLocalScreenMonitoring/src/ScreenMonitoring/AlbaLocalScreenMonitoring.cpp.obj
[46/89] Building CXX object CMakeFiles/APRG_LOCAL_SCREEN_MONITORING.dir/D_/a/aprg/aprg/AprgLocalScreenMonitoring/AprgLocalScreenMonitoring/srcWindows/ScreenMonitoring/AlbaWindowsScreenMonitoring.cpp.obj
[47/89] Linking CXX static library APRG_LOCAL_SCREEN_MONITORING.lib
[48/89] Building CXX object CMakeFiles/APRG_BITMAP.dir/D_/a/aprg/aprg/AprgBitmap/AprgBitmap/src/Bitmap/Bitmap.cpp.obj
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\Bitmap.cpp:95:38: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long long') to signed type 'off_type' (aka 'long long') is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                    streamFile.seekg(fileOffsetForStart, std::fstream::beg);
                                     ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\Bitmap.cpp:124:45: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    adjustToTargetLength(left, right, side, m_configuration.getBitmapWidth());
                                            ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\Bitmap.cpp:134:53: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    adjustToTargetLength(top, bottom, ySizeInBytes, m_configuration.getBitmapHeight());
                                                    ^
[49/89] Building CXX object CMakeFiles/APRG_BITMAP.dir/D_/a/aprg/aprg/AprgBitmap/AprgBitmap/src/Bitmap/BitmapConfiguration.cpp.obj
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:26:61: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const maxX = m_bitmapWidth == 0 ? 0 : m_bitmapWidth - 1;
                                                            ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:27:63: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const maxY = m_bitmapHeight == 0 ? 0 : m_bitmapHeight - 1;
                                                              ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:60:49: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return getCoordinateWithinRange(coordinate, m_bitmapWidth);
                                                ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:64:49: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return getCoordinateWithinRange(coordinate, m_bitmapHeight);
                                                ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:68:12: warning: narrowing conversion from 'std::size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return (pixels * m_numberOfBitsPerPixel) / AlbaBitConstants::BYTE_SIZE_IN_BITS;
           ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:72:12: warning: narrowing conversion from 'std::size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return ((pixels * m_numberOfBitsPerPixel) + AlbaBitConstants::BYTE_SIZE_IN_BITS - 1) /
           ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:77:12: warning: narrowing conversion from 'std::size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return (bytes * AlbaBitConstants::BYTE_SIZE_IN_BITS) / m_numberOfBitsPerPixel;
           ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:97:22: warning: narrowing conversion from 'std::size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    double const b = (1 + getMinimumNumberOfBytesForOnePixel()) * AlbaBitConstants::BYTE_SIZE_IN_BITS;
                     ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:259:69: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    m_numberOfBytesForDataInRow = convertPixelsToBytesRoundedToCeil(m_bitmapWidth);
                                                                    ^
[50/89] Building CXX object CMakeFiles/APRG_BITMAP.dir/D_/a/aprg/aprg/AprgBitmap/AprgBitmap/src/Bitmap/BitmapSnippet.cpp.obj
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapSnippet.cpp:45:54: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
int BitmapSnippet::getPixelDataSize() const { return m_pixelData.getSize(); }
                                                     ^
[51/89] Linking CXX static library APRG_BITMAP.lib
[52/89] Building CXX object CMakeFiles/APRG_LOCAL_USER_AUTOMATION.dir/D_/a/aprg/aprg/AprgLocalUserAutomation/AprgLocalUserAutomation/src/UserAutomation/AlbaLocalUserAutomation.cpp.obj
[53/89] Building CXX object CMakeFiles/APRG_LOCAL_USER_AUTOMATION.dir/D_/a/aprg/aprg/AprgLocalUserAutomation/AprgLocalUserAutomation/srcWindows/UserAutomation/AlbaWindowsUserAutomation.cpp.obj
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:16:33: warning: method 'setMousePosition' can be made static [readability-convert-member-functions-to-static]
void AlbaWindowsUserAutomation::setMousePosition(MousePosition const& position) const {
                                ^                                               ~~~~~~
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:17:5: note: FIX-IT applied suggested code changes
    void setMousePosition(MousePosition const& position) const;
    ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:17:58: note: FIX-IT applied suggested code changes
    void setMousePosition(MousePosition const& position) const;
                                                         ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:16:81: note: FIX-IT applied suggested code changes
void AlbaWindowsUserAutomation::setMousePosition(MousePosition const& position) const {
                                                                                ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:19:22: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    float ratioInX = position.getX() * (65535.0F / screenWidth);
                     ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:19:52: warning: narrowing conversion from 'long' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    float ratioInX = position.getX() * (65535.0F / screenWidth);
                                                   ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:20:22: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    float ratioInY = position.getY() * (65535.0F / screenHeight);
                     ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:20:52: warning: narrowing conversion from 'long' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    float ratioInY = position.getY() * (65535.0F / screenHeight);
                                                   ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:31:33: warning: method 'pressLeftButtonOnMouse' can be made static [readability-convert-member-functions-to-static]
void AlbaWindowsUserAutomation::pressLeftButtonOnMouse() const {
                                ^                        ~~~~~~
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:18:5: note: FIX-IT applied suggested code changes
    void pressLeftButtonOnMouse() const;
    ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:18:35: note: FIX-IT applied suggested code changes
    void pressLeftButtonOnMouse() const;
                                  ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:31:58: note: FIX-IT applied suggested code changes
void AlbaWindowsUserAutomation::pressLeftButtonOnMouse() const {
                                                         ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:38:33: warning: method 'releaseLeftButtonOnMouse' can be made static [readability-convert-member-functions-to-static]
void AlbaWindowsUserAutomation::releaseLeftButtonOnMouse() const {
                                ^                          ~~~~~~
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:19:5: note: FIX-IT applied suggested code changes
    void releaseLeftButtonOnMouse() const;
    ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:19:37: note: FIX-IT applied suggested code changes
    void releaseLeftButtonOnMouse() const;
                                    ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:38:60: note: FIX-IT applied suggested code changes
void AlbaWindowsUserAutomation::releaseLeftButtonOnMouse() const {
                                                           ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:67:33: warning: method 'pressRightButtonOnMouse' can be made static [readability-convert-member-functions-to-static]
void AlbaWindowsUserAutomation::pressRightButtonOnMouse() const {
                                ^                         ~~~~~~
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:24:5: note: FIX-IT applied suggested code changes
    void pressRightButtonOnMouse() const;
    ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:24:36: note: FIX-IT applied suggested code changes
    void pressRightButtonOnMouse() const;
                                   ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:67:59: note: FIX-IT applied suggested code changes
void AlbaWindowsUserAutomation::pressRightButtonOnMouse() const {
                                                          ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:74:33: warning: method 'releaseRightButtonOnMouse' can be made static [readability-convert-member-functions-to-static]
void AlbaWindowsUserAutomation::releaseRightButtonOnMouse() const {
                                ^                           ~~~~~~
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:25:5: note: FIX-IT applied suggested code changes
    void releaseRightButtonOnMouse() const;
    ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:25:38: note: FIX-IT applied suggested code changes
    void releaseRightButtonOnMouse() const;
                                     ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:74:61: note: FIX-IT applied suggested code changes
void AlbaWindowsUserAutomation::releaseRightButtonOnMouse() const {
                                                            ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:93:33: warning: method 'pressKey' can be made static [readability-convert-member-functions-to-static]
void AlbaWindowsUserAutomation::pressKey(uint16_t const key) const {
                                ^                            ~~~~~~
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:28:5: note: FIX-IT applied suggested code changes
    void pressKey(uint16_t const key) const;
    ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:28:39: note: FIX-IT applied suggested code changes
    void pressKey(uint16_t const key) const;
                                      ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:93:62: note: FIX-IT applied suggested code changes
void AlbaWindowsUserAutomation::pressKey(uint16_t const key) const {
                                                             ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:104:33: warning: method 'releaseKey' can be made static [readability-convert-member-functions-to-static]
void AlbaWindowsUserAutomation::releaseKey(uint16_t const key) const {
                                ^                              ~~~~~~
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:29:5: note: FIX-IT applied suggested code changes
    void releaseKey(uint16_t const key) const;
    ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:29:41: note: FIX-IT applied suggested code changes
    void releaseKey(uint16_t const key) const;
                                        ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:104:64: note: FIX-IT applied suggested code changes
void AlbaWindowsUserAutomation::releaseKey(uint16_t const key) const {
                                                               ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:151:33: warning: method 'setForegroundWindowWithClassName' can be made static [readability-convert-member-functions-to-static]
void AlbaWindowsUserAutomation::setForegroundWindowWithClassName(string_view const& className) const {
                                ^                                                              ~~~~~~
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:34:5: note: FIX-IT applied suggested code changes
    void setForegroundWindowWithClassName(std::string_view const& className) const;
    ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:34:78: note: FIX-IT applied suggested code changes
    void setForegroundWindowWithClassName(std::string_view const& className) const;
                                                                             ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:151:96: note: FIX-IT applied suggested code changes
void AlbaWindowsUserAutomation::setForegroundWindowWithClassName(string_view const& className) const {
                                                                                               ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:164:33: warning: method 'setForegroundWindowWithWindowName' can be made static [readability-convert-member-functions-to-static]
void AlbaWindowsUserAutomation::setForegroundWindowWithWindowName(string_view const& windowName) const {
                                ^                                                                ~~~~~~
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:35:5: note: FIX-IT applied suggested code changes
    void setForegroundWindowWithWindowName(std::string_view const& windowName) const;
    ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:35:80: note: FIX-IT applied suggested code changes
    void setForegroundWindowWithWindowName(std::string_view const& windowName) const;
                                                                               ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:164:98: note: FIX-IT applied suggested code changes
void AlbaWindowsUserAutomation::setForegroundWindowWithWindowName(string_view const& windowName) const {
                                                                                                 ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:219:66: warning: narrowing conversion from 'unsigned long long' to signed type 'streamsize' (aka 'long long') is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                outputBitmapFile.write(startOfBitmapDataPointer, sizeOfBitmapData);
                                                                 ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:231:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return MousePosition(mouse.x, mouse.y);
           ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:238:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return string(className);
           ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:261:33: warning: method 'isLetterPressed' can be made static [readability-convert-member-functions-to-static]
bool AlbaWindowsUserAutomation::isLetterPressed(char const letter) const { return isKeyPressed(::toupper(letter)); }
                                ^                                  ~~~~~~
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:45:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] bool isLetterPressed(char const letter) const;
                  ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation/AlbaWindowsUserAutomation.hpp:45:59: note: FIX-IT applied suggested code changes
    [[nodiscard]] bool isLetterPressed(char const letter) const;
                                                          ^
D:\a\aprg\aprg\AprgLocalUserAutomation\AprgLocalUserAutomation\srcWindows\UserAutomation\AlbaWindowsUserAutomation.cpp:261:68: note: FIX-IT applied suggested code changes
bool AlbaWindowsUserAutomation::isLetterPressed(char const letter) const { return isKeyPressed(::toupper(letter)); }
                                                                   ^
[54/89] Linking CXX static library APRG_LOCAL_USER_AUTOMATION.lib
[55/89] Building CXX object CMakeFiles/CHESS_UTILITIES.dir/D_/a/aprg/aprg/Chess/ChessUtilities/ChessUtilities/src/ChessUtilities/Board/Board.cpp.obj
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:45:9: warning: variable 'letterChar' of type 'char' can be declared 'const' [misc-const-correctness]
        char letterChar = tolower(text[0]);
        ^
             const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:45:14: note: FIX-IT applied suggested code changes
        char letterChar = tolower(text[0]);
             ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:45:27: warning: narrowing conversion from 'int' to signed type 'char' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        char letterChar = tolower(text[0]);
                          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:46:9: warning: variable 'numberChar' of type 'char' can be declared 'const' [misc-const-correctness]
        char numberChar = text[1];
        ^
             const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:46:14: note: FIX-IT applied suggested code changes
        char numberChar = text[1];
             ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:76:5: warning: variable 'pieceToCapture' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceToCapture(getPieceAt(coordinate));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:76:11: note: FIX-IT applied suggested code changes
    Piece pieceToCapture(getPieceAt(coordinate));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:87:13: warning: variable 'sameCount' of type 'int' can be declared 'const' [misc-const-correctness]
            int sameCount = min(counts[ai].attack, counts[di].defend);
            ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:87:17: note: FIX-IT applied suggested code changes
            int sameCount = min(counts[ai].attack, counts[di].defend);
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:148:5: warning: variable 'castleType' of type 'CastleType' can be declared 'const' [misc-const-correctness]
    CastleType castleType(getCastleTypeWithAlgebraicNotation(text));
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:148:16: note: FIX-IT applied suggested code changes
    CastleType castleType(getCastleTypeWithAlgebraicNotation(text));
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:186:5: warning: variable 'startpoint' of type 'CoordinateDataType' (aka 'int') can be declared 'const' [misc-const-correctness]
    CoordinateDataType startpoint = (BoardOrientation::BlackUpWhiteDown == m_orientation)   ? 0
    ^
                       const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:186:24: note: FIX-IT applied suggested code changes
    CoordinateDataType startpoint = (BoardOrientation::BlackUpWhiteDown == m_orientation)   ? 0
                       ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:189:5: warning: variable 'end' of type 'CoordinateDataType' (aka 'int') can be declared 'const' [misc-const-correctness]
    CoordinateDataType end = (BoardOrientation::WhiteUpBlackDown == m_orientation)   ? 0
    ^
                       const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:189:24: note: FIX-IT applied suggested code changes
    CoordinateDataType end = (BoardOrientation::WhiteUpBlackDown == m_orientation)   ? 0
                       ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:200:5: warning: variable 'interval' of type 'CoordinateDataType' (aka 'int') can be declared 'const' [misc-const-correctness]
    CoordinateDataType interval = startpoint <= end ? 1 : -1;
    ^
                       const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:200:24: note: FIX-IT applied suggested code changes
    CoordinateDataType interval = startpoint <= end ? 1 : -1;
                       ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:204:13: warning: variable 'coordinate' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
            Coordinate coordinate(x, y);
            ^
                       const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:204:24: note: FIX-IT applied suggested code changes
            Coordinate coordinate(x, y);
                       ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:205:13: warning: variable 'piece' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece piece(getPieceAt(coordinate));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:205:19: note: FIX-IT applied suggested code changes
            Piece piece(getPieceAt(coordinate));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:229:9: warning: variable 'pieceAtWhiteKing' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtWhiteKing(getPieceAt(Coordinate(4, 7)));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:229:15: note: FIX-IT applied suggested code changes
        Piece pieceAtWhiteKing(getPieceAt(Coordinate(4, 7)));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:230:9: warning: variable 'pieceAtWhiteRookOnKingSide' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtWhiteRookOnKingSide(getPieceAt(Coordinate(7, 7)));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:230:15: note: FIX-IT applied suggested code changes
        Piece pieceAtWhiteRookOnKingSide(getPieceAt(Coordinate(7, 7)));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:231:9: warning: variable 'pieceAtWhiteRookOnQueenSide' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtWhiteRookOnQueenSide(getPieceAt(Coordinate(0, 7)));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:231:15: note: FIX-IT applied suggested code changes
        Piece pieceAtWhiteRookOnQueenSide(getPieceAt(Coordinate(0, 7)));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:232:9: warning: variable 'pieceAtBlackKing' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtBlackKing(getPieceAt(Coordinate(4, 0)));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:232:15: note: FIX-IT applied suggested code changes
        Piece pieceAtBlackKing(getPieceAt(Coordinate(4, 0)));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:233:9: warning: variable 'pieceAtBlackRookOnKingSide' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtBlackRookOnKingSide(getPieceAt(Coordinate(7, 0)));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:233:15: note: FIX-IT applied suggested code changes
        Piece pieceAtBlackRookOnKingSide(getPieceAt(Coordinate(7, 0)));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:234:9: warning: variable 'pieceAtBlackRookOnQueenSide' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtBlackRookOnQueenSide(getPieceAt(Coordinate(0, 0)));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:234:15: note: FIX-IT applied suggested code changes
        Piece pieceAtBlackRookOnQueenSide(getPieceAt(Coordinate(0, 0)));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:252:9: warning: variable 'pieceAtWhiteKing' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtWhiteKing(getPieceAt(Coordinate(3, 0)));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:252:15: note: FIX-IT applied suggested code changes
        Piece pieceAtWhiteKing(getPieceAt(Coordinate(3, 0)));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:253:9: warning: variable 'pieceAtWhiteRookOnKingSide' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtWhiteRookOnKingSide(getPieceAt(Coordinate(0, 0)));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:253:15: note: FIX-IT applied suggested code changes
        Piece pieceAtWhiteRookOnKingSide(getPieceAt(Coordinate(0, 0)));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:254:9: warning: variable 'pieceAtWhiteRookOnQueenSide' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtWhiteRookOnQueenSide(getPieceAt(Coordinate(7, 0)));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:254:15: note: FIX-IT applied suggested code changes
        Piece pieceAtWhiteRookOnQueenSide(getPieceAt(Coordinate(7, 0)));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:255:9: warning: variable 'pieceAtBlackKing' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtBlackKing(getPieceAt(Coordinate(3, 7)));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:255:15: note: FIX-IT applied suggested code changes
        Piece pieceAtBlackKing(getPieceAt(Coordinate(3, 7)));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:256:9: warning: variable 'pieceAtBlackRookOnKingSide' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtBlackRookOnKingSide(getPieceAt(Coordinate(0, 7)));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:256:15: note: FIX-IT applied suggested code changes
        Piece pieceAtBlackRookOnKingSide(getPieceAt(Coordinate(0, 7)));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:257:9: warning: variable 'pieceAtBlackRookOnQueenSide' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtBlackRookOnQueenSide(getPieceAt(Coordinate(7, 7)));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:257:15: note: FIX-IT applied suggested code changes
        Piece pieceAtBlackRookOnQueenSide(getPieceAt(Coordinate(7, 7)));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:289:5: warning: variable 'kingAndRookCastlingMovePair' of type 'MovePair' (aka 'pair<pair<AlbaXY<int>, AlbaXY<int>>, pair<AlbaXY<int>, AlbaXY<int>>>') can be declared 'const' [misc-const-correctness]
    MovePair kingAndRookCastlingMovePair(getMatchingCastlingKingAndRookMovePair(move));
    ^
             const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:289:14: note: FIX-IT applied suggested code changes
    MovePair kingAndRookCastlingMovePair(getMatchingCastlingKingAndRookMovePair(move));
             ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:296:5: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtEnd(getPieceAt(endpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:296:11: note: FIX-IT applied suggested code changes
    Piece pieceAtEnd(getPieceAt(endpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:299:9: warning: variable 'opponentsColor' of type 'PieceColor' can be declared 'const' [misc-const-correctness]
        PieceColor opponentsColor(getOppositeColor(pieceAtEnd.getColor()));
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:299:20: note: FIX-IT applied suggested code changes
        PieceColor opponentsColor(getOppositeColor(pieceAtEnd.getColor()));
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:328:5: warning: variable 'kingAndRookCastlingMovePair' of type 'MovePair' (aka 'pair<pair<AlbaXY<int>, AlbaXY<int>>, pair<AlbaXY<int>, AlbaXY<int>>>') can be declared 'const' [misc-const-correctness]
    MovePair kingAndRookCastlingMovePair(getMatchingCastlingKingAndRookMovePair(move));
    ^
             const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:328:14: note: FIX-IT applied suggested code changes
    MovePair kingAndRookCastlingMovePair(getMatchingCastlingKingAndRookMovePair(move));
             ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:334:13: warning: variable 'opponentPawnLocation' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
            Coordinate opponentPawnLocation{move.second.getX(), move.first.getY()};
            ^
                       const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:334:24: note: FIX-IT applied suggested code changes
            Coordinate opponentPawnLocation{move.second.getX(), move.first.getY()};
                       ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:401:5: warning: variable 'moveDelta' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    Coordinate moveDelta = move.second - move.first;
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:401:16: note: FIX-IT applied suggested code changes
    Coordinate moveDelta = move.second - move.first;
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:406:5: warning: variable 'moveDelta' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    Coordinate moveDelta = move.second - move.first;
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:406:16: note: FIX-IT applied suggested code changes
    Coordinate moveDelta = move.second - move.first;
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:412:5: warning: variable 'lDeltas' of type 'Coordinates' (aka 'vector<AlbaXY<int>>') can be declared 'const' [misc-const-correctness]
    Coordinates lDeltas(getLDeltaCoordinates());
    ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:412:17: note: FIX-IT applied suggested code changes
    Coordinates lDeltas(getLDeltaCoordinates());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:418:5: warning: variable 'moveDelta' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    Coordinate moveDelta = move.second - move.first;
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:418:16: note: FIX-IT applied suggested code changes
    Coordinate moveDelta = move.second - move.first;
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:424:5: warning: variable 'moveDelta' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    Coordinate moveDelta = endpoint - startpoint;
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:424:16: note: FIX-IT applied suggested code changes
    Coordinate moveDelta = endpoint - startpoint;
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:425:5: warning: variable 'oneIncrementDelta' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    Coordinate oneIncrementDelta(getOneIncrement(moveDelta.getX()), getOneIncrement(moveDelta.getY()));
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:425:16: note: FIX-IT applied suggested code changes
    Coordinate oneIncrementDelta(getOneIncrement(moveDelta.getX()), getOneIncrement(moveDelta.getY()));
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:576:9: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtStart(getPieceAt(possibleMove.first));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:576:15: note: FIX-IT applied suggested code changes
        Piece pieceAtStart(getPieceAt(possibleMove.first));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:599:5: warning: variable 'rookMoveDistance' of type 'CoordinateDataType' (aka 'int') can be declared 'const' [misc-const-correctness]
    CoordinateDataType rookMoveDistance = CastleType::KingSideCastle == castleType    ? 2
    ^
                       const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:599:24: note: FIX-IT applied suggested code changes
    CoordinateDataType rookMoveDistance = CastleType::KingSideCastle == castleType    ? 2
                       ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:602:5: warning: variable 'castlingPairs' of type 'MovePairs' (aka 'vector<pair<pair<AlbaXY<int>, AlbaXY<int>>, pair<AlbaXY<int>, AlbaXY<int>>>>') can be declared 'const' [misc-const-correctness]
    MovePairs castlingPairs(getCastlingKingAndRookMovePairs(moveColor));
    ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:602:15: note: FIX-IT applied suggested code changes
    MovePairs castlingPairs(getCastlingKingAndRookMovePairs(moveColor));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:615:5: warning: variable 'pieceAtKing' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtKing(getPieceAt(kingMoveThatShouldMatch.first));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:615:11: note: FIX-IT applied suggested code changes
    Piece pieceAtKing(getPieceAt(kingMoveThatShouldMatch.first));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:616:5: warning: variable 'kingAndRookMovePairs' of type 'MovePairs' (aka 'vector<pair<pair<AlbaXY<int>, AlbaXY<int>>, pair<AlbaXY<int>, AlbaXY<int>>>>') can be declared 'const' [misc-const-correctness]
    MovePairs kingAndRookMovePairs(getCastlingKingAndRookMovePairs(pieceAtKing.getColor()));
    ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:616:15: note: FIX-IT applied suggested code changes
    MovePairs kingAndRookMovePairs(getCastlingKingAndRookMovePairs(pieceAtKing.getColor()));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:632:13: warning: variable 'pieceAtKing' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtKing(getPieceAt(Coordinate(4, 0)));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:632:19: note: FIX-IT applied suggested code changes
            Piece pieceAtKing(getPieceAt(Coordinate(4, 0)));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:633:13: warning: variable 'pieceAtQueenSideRook' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtQueenSideRook(getPieceAt(Coordinate(0, 0)));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:633:19: note: FIX-IT applied suggested code changes
            Piece pieceAtQueenSideRook(getPieceAt(Coordinate(0, 0)));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:634:13: warning: variable 'pieceAtKingSideRook' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtKingSideRook(getPieceAt(Coordinate(7, 0)));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:634:19: note: FIX-IT applied suggested code changes
            Piece pieceAtKingSideRook(getPieceAt(Coordinate(7, 0)));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:644:13: warning: variable 'pieceAtKing' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtKing(getPieceAt(Coordinate(4, 7)));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:644:19: note: FIX-IT applied suggested code changes
            Piece pieceAtKing(getPieceAt(Coordinate(4, 7)));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:645:13: warning: variable 'pieceAtQueenSideRook' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtQueenSideRook(getPieceAt(Coordinate(0, 7)));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:645:19: note: FIX-IT applied suggested code changes
            Piece pieceAtQueenSideRook(getPieceAt(Coordinate(0, 7)));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:646:13: warning: variable 'pieceAtKingSideRook' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtKingSideRook(getPieceAt(Coordinate(7, 7)));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:646:19: note: FIX-IT applied suggested code changes
            Piece pieceAtKingSideRook(getPieceAt(Coordinate(7, 7)));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:658:13: warning: variable 'pieceAtKing' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtKing(getPieceAt(Coordinate(3, 0)));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:658:19: note: FIX-IT applied suggested code changes
            Piece pieceAtKing(getPieceAt(Coordinate(3, 0)));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:659:13: warning: variable 'pieceAtQueenSideRook' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtQueenSideRook(getPieceAt(Coordinate(0, 0)));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:659:19: note: FIX-IT applied suggested code changes
            Piece pieceAtQueenSideRook(getPieceAt(Coordinate(0, 0)));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:660:13: warning: variable 'pieceAtKingSideRook' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtKingSideRook(getPieceAt(Coordinate(7, 0)));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:660:19: note: FIX-IT applied suggested code changes
            Piece pieceAtKingSideRook(getPieceAt(Coordinate(7, 0)));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:670:13: warning: variable 'pieceAtKing' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtKing(getPieceAt(Coordinate(3, 7)));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:670:19: note: FIX-IT applied suggested code changes
            Piece pieceAtKing(getPieceAt(Coordinate(3, 7)));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:671:13: warning: variable 'pieceAtQueenSideRook' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtQueenSideRook(getPieceAt(Coordinate(0, 7)));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:671:19: note: FIX-IT applied suggested code changes
            Piece pieceAtQueenSideRook(getPieceAt(Coordinate(0, 7)));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:672:13: warning: variable 'pieceAtKingSideRook' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtKingSideRook(getPieceAt(Coordinate(7, 7)));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:672:19: note: FIX-IT applied suggested code changes
            Piece pieceAtKingSideRook(getPieceAt(Coordinate(7, 7)));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:689:5: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtEnd(getPieceAt(endpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:689:11: note: FIX-IT applied suggested code changes
    Piece pieceAtEnd(getPieceAt(endpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:744:9: warning: variable 'c' of type 'char' can be declared 'const' [misc-const-correctness]
        char c = *it;
        ^
             const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:744:14: note: FIX-IT applied suggested code changes
        char c = *it;
             ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:825:5: warning: variable 'moveDelta' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    Coordinate moveDelta = endpoint - startpoint;
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:825:16: note: FIX-IT applied suggested code changes
    Coordinate moveDelta = endpoint - startpoint;
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:826:5: warning: variable 'oneIncrementDelta' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    Coordinate oneIncrementDelta(getOneIncrement(moveDelta.getX()), getOneIncrement(moveDelta.getY()));
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:826:16: note: FIX-IT applied suggested code changes
    Coordinate oneIncrementDelta(getOneIncrement(moveDelta.getX()), getOneIncrement(moveDelta.getY()));
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:830:19: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        result += getMovesToThis(cellInBetween, blockingPieceColor, maxSize - result).size();
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:837:5: warning: variable 'piece' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece piece(getPieceAt(move.first));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:837:11: note: FIX-IT applied suggested code changes
    Piece piece(getPieceAt(move.first));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:900:5: warning: variable 'kingAndRookCastlingMovePair' of type 'MovePair' (aka 'pair<pair<AlbaXY<int>, AlbaXY<int>>, pair<AlbaXY<int>, AlbaXY<int>>>') can be declared 'const' [misc-const-correctness]
    MovePair kingAndRookCastlingMovePair(getMatchingCastlingKingAndRookMovePair(move));
    ^
             const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:900:14: note: FIX-IT applied suggested code changes
    MovePair kingAndRookCastlingMovePair(getMatchingCastlingKingAndRookMovePair(move));
             ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:901:5: warning: variable 'kingMove' of type 'Move' (aka 'pair<AlbaXY<int>, AlbaXY<int>>') can be declared 'const' [misc-const-correctness]
    Move kingMove(kingAndRookCastlingMovePair.first);
    ^
         const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:901:10: note: FIX-IT applied suggested code changes
    Move kingMove(kingAndRookCastlingMovePair.first);
         ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:902:5: warning: variable 'rookMove' of type 'Move' (aka 'pair<AlbaXY<int>, AlbaXY<int>>') can be declared 'const' [misc-const-correctness]
    Move rookMove(kingAndRookCastlingMovePair.second);
    ^
         const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:902:10: note: FIX-IT applied suggested code changes
    Move rookMove(kingAndRookCastlingMovePair.second);
         ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:909:9: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtStart(getPieceAt(move.first));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:909:15: note: FIX-IT applied suggested code changes
        Piece pieceAtStart(getPieceAt(move.first));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:910:9: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtEnd(getPieceAt(move.second));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:910:15: note: FIX-IT applied suggested code changes
        Piece pieceAtEnd(getPieceAt(move.second));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:912:13: warning: variable 'moveDelta' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
            Coordinate moveDelta = move.second - move.first;
            ^
                       const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:912:24: note: FIX-IT applied suggested code changes
            Coordinate moveDelta = move.second - move.first;
                       ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:913:13: warning: variable 'range' of type 'DeltaRange' can be declared 'const' [misc-const-correctness]
            DeltaRange range = getPawnNonCaptureDeltaRange(move.first, pieceAtStart.getColor());
            ^
                       const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:913:24: note: FIX-IT applied suggested code changes
            DeltaRange range = getPawnNonCaptureDeltaRange(move.first, pieceAtStart.getColor());
                       ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:927:5: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtStart(getPieceAt(move.first));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:927:11: note: FIX-IT applied suggested code changes
    Piece pieceAtStart(getPieceAt(move.first));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:928:5: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtEnd(getPieceAt(move.second));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:928:11: note: FIX-IT applied suggested code changes
    Piece pieceAtEnd(getPieceAt(move.second));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:931:9: warning: variable 'pawnCaptureDeltas' of type 'Coordinates' (aka 'vector<AlbaXY<int>>') can be declared 'const' [misc-const-correctness]
        Coordinates pawnCaptureDeltas(getPawnCapturesDeltaCoordinates(pieceAtStart.getColor()));
        ^
                    const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:931:21: note: FIX-IT applied suggested code changes
        Coordinates pawnCaptureDeltas(getPawnCapturesDeltaCoordinates(pieceAtStart.getColor()));
                    ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:941:5: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtStart(getPieceAt(move.first));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:941:11: note: FIX-IT applied suggested code changes
    Piece pieceAtStart(getPieceAt(move.first));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:942:5: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtEnd(getPieceAt(move.second));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:942:11: note: FIX-IT applied suggested code changes
    Piece pieceAtEnd(getPieceAt(move.second));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:947:21: warning: variable 'opponentPawn' of type 'Piece' can be declared 'const' [misc-const-correctness]
                    Piece opponentPawn(getPieceAt({move.second.getX(), move.first.getY()}));
                    ^
                          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:947:27: note: FIX-IT applied suggested code changes
                    Piece opponentPawn(getPieceAt({move.second.getX(), move.first.getY()}));
                          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:952:21: warning: variable 'opponentPawn' of type 'Piece' can be declared 'const' [misc-const-correctness]
                    Piece opponentPawn(getPieceAt({move.second.getX(), move.first.getY()}));
                    ^
                          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:952:27: note: FIX-IT applied suggested code changes
                    Piece opponentPawn(getPieceAt({move.second.getX(), move.first.getY()}));
                          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:959:21: warning: variable 'opponentPawn' of type 'Piece' can be declared 'const' [misc-const-correctness]
                    Piece opponentPawn(getPieceAt({move.second.getX(), move.first.getY()}));
                    ^
                          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:959:27: note: FIX-IT applied suggested code changes
                    Piece opponentPawn(getPieceAt({move.second.getX(), move.first.getY()}));
                          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:964:21: warning: variable 'opponentPawn' of type 'Piece' can be declared 'const' [misc-const-correctness]
                    Piece opponentPawn(getPieceAt({move.second.getX(), move.first.getY()}));
                    ^
                          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:964:27: note: FIX-IT applied suggested code changes
                    Piece opponentPawn(getPieceAt({move.second.getX(), move.first.getY()}));
                          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:979:5: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtStart(getPieceAt(move.first));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:979:11: note: FIX-IT applied suggested code changes
    Piece pieceAtStart(getPieceAt(move.first));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:980:5: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtEnd(getPieceAt(move.second));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:980:11: note: FIX-IT applied suggested code changes
    Piece pieceAtEnd(getPieceAt(move.second));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:999:5: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtStart(getPieceAt(startpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:999:11: note: FIX-IT applied suggested code changes
    Piece pieceAtStart(getPieceAt(startpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1038:5: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtStart(getPieceAt(startpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1038:11: note: FIX-IT applied suggested code changes
    Piece pieceAtStart(getPieceAt(startpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1040:9: warning: variable 'endpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate endpoint(startpoint + delta);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1040:20: note: FIX-IT applied suggested code changes
        Coordinate endpoint(startpoint + delta);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1042:13: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtEnd(getPieceAt(endpoint));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1042:19: note: FIX-IT applied suggested code changes
            Piece pieceAtEnd(getPieceAt(endpoint));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1071:5: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtStart(getPieceAt(startpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1071:11: note: FIX-IT applied suggested code changes
    Piece pieceAtStart(getPieceAt(startpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1072:5: warning: variable 'range' of type 'DeltaRange' can be declared 'const' [misc-const-correctness]
    DeltaRange range = getPawnNonCaptureDeltaRange(startpoint, pieceAtStart.getColor());
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1072:16: note: FIX-IT applied suggested code changes
    DeltaRange range = getPawnNonCaptureDeltaRange(startpoint, pieceAtStart.getColor());
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1074:9: warning: variable 'endpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate endpoint(startpoint.getX(), startpoint.getY() + deltaY);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1074:20: note: FIX-IT applied suggested code changes
        Coordinate endpoint(startpoint.getX(), startpoint.getY() + deltaY);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1076:13: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtEnd(getPieceAt(endpoint));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1076:19: note: FIX-IT applied suggested code changes
            Piece pieceAtEnd(getPieceAt(endpoint));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1091:5: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtStart(getPieceAt(startpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1091:11: note: FIX-IT applied suggested code changes
    Piece pieceAtStart(getPieceAt(startpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1093:9: warning: variable 'endpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate endpoint(startpoint + delta);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1093:20: note: FIX-IT applied suggested code changes
        Coordinate endpoint(startpoint + delta);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1095:13: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtEnd(getPieceAt(endpoint));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1095:19: note: FIX-IT applied suggested code changes
            Piece pieceAtEnd(getPieceAt(endpoint));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1122:5: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtStart(getPieceAt(startpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1122:11: note: FIX-IT applied suggested code changes
    Piece pieceAtStart(getPieceAt(startpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1123:5: warning: variable 'opponentsColor' of type 'PieceColor' can be declared 'const' [misc-const-correctness]
    PieceColor opponentsColor(getOppositeColor(pieceAtStart.getColor()));
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1123:16: note: FIX-IT applied suggested code changes
    PieceColor opponentsColor(getOppositeColor(pieceAtStart.getColor()));
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1125:9: warning: variable 'endpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate endpoint(startpoint + delta);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1125:20: note: FIX-IT applied suggested code changes
        Coordinate endpoint(startpoint + delta);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1127:13: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtEnd(getPieceAt(endpoint));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1127:19: note: FIX-IT applied suggested code changes
            Piece pieceAtEnd(getPieceAt(endpoint));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1140:5: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtStart(getPieceAt(startpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1140:11: note: FIX-IT applied suggested code changes
    Piece pieceAtStart(getPieceAt(startpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1156:9: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtStart(getPieceAt(startpoint));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1156:15: note: FIX-IT applied suggested code changes
        Piece pieceAtStart(getPieceAt(startpoint));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1158:13: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtEnd(getPieceAt(endpoint));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1158:19: note: FIX-IT applied suggested code changes
            Piece pieceAtEnd(getPieceAt(endpoint));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1179:5: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtEnd(getPieceAt(endpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1179:11: note: FIX-IT applied suggested code changes
    Piece pieceAtEnd(getPieceAt(endpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1195:5: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtEnd(getPieceAt(endpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1195:11: note: FIX-IT applied suggested code changes
    Piece pieceAtEnd(getPieceAt(endpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1205:5: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtEnd(getPieceAt(endpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1205:11: note: FIX-IT applied suggested code changes
    Piece pieceAtEnd(getPieceAt(endpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1219:5: warning: variable 'range' of type 'DeltaRange' can be declared 'const' [misc-const-correctness]
    DeltaRange range = getPawnReverseNonCaptureDeltaRange(endpoint, moveColor);
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1219:16: note: FIX-IT applied suggested code changes
    DeltaRange range = getPawnReverseNonCaptureDeltaRange(endpoint, moveColor);
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1221:9: warning: variable 'startpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate startpoint(endpoint.getX(), endpoint.getY() + deltaY);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1221:20: note: FIX-IT applied suggested code changes
        Coordinate startpoint(endpoint.getX(), endpoint.getY() + deltaY);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1222:9: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtStart(getPieceAt(startpoint));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1222:15: note: FIX-IT applied suggested code changes
        Piece pieceAtStart(getPieceAt(startpoint));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1234:9: warning: variable 'startpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate startpoint = endpoint + delta;
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1234:20: note: FIX-IT applied suggested code changes
        Coordinate startpoint = endpoint + delta;
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1235:9: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtStart(getPieceAt(startpoint));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1235:15: note: FIX-IT applied suggested code changes
        Piece pieceAtStart(getPieceAt(startpoint));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1250:21: warning: variable 'startpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
                    Coordinate startpoint = endpoint + delta;
                    ^
                               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1250:32: note: FIX-IT applied suggested code changes
                    Coordinate startpoint = endpoint + delta;
                               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1251:21: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
                    Piece pieceAtStart(getPieceAt(startpoint));
                    ^
                          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1251:27: note: FIX-IT applied suggested code changes
                    Piece pieceAtStart(getPieceAt(startpoint));
                          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1252:21: warning: variable 'opponentPawn' of type 'Piece' can be declared 'const' [misc-const-correctness]
                    Piece opponentPawn(getPieceAt({endpoint.getX(), startpoint.getY()}));
                    ^
                          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1252:27: note: FIX-IT applied suggested code changes
                    Piece opponentPawn(getPieceAt({endpoint.getX(), startpoint.getY()}));
                          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1263:21: warning: variable 'startpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
                    Coordinate startpoint = endpoint + delta;
                    ^
                               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1263:32: note: FIX-IT applied suggested code changes
                    Coordinate startpoint = endpoint + delta;
                               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1264:21: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
                    Piece pieceAtStart(getPieceAt(startpoint));
                    ^
                          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1264:27: note: FIX-IT applied suggested code changes
                    Piece pieceAtStart(getPieceAt(startpoint));
                          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1265:21: warning: variable 'opponentPawn' of type 'Piece' can be declared 'const' [misc-const-correctness]
                    Piece opponentPawn(getPieceAt({endpoint.getX(), startpoint.getY()}));
                    ^
                          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1265:27: note: FIX-IT applied suggested code changes
                    Piece opponentPawn(getPieceAt({endpoint.getX(), startpoint.getY()}));
                          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1278:21: warning: variable 'startpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
                    Coordinate startpoint = endpoint + delta;
                    ^
                               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1278:32: note: FIX-IT applied suggested code changes
                    Coordinate startpoint = endpoint + delta;
                               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1279:21: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
                    Piece pieceAtStart(getPieceAt(startpoint));
                    ^
                          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1279:27: note: FIX-IT applied suggested code changes
                    Piece pieceAtStart(getPieceAt(startpoint));
                          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1280:21: warning: variable 'opponentPawn' of type 'Piece' can be declared 'const' [misc-const-correctness]
                    Piece opponentPawn(getPieceAt({endpoint.getX(), startpoint.getY()}));
                    ^
                          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1280:27: note: FIX-IT applied suggested code changes
                    Piece opponentPawn(getPieceAt({endpoint.getX(), startpoint.getY()}));
                          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1291:21: warning: variable 'startpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
                    Coordinate startpoint = endpoint + delta;
                    ^
                               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1291:32: note: FIX-IT applied suggested code changes
                    Coordinate startpoint = endpoint + delta;
                               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1292:21: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
                    Piece pieceAtStart(getPieceAt(startpoint));
                    ^
                          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1292:27: note: FIX-IT applied suggested code changes
                    Piece pieceAtStart(getPieceAt(startpoint));
                          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1293:21: warning: variable 'opponentPawn' of type 'Piece' can be declared 'const' [misc-const-correctness]
                    Piece opponentPawn(getPieceAt({endpoint.getX(), startpoint.getY()}));
                    ^
                          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1293:27: note: FIX-IT applied suggested code changes
                    Piece opponentPawn(getPieceAt({endpoint.getX(), startpoint.getY()}));
                          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1317:9: warning: variable 'startpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate startpoint = endpoint + delta;
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1317:20: note: FIX-IT applied suggested code changes
        Coordinate startpoint = endpoint + delta;
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1318:9: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtStart(getPieceAt(startpoint));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1318:15: note: FIX-IT applied suggested code changes
        Piece pieceAtStart(getPieceAt(startpoint));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1332:13: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtStart(getPieceAt(startpoint));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1332:19: note: FIX-IT applied suggested code changes
            Piece pieceAtStart(getPieceAt(startpoint));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1352:13: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtStart(getPieceAt(startpoint));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1352:19: note: FIX-IT applied suggested code changes
            Piece pieceAtStart(getPieceAt(startpoint));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1373:13: warning: variable 'startpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
            Coordinate startpoint = endpoint + delta;
            ^
                       const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1373:24: note: FIX-IT applied suggested code changes
            Coordinate startpoint = endpoint + delta;
                       ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1374:13: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtStart(getPieceAt(startpoint));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1374:19: note: FIX-IT applied suggested code changes
            Piece pieceAtStart(getPieceAt(startpoint));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1384:5: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtEnd(getPieceAt(endpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1384:11: note: FIX-IT applied suggested code changes
    Piece pieceAtEnd(getPieceAt(endpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1385:5: warning: variable 'sameColor' of type 'PieceColor' can be declared 'const' [misc-const-correctness]
    PieceColor sameColor(pieceAtEnd.getColor());
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1385:16: note: FIX-IT applied suggested code changes
    PieceColor sameColor(pieceAtEnd.getColor());
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1386:5: warning: variable 'oppositeColor' of type 'PieceColor' can be declared 'const' [misc-const-correctness]
    PieceColor oppositeColor(getOppositeColor(pieceAtEnd.getColor()));
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1386:16: note: FIX-IT applied suggested code changes
    PieceColor oppositeColor(getOppositeColor(pieceAtEnd.getColor()));
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1388:9: warning: variable 'startpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate startpoint = endpoint + delta;
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1388:20: note: FIX-IT applied suggested code changes
        Coordinate startpoint = endpoint + delta;
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1389:9: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtStart(getPieceAt(startpoint));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1389:15: note: FIX-IT applied suggested code changes
        Piece pieceAtStart(getPieceAt(startpoint));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1395:9: warning: variable 'startpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate startpoint = endpoint + delta;
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1395:20: note: FIX-IT applied suggested code changes
        Coordinate startpoint = endpoint + delta;
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1396:9: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtStart(getPieceAt(startpoint));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1396:15: note: FIX-IT applied suggested code changes
        Piece pieceAtStart(getPieceAt(startpoint));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1404:5: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtEnd(getPieceAt(endpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1404:11: note: FIX-IT applied suggested code changes
    Piece pieceAtEnd(getPieceAt(endpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1405:5: warning: variable 'sameColor' of type 'PieceColor' can be declared 'const' [misc-const-correctness]
    PieceColor sameColor(pieceAtEnd.getColor());
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1405:16: note: FIX-IT applied suggested code changes
    PieceColor sameColor(pieceAtEnd.getColor());
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1406:5: warning: variable 'oppositeColor' of type 'PieceColor' can be declared 'const' [misc-const-correctness]
    PieceColor oppositeColor(getOppositeColor(pieceAtEnd.getColor()));
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1406:16: note: FIX-IT applied suggested code changes
    PieceColor oppositeColor(getOppositeColor(pieceAtEnd.getColor()));
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1408:9: warning: variable 'startpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate startpoint = endpoint + delta;
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1408:20: note: FIX-IT applied suggested code changes
        Coordinate startpoint = endpoint + delta;
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1409:9: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtStart(getPieceAt(startpoint));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1409:15: note: FIX-IT applied suggested code changes
        Piece pieceAtStart(getPieceAt(startpoint));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1418:5: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtEnd(getPieceAt(endpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1418:11: note: FIX-IT applied suggested code changes
    Piece pieceAtEnd(getPieceAt(endpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1419:5: warning: variable 'sameColor' of type 'PieceColor' can be declared 'const' [misc-const-correctness]
    PieceColor sameColor(pieceAtEnd.getColor());
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1419:16: note: FIX-IT applied suggested code changes
    PieceColor sameColor(pieceAtEnd.getColor());
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1420:5: warning: variable 'oppositeColor' of type 'PieceColor' can be declared 'const' [misc-const-correctness]
    PieceColor oppositeColor(getOppositeColor(pieceAtEnd.getColor()));
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1420:16: note: FIX-IT applied suggested code changes
    PieceColor oppositeColor(getOppositeColor(pieceAtEnd.getColor()));
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1424:13: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtStart(getPieceAt(startpoint));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1424:19: note: FIX-IT applied suggested code changes
            Piece pieceAtStart(getPieceAt(startpoint));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1441:5: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtEnd(getPieceAt(endpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1441:11: note: FIX-IT applied suggested code changes
    Piece pieceAtEnd(getPieceAt(endpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1442:5: warning: variable 'sameColor' of type 'PieceColor' can be declared 'const' [misc-const-correctness]
    PieceColor sameColor(pieceAtEnd.getColor());
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1442:16: note: FIX-IT applied suggested code changes
    PieceColor sameColor(pieceAtEnd.getColor());
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1443:5: warning: variable 'oppositeColor' of type 'PieceColor' can be declared 'const' [misc-const-correctness]
    PieceColor oppositeColor(getOppositeColor(pieceAtEnd.getColor()));
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1443:16: note: FIX-IT applied suggested code changes
    PieceColor oppositeColor(getOppositeColor(pieceAtEnd.getColor()));
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1447:13: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece pieceAtStart(getPieceAt(startpoint));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1447:19: note: FIX-IT applied suggested code changes
            Piece pieceAtStart(getPieceAt(startpoint));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1463:5: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtEnd(getPieceAt(endpoint));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1463:11: note: FIX-IT applied suggested code changes
    Piece pieceAtEnd(getPieceAt(endpoint));
          ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1464:5: warning: variable 'sameColor' of type 'PieceColor' can be declared 'const' [misc-const-correctness]
    PieceColor sameColor(pieceAtEnd.getColor());
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1464:16: note: FIX-IT applied suggested code changes
    PieceColor sameColor(pieceAtEnd.getColor());
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1465:5: warning: variable 'oppositeColor' of type 'PieceColor' can be declared 'const' [misc-const-correctness]
    PieceColor oppositeColor(getOppositeColor(pieceAtEnd.getColor()));
    ^
               const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1465:16: note: FIX-IT applied suggested code changes
    PieceColor oppositeColor(getOppositeColor(pieceAtEnd.getColor()));
               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1467:9: warning: variable 'startpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate startpoint = endpoint + delta;
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1467:20: note: FIX-IT applied suggested code changes
        Coordinate startpoint = endpoint + delta;
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1468:9: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece pieceAtStart(getPieceAt(startpoint));
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1468:15: note: FIX-IT applied suggested code changes
        Piece pieceAtStart(getPieceAt(startpoint));
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1486:9: warning: variable 'endpoint' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate endpoint(details.lastX.value(), details.lastY.value());
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1486:20: note: FIX-IT applied suggested code changes
        Coordinate endpoint(details.lastX.value(), details.lastY.value());
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1488:13: warning: variable 'candidateMove' of type 'Move' (aka 'pair<AlbaXY<int>, AlbaXY<int>>') can be declared 'const' [misc-const-correctness]
            Move candidateMove{{details.firstX.value(), details.firstY.value()}, endpoint};
            ^
                 const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1488:18: note: FIX-IT applied suggested code changes
            Move candidateMove{{details.firstX.value(), details.firstY.value()}, endpoint};
                 ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1493:13: warning: variable 'candidateMoves' of type 'Moves' (aka 'vector<pair<AlbaXY<int>, AlbaXY<int>>>') can be declared 'const' [misc-const-correctness]
            Moves candidateMoves(getCandidatesMoves(endpoint, moveColor, details.pieceType));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1493:19: note: FIX-IT applied suggested code changes
            Moves candidateMoves(getCandidatesMoves(endpoint, moveColor, details.pieceType));
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1521:9: warning: variable 'attack' of type 'Move' (aka 'pair<AlbaXY<int>, AlbaXY<int>>') can be declared 'const' [misc-const-correctness]
        Move attack = attacks.back();
        ^
             const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1521:14: note: FIX-IT applied suggested code changes
        Move attack = attacks.back();
             ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1522:9: warning: variable 'attackingPiece' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece attackingPiece = getPieceAt(attack.first);
        ^
              const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1522:15: note: FIX-IT applied suggested code changes
        Piece attackingPiece = getPieceAt(attack.first);
              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1525:13: warning: variable 'opponentsColor' of type 'PieceColor' can be declared 'const' [misc-const-correctness]
            PieceColor opponentsColor = getOppositeColor(getPieceAt(attack.first).getColor());
            ^
                       const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\Board.cpp:1525:24: note: FIX-IT applied suggested code changes
            PieceColor opponentsColor = getOppositeColor(getPieceAt(attack.first).getColor());
                       ^
[56/89] Building CXX object CMakeFiles/CHESS_UTILITIES.dir/D_/a/aprg/aprg/Chess/ChessUtilities/ChessUtilities/src/ChessUtilities/Board/BoardUtilities.cpp.obj
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardUtilities.cpp:116:50: warning: narrowing conversion from 'int' to signed type 'char' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    result = (PieceColor::White == pieceColor) ? toupper(result) : result;
                                                 ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardUtilities.cpp:116:68: warning: narrowing conversion from 'int' to signed type 'char' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    result = (PieceColor::White == pieceColor) ? toupper(result) : result;
                                                                   ^
[57/89] Building CXX object CMakeFiles/CHESS_UTILITIES.dir/D_/a/aprg/aprg/Chess/ChessUtilities/ChessUtilities/src/ChessUtilities/Board/BoardValue.cpp.obj
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:81:9: warning: variable 'c01' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c01 = getCorrectCoordinate(board, coordinates[i].first, coordinates[i].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:81:20: note: FIX-IT applied suggested code changes
        Coordinate c01 = getCorrectCoordinate(board, coordinates[i].first, coordinates[i].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:82:9: warning: variable 'c02' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c02 = getCorrectCoordinate(board, coordinates[i + 1].first, coordinates[i + 1].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:82:20: note: FIX-IT applied suggested code changes
        Coordinate c02 = getCorrectCoordinate(board, coordinates[i + 1].first, coordinates[i + 1].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:83:9: warning: variable 'c03' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c03 = getCorrectCoordinate(board, coordinates[i + 2].first, coordinates[i + 2].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:83:20: note: FIX-IT applied suggested code changes
        Coordinate c03 = getCorrectCoordinate(board, coordinates[i + 2].first, coordinates[i + 2].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:84:9: warning: variable 'c04' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c04 = getCorrectCoordinate(board, coordinates[i + 3].first, coordinates[i + 3].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:84:20: note: FIX-IT applied suggested code changes
        Coordinate c04 = getCorrectCoordinate(board, coordinates[i + 3].first, coordinates[i + 3].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:85:9: warning: variable 'c05' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c05 = getCorrectCoordinate(board, coordinates[i + 4].first, coordinates[i + 4].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:85:20: note: FIX-IT applied suggested code changes
        Coordinate c05 = getCorrectCoordinate(board, coordinates[i + 4].first, coordinates[i + 4].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:86:9: warning: variable 'c06' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c06 = getCorrectCoordinate(board, coordinates[i + 5].first, coordinates[i + 5].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:86:20: note: FIX-IT applied suggested code changes
        Coordinate c06 = getCorrectCoordinate(board, coordinates[i + 5].first, coordinates[i + 5].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:87:9: warning: variable 'c07' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c07 = getCorrectCoordinate(board, coordinates[i + 6].first, coordinates[i + 6].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:87:20: note: FIX-IT applied suggested code changes
        Coordinate c07 = getCorrectCoordinate(board, coordinates[i + 6].first, coordinates[i + 6].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:88:9: warning: variable 'c08' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c08 = getCorrectCoordinate(board, coordinates[i + 7].first, coordinates[i + 7].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:88:20: note: FIX-IT applied suggested code changes
        Coordinate c08 = getCorrectCoordinate(board, coordinates[i + 7].first, coordinates[i + 7].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:89:9: warning: variable 'c09' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c09 = getCorrectCoordinate(board, coordinates[i + 8].first, coordinates[i + 8].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:89:20: note: FIX-IT applied suggested code changes
        Coordinate c09 = getCorrectCoordinate(board, coordinates[i + 8].first, coordinates[i + 8].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:90:9: warning: variable 'c10' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c10 = getCorrectCoordinate(board, coordinates[i + 9].first, coordinates[i + 9].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:90:20: note: FIX-IT applied suggested code changes
        Coordinate c10 = getCorrectCoordinate(board, coordinates[i + 9].first, coordinates[i + 9].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:91:9: warning: variable 'c11' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c11 = getCorrectCoordinate(board, coordinates[i + 10].first, coordinates[i + 10].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:91:20: note: FIX-IT applied suggested code changes
        Coordinate c11 = getCorrectCoordinate(board, coordinates[i + 10].first, coordinates[i + 10].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:92:9: warning: variable 'c12' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c12 = getCorrectCoordinate(board, coordinates[i + 11].first, coordinates[i + 11].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:92:20: note: FIX-IT applied suggested code changes
        Coordinate c12 = getCorrectCoordinate(board, coordinates[i + 11].first, coordinates[i + 11].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:93:9: warning: variable 'c13' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c13 = getCorrectCoordinate(board, coordinates[i + 12].first, coordinates[i + 12].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:93:20: note: FIX-IT applied suggested code changes
        Coordinate c13 = getCorrectCoordinate(board, coordinates[i + 12].first, coordinates[i + 12].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:94:9: warning: variable 'c14' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c14 = getCorrectCoordinate(board, coordinates[i + 13].first, coordinates[i + 13].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:94:20: note: FIX-IT applied suggested code changes
        Coordinate c14 = getCorrectCoordinate(board, coordinates[i + 13].first, coordinates[i + 13].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:95:9: warning: variable 'c15' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c15 = getCorrectCoordinate(board, coordinates[i + 14].first, coordinates[i + 14].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:95:20: note: FIX-IT applied suggested code changes
        Coordinate c15 = getCorrectCoordinate(board, coordinates[i + 14].first, coordinates[i + 14].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:96:9: warning: variable 'c16' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate c16 = getCorrectCoordinate(board, coordinates[i + 15].first, coordinates[i + 15].second);
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:96:20: note: FIX-IT applied suggested code changes
        Coordinate c16 = getCorrectCoordinate(board, coordinates[i + 15].first, coordinates[i + 15].second);
                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:97:9: warning: variable 'nibble01' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble01 = static_cast<uint8_t>(board.getPieceAt(c01).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:97:17: note: FIX-IT applied suggested code changes
        uint8_t nibble01 = static_cast<uint8_t>(board.getPieceAt(c01).getColorAndType());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:98:9: warning: variable 'nibble02' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble02 = static_cast<uint8_t>(board.getPieceAt(c02).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:98:17: note: FIX-IT applied suggested code changes
        uint8_t nibble02 = static_cast<uint8_t>(board.getPieceAt(c02).getColorAndType());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:99:9: warning: variable 'nibble03' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble03 = static_cast<uint8_t>(board.getPieceAt(c03).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:99:17: note: FIX-IT applied suggested code changes
        uint8_t nibble03 = static_cast<uint8_t>(board.getPieceAt(c03).getColorAndType());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:100:9: warning: variable 'nibble04' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble04 = static_cast<uint8_t>(board.getPieceAt(c04).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:100:17: note: FIX-IT applied suggested code changes
        uint8_t nibble04 = static_cast<uint8_t>(board.getPieceAt(c04).getColorAndType());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:101:9: warning: variable 'nibble05' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble05 = static_cast<uint8_t>(board.getPieceAt(c05).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:101:17: note: FIX-IT applied suggested code changes
        uint8_t nibble05 = static_cast<uint8_t>(board.getPieceAt(c05).getColorAndType());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:102:9: warning: variable 'nibble06' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble06 = static_cast<uint8_t>(board.getPieceAt(c06).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:102:17: note: FIX-IT applied suggested code changes
        uint8_t nibble06 = static_cast<uint8_t>(board.getPieceAt(c06).getColorAndType());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:103:9: warning: variable 'nibble07' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble07 = static_cast<uint8_t>(board.getPieceAt(c07).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:103:17: note: FIX-IT applied suggested code changes
        uint8_t nibble07 = static_cast<uint8_t>(board.getPieceAt(c07).getColorAndType());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:104:9: warning: variable 'nibble08' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble08 = static_cast<uint8_t>(board.getPieceAt(c08).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:104:17: note: FIX-IT applied suggested code changes
        uint8_t nibble08 = static_cast<uint8_t>(board.getPieceAt(c08).getColorAndType());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:105:9: warning: variable 'nibble09' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble09 = static_cast<uint8_t>(board.getPieceAt(c09).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:105:17: note: FIX-IT applied suggested code changes
        uint8_t nibble09 = static_cast<uint8_t>(board.getPieceAt(c09).getColorAndType());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:106:9: warning: variable 'nibble10' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble10 = static_cast<uint8_t>(board.getPieceAt(c10).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:106:17: note: FIX-IT applied suggested code changes
        uint8_t nibble10 = static_cast<uint8_t>(board.getPieceAt(c10).getColorAndType());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:107:9: warning: variable 'nibble11' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble11 = static_cast<uint8_t>(board.getPieceAt(c11).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:107:17: note: FIX-IT applied suggested code changes
        uint8_t nibble11 = static_cast<uint8_t>(board.getPieceAt(c11).getColorAndType());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:108:9: warning: variable 'nibble12' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble12 = static_cast<uint8_t>(board.getPieceAt(c12).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:108:17: note: FIX-IT applied suggested code changes
        uint8_t nibble12 = static_cast<uint8_t>(board.getPieceAt(c12).getColorAndType());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:109:9: warning: variable 'nibble13' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble13 = static_cast<uint8_t>(board.getPieceAt(c13).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:109:17: note: FIX-IT applied suggested code changes
        uint8_t nibble13 = static_cast<uint8_t>(board.getPieceAt(c13).getColorAndType());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:110:9: warning: variable 'nibble14' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble14 = static_cast<uint8_t>(board.getPieceAt(c14).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:110:17: note: FIX-IT applied suggested code changes
        uint8_t nibble14 = static_cast<uint8_t>(board.getPieceAt(c14).getColorAndType());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:111:9: warning: variable 'nibble15' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble15 = static_cast<uint8_t>(board.getPieceAt(c15).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:111:17: note: FIX-IT applied suggested code changes
        uint8_t nibble15 = static_cast<uint8_t>(board.getPieceAt(c15).getColorAndType());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:112:9: warning: variable 'nibble16' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
        uint8_t nibble16 = static_cast<uint8_t>(board.getPieceAt(c16).getColorAndType());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Board\BoardValue.cpp:112:17: note: FIX-IT applied suggested code changes
        uint8_t nibble16 = static_cast<uint8_t>(board.getPieceAt(c16).getColorAndType());
                ^
[58/89] Building CXX object CMakeFiles/CHESS_UTILITIES.dir/D_/a/aprg/aprg/Chess/ChessUtilities/ChessUtilities/src/ChessUtilities/Board/Exchange.cpp.obj
[59/89] Building CXX object CMakeFiles/CHESS_UTILITIES.dir/D_/a/aprg/aprg/Chess/ChessUtilities/ChessUtilities/src/ChessUtilities/Board/Piece.cpp.obj
[60/89] Building CXX object CMakeFiles/CHESS_UTILITIES.dir/D_/a/aprg/aprg/Chess/ChessUtilities/ChessUtilities/src/ChessUtilities/Board/StreamOperators.cpp.obj
[61/89] Building CXX object CMakeFiles/CHESS_UTILITIES.dir/D_/a/aprg/aprg/Chess/ChessUtilities/ChessUtilities/src/ChessUtilities/ChessEngineControllerWithUci.cpp.obj
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineControllerWithUci.cpp:13:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineControllerWithUci.cpp:13:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineControllerWithUci.cpp:312:1: note: FIX-IT applied suggested code changes
}  // namespace chess
^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineControllerWithUci.cpp:21:7: warning: initializer for member 'm_additionalStepsInCalculationMonitoring' is redundant [readability-redundant-member-init]
      m_additionalStepsInCalculationMonitoring(),
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineControllerWithUci.cpp:21:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineControllerWithUci.cpp:22:7: warning: initializer for member 'm_logFileStreamOptional' is redundant [readability-redundant-member-init]
      m_logFileStreamOptional(),
      ^~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineControllerWithUci.cpp:22:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineControllerWithUci.cpp:27:7: warning: initializer for member 'm_pendingCommands' is redundant [readability-redundant-member-init]
      m_pendingCommands() {
      ^~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineControllerWithUci.cpp:27:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineControllerWithUci.cpp:173:9: warning: variable 'pendingCommand' of type 'Command' can be declared 'const' [misc-const-correctness]
        Command pendingCommand(m_pendingCommands.front());
        ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineControllerWithUci.cpp:173:17: note: FIX-IT applied suggested code changes
        Command pendingCommand(m_pendingCommands.front());
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineControllerWithUci.cpp:267:5: warning: variable 'stringToProcess' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
    string stringToProcess(getStringWithoutStartingAndTrailingWhiteSpace(stringFromEngine));
    ^
           const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineControllerWithUci.cpp:267:12: note: FIX-IT applied suggested code changes
    string stringToProcess(getStringWithoutStartingAndTrailingWhiteSpace(stringFromEngine));
           ^
[62/89] Building CXX object CMakeFiles/CHESS_UTILITIES.dir/D_/a/aprg/aprg/Chess/ChessUtilities/ChessUtilities/src/ChessUtilities/ChessEngineHandler.cpp.obj
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:14:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:14:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:221:1: note: FIX-IT applied suggested code changes
}  // namespace chess
^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:20:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
typedef struct _mydata {
^~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:20:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:24:13: warning: use 'using' instead of 'typedef' [modernize-use-using]
CallBackData,
            ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:24:13: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:28:5: warning: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
    PointerToCallBackData pointerToCallBackData = (PointerToCallBackData)lpParam;
    ^~~~~~~~~~~~~~~~~~~~~
    auto
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:28:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:28:51: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
    PointerToCallBackData pointerToCallBackData = (PointerToCallBackData)lpParam;
                                                  ^~~~~~~~~~~~~~~~~~~~~~~
                                                  static_cast<PointerToCallBackData>( )
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:28:51: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:28:81: note: FIX-IT applied suggested code changes
    PointerToCallBackData pointerToCallBackData = (PointerToCallBackData)lpParam;
                                                                                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:29:5: warning: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
    ChessEngineHandler* chessEngineHandlerPointer =
    ^~~~~~~~~~~~~~~~~~
    auto
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:29:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:39:12: warning: implicit conversion bool -> 'int' [readability-implicit-bool-conversion]
    return (osv.dwPlatformId == VER_PLATFORM_WIN32_NT);
           ^
           static_cast<int>
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:39:12: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:45:7: warning: initializer for member 'm_readMutex' is redundant [readability-redundant-member-init]
      m_readMutex(),
      ^~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:45:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:69:28: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'long' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    long remainingLength = stringToWrite.length();
                           ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:72:24: warning: implicit conversion 'BOOL' (aka 'int') -> bool [readability-implicit-bool-conversion]
        isSuccessful = WriteFile(m_inputStreamOnHandler, stringToWrite.c_str(), remainingLength, &bytesWritten, NULL);
                       ^
                       (                                                                                              != 0)
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:72:24: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:72:118: note: FIX-IT applied suggested code changes
        isSuccessful = WriteFile(m_inputStreamOnHandler, stringToWrite.c_str(), remainingLength, &bytesWritten, NULL);
                                                                                                                     ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:72:113: warning: use nullptr [modernize-use-nullptr]
        isSuccessful = WriteFile(m_inputStreamOnHandler, stringToWrite.c_str(), remainingLength, &bytesWritten, NULL);
                                                                                                                ^~~~
                                                                                                                nullptr
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:72:113: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:74:31: warning: narrowing conversion from 'DWORD' (aka 'unsigned long') to signed type 'long' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
            remainingLength = remainingLength - bytesWritten;
                              ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:99:80: warning: use nullptr [modernize-use-nullptr]
        PeekNamedPipe(m_outputStreamOnHandler, buffer.data(), MAX_BUFFER_SIZE, NULL, &bytesAvailable, NULL);
                                                                               ^~~~
                                                                               nullptr
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:99:80: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:99:103: warning: use nullptr [modernize-use-nullptr]
        PeekNamedPipe(m_outputStreamOnHandler, buffer.data(), MAX_BUFFER_SIZE, NULL, &bytesAvailable, NULL);
                                                                                                      ^~~~
                                                                                                      nullptr
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:99:103: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:101:91: warning: use nullptr [modernize-use-nullptr]
            ReadFile(m_outputStreamOnHandler, buffer.data(), MAX_BUFFER_SIZE, &bytesRead, NULL);
                                                                                          ^~~~
                                                                                          nullptr
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:101:91: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:108:17: warning: variable 'startIndex' of type 'int' can be declared 'const' [misc-const-correctness]
                int startIndex = currentIndex;
                ^
                    const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:108:21: note: FIX-IT applied suggested code changes
                int startIndex = currentIndex;
                    ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:109:17: warning: variable 'newLineIndex' of type 'int' can be declared 'const' [misc-const-correctness]
                int newLineIndex = stringBuffer.find_first_of("\r\n", startIndex);
                ^
                    const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:109:21: note: FIX-IT applied suggested code changes
                int newLineIndex = stringBuffer.find_first_of("\r\n", startIndex);
                    ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:109:36: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                int newLineIndex = stringBuffer.find_first_of("\r\n", startIndex);
                                   ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:111:21: warning: variable 'oneLine' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
                    string oneLine(stringBuffer.substr(startIndex, newLineIndex - startIndex));
                    ^
                           const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:111:28: note: FIX-IT applied suggested code changes
                    string oneLine(stringBuffer.substr(startIndex, newLineIndex - startIndex));
                           ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:145:28: warning: method 'getLogHeader' can be made static [readability-convert-member-functions-to-static]
string ChessEngineHandler::getLogHeader(LogType const logtype) const {
                           ^                                   ~~~~~~
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities/ChessEngineHandler.hpp:30:5: note: FIX-IT applied suggested code changes
    std::string getLogHeader(LogType const logtype) const;
    ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities/ChessEngineHandler.hpp:30:53: note: FIX-IT applied suggested code changes
    std::string getLogHeader(LogType const logtype) const;
                                                    ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:145:64: note: FIX-IT applied suggested code changes
string ChessEngineHandler::getLogHeader(LogType const logtype) const {
                                                               ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:168:9: warning: implicit conversion 'int' -> bool [readability-implicit-bool-conversion]
    if (IsWinNT()) {
        ^
                  != 0
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:168:18: note: FIX-IT applied suggested code changes
    if (IsWinNT()) {
                 ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:170:59: warning: use nullptr [modernize-use-nullptr]
        SetSecurityDescriptorDacl(&securityDescriptor, 1, NULL, 0);
                                                          ^~~~
                                                          nullptr
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:170:59: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:173:51: warning: use nullptr [modernize-use-nullptr]
        securityAttributes.lpSecurityDescriptor = NULL;
                                                  ^~~~
                                                  nullptr
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:173:51: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:178:10: warning: implicit conversion 'BOOL' (aka 'int') -> bool [readability-implicit-bool-conversion]
    if (!CreatePipe(&(m_inputStreamOnEngineThread), &(m_inputStreamOnHandler), &securityAttributes, 0)) {
        ~^
                                                                                                       == 0
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:178:9: note: FIX-IT applied suggested code changes
    if (!CreatePipe(&(m_inputStreamOnEngineThread), &(m_inputStreamOnHandler), &securityAttributes, 0)) {
        ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:178:103: note: FIX-IT applied suggested code changes
    if (!CreatePipe(&(m_inputStreamOnEngineThread), &(m_inputStreamOnHandler), &securityAttributes, 0)) {
                                                                                                      ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:182:10: warning: implicit conversion 'BOOL' (aka 'int') -> bool [readability-implicit-bool-conversion]
    if (!CreatePipe(&(m_outputStreamOnHandler), &(m_outputStreamOnEngineThread), &securityAttributes, 0)) {
        ~^
                                                                                                         == 0
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:182:9: note: FIX-IT applied suggested code changes
    if (!CreatePipe(&(m_outputStreamOnHandler), &(m_outputStreamOnEngineThread), &securityAttributes, 0)) {
        ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:182:105: note: FIX-IT applied suggested code changes
    if (!CreatePipe(&(m_outputStreamOnHandler), &(m_outputStreamOnEngineThread), &securityAttributes, 0)) {
                                                                                                        ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:194:35: warning: use nullptr [modernize-use-nullptr]
            m_enginePath.c_str(), NULL, NULL, NULL, TRUE, CREATE_NEW_CONSOLE, NULL, NULL, &m_startupInfo,
                                  ^~~~
                                  nullptr
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:194:35: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:194:41: warning: use nullptr [modernize-use-nullptr]
            m_enginePath.c_str(), NULL, NULL, NULL, TRUE, CREATE_NEW_CONSOLE, NULL, NULL, &m_startupInfo,
                                        ^~~~
                                        nullptr
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:194:41: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:194:47: warning: use nullptr [modernize-use-nullptr]
            m_enginePath.c_str(), NULL, NULL, NULL, TRUE, CREATE_NEW_CONSOLE, NULL, NULL, &m_startupInfo,
                                              ^~~~
                                              nullptr
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:194:47: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:194:79: warning: use nullptr [modernize-use-nullptr]
            m_enginePath.c_str(), NULL, NULL, NULL, TRUE, CREATE_NEW_CONSOLE, NULL, NULL, &m_startupInfo,
                                                                              ^~~~
                                                                              nullptr
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:194:79: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:194:85: warning: use nullptr [modernize-use-nullptr]
            m_enginePath.c_str(), NULL, NULL, NULL, TRUE, CREATE_NEW_CONSOLE, NULL, NULL, &m_startupInfo,
                                                                                    ^~~~
                                                                                    nullptr
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:194:85: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:198:5: warning: use auto when initializing with new to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
    PointerToCallBackData pData = new CallBackData();
    ^~~~~~~~~~~~~~~~~~~~~
    auto
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:198:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:200:45: warning: use nullptr [modernize-use-nullptr]
    m_engineMonitoringThread = CreateThread(NULL, 0, engineMonitoringCallbackFunction, pData, 0, &(m_threadId));
                                            ^~~~
                                            nullptr
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\ChessEngineHandler.cpp:200:45: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessUtilities/ChessUtilities/src/ChessUtilities/ChessEngineHandler.cpp:34:5: warning: 'GetVersionExA' is deprecated [-Wdeprecated-declarations]
    GetVersionEx(&osv);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\sysinfoapi.h:411:23: note: expanded from macro 'GetVersionEx'
#define GetVersionEx  GetVersionExA
                      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\sysinfoapi.h:390:1: note: 'GetVersionExA' has been explicitly marked deprecated here
NOT_BUILD_WINDOWS_DEPRECATE
^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\sysinfoapi.h:37:49: note: expanded from macro 'NOT_BUILD_WINDOWS_DEPRECATE'
# define NOT_BUILD_WINDOWS_DEPRECATE __declspec(deprecated)
                                                ^
1 warning generated.
[63/89] Building CXX object CMakeFiles/CHESS_UTILITIES.dir/D_/a/aprg/aprg/Chess/ChessUtilities/ChessUtilities/src/ChessUtilities/Engine/CalculationDetailsEqualityOperators.cpp.obj
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Engine\CalculationDetailsEqualityOperators.cpp:3:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Engine\CalculationDetailsEqualityOperators.cpp:3:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Engine\CalculationDetailsEqualityOperators.cpp:12:1: note: FIX-IT applied suggested code changes
}  // namespace chess
^
[64/89] Building CXX object CMakeFiles/CHESS_UTILITIES.dir/D_/a/aprg/aprg/Chess/ChessUtilities/ChessUtilities/src/ChessUtilities/Uci/UciInterpreter.cpp.obj
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Uci\UciInterpreter.cpp:8:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Uci\UciInterpreter.cpp:8:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Uci\UciInterpreter.cpp:112:1: note: FIX-IT applied suggested code changes
}  // namespace chess
^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Uci\UciInterpreter.cpp:29:5: warning: variable 'infoDetails' of type 'InfoDetails' can be declared 'const' [misc-const-correctness]
    InfoDetails infoDetails(createInfoDetailsFromInfoTokens(infoTokens));
    ^
                const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Uci\UciInterpreter.cpp:29:17: note: FIX-IT applied suggested code changes
    InfoDetails infoDetails(createInfoDetailsFromInfoTokens(infoTokens));
                ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Uci\UciInterpreter.cpp:64:9: warning: variable 'variation' of type 'Variation' can be declared 'const' [misc-const-correctness]
        Variation variation{infoDetails.mateValue, infoDetails.scoreInCentipawns, infoDetails.pvHalfMoves};
        ^
                  const 
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Uci\UciInterpreter.cpp:64:19: note: FIX-IT applied suggested code changes
        Variation variation{infoDetails.mateValue, infoDetails.scoreInCentipawns, infoDetails.pvHalfMoves};
                  ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Uci\UciInterpreter.cpp:82:11: warning: do not use 'else' after 'break' [llvm-else-after-return,readability-else-after-return]
        } else if (isACommonParameter(token)) {
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Uci\UciInterpreter.cpp:82:11: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Uci\UciInterpreter.cpp:100:22: warning: method 'shouldSkipTheEntireInfo' can be made static [readability-convert-member-functions-to-static]
bool UciInterpreter::shouldSkipTheEntireInfo(string const& token) {
                     ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Uci/UciInterpreter.hpp:29:5: note: FIX-IT applied suggested code changes
    bool shouldSkipTheEntireInfo(std::string const& token);
    ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Uci\UciInterpreter.cpp:106:22: warning: method 'isACommonParameter' can be made static [readability-convert-member-functions-to-static]
bool UciInterpreter::isACommonParameter(string const& token) {
                     ^
D:\a\aprg\aprg\Chess\ChessUtilities\ChessUtilities\src\ChessUtilities\Uci/UciInterpreter.hpp:30:5: note: FIX-IT applied suggested code changes
    bool isACommonParameter(std::string const& token);
    ^
[65/89] Linking CXX static library CHESS_UTILITIES.lib
[66/89] Building CXX object CMakeFiles/ChessPeek.dir/src/ChessPeek/BoardObserver.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CommonTypes.hpp:7:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CommonTypes.hpp:7:1: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CommonTypes.hpp:14:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:6:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:6:1: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:45:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:17:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    Configuration(Type const type);
    ^
    explicit 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:17:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:18:5: warning: function 'getUciOptionNamesAndValuePairs' should be marked [[nodiscard]] [modernize-use-nodiscard]
    stringHelper::StringPairs const& getUciOptionNamesAndValuePairs() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:18:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:19:5: warning: function 'getType' should be marked [[nodiscard]] [modernize-use-nodiscard]
    Type getType() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:19:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:20:5: warning: function 'getTopLeftOfBoard' should be marked [[nodiscard]] [modernize-use-nodiscard]
    XY getTopLeftOfBoard() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:20:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:21:5: warning: function 'getBottomRightOfBoard' should be marked [[nodiscard]] [modernize-use-nodiscard]
    XY getBottomRightOfBoard() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:21:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:22:5: warning: function 'getChessEnginePath' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string const& getChessEnginePath() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:22:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:23:5: warning: function 'getScreenShotPath' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string const& getScreenShotPath() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:23:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:24:5: warning: function 'getWhiteColorLimit' should be marked [[nodiscard]] [modernize-use-nodiscard]
    double getWhiteColorLimit() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:24:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:25:5: warning: function 'getBlackColorLimit' should be marked [[nodiscard]] [modernize-use-nodiscard]
    double getBlackColorLimit() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:25:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Utilities.hpp:8:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Utilities.hpp:8:1: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Utilities.hpp:19:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:11:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:11:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:321:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:28:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
    XY chessCellTopLeft, chessCellBottomRight;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:28:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:35:36: warning: converting integer literal to bool, use bool literal instead [modernize-use-bool-literals]
            result.set(63 - index, 1U);
                                   ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:35:36: warning: implicit conversion 'unsigned int' -> bool [readability-implicit-bool-conversion]
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:46:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return Piece(getBestPieceFromChessCellBitValue(getBitValueFromCell(xIndex, yIndex).to_ullong()));
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:51:5: warning: variable 'startX' of type 'double' can be declared 'const' [misc-const-correctness]
    double startX = m_configuration.getTopLeftOfBoard().getX();
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:51:12: note: FIX-IT applied suggested code changes
    double startX = m_configuration.getTopLeftOfBoard().getX();
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:52:5: warning: variable 'startY' of type 'double' can be declared 'const' [misc-const-correctness]
    double startY = m_configuration.getTopLeftOfBoard().getY();
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:52:12: note: FIX-IT applied suggested code changes
    double startY = m_configuration.getTopLeftOfBoard().getY();
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:53:5: warning: variable 'endX' of type 'double' can be declared 'const' [misc-const-correctness]
    double endX = m_configuration.getBottomRightOfBoard().getX();
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:53:12: note: FIX-IT applied suggested code changes
    double endX = m_configuration.getBottomRightOfBoard().getX();
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:54:5: warning: variable 'endY' of type 'double' can be declared 'const' [misc-const-correctness]
    double endY = m_configuration.getBottomRightOfBoard().getY();
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:54:12: note: FIX-IT applied suggested code changes
    double endY = m_configuration.getBottomRightOfBoard().getY();
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:55:5: warning: variable 'deltaX' of type 'double' can be declared 'const' [misc-const-correctness]
    double deltaX = (endX - startX) / 8;
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:55:12: note: FIX-IT applied suggested code changes
    double deltaX = (endX - startX) / 8;
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:56:5: warning: variable 'deltaY' of type 'double' can be declared 'const' [misc-const-correctness]
    double deltaY = (endY - startY) / 8;
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:56:12: note: FIX-IT applied suggested code changes
    double deltaY = (endY - startY) / 8;
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:89:9: warning: variable 'piece' of type 'PieceColorAndType' can be declared 'const' [misc-const-correctness]
        PieceColorAndType piece(pieceAndChessCellBitValuePair.first);
        ^
                          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:89:27: note: FIX-IT applied suggested code changes
        PieceColorAndType piece(pieceAndChessCellBitValuePair.first);
                          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:90:9: warning: variable 'pieceChessCellBitValue' of type 'uint64_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
        uint64_t pieceChessCellBitValue(pieceAndChessCellBitValuePair.second);
        ^
                 const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:90:18: note: FIX-IT applied suggested code changes
        uint64_t pieceChessCellBitValue(pieceAndChessCellBitValuePair.second);
                 ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:91:9: warning: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
        Count differenceCount =
        ^~~~~
        auto
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:91:9: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:91:9: warning: variable 'differenceCount' of type 'Count' (aka 'int') can be declared 'const' [misc-const-correctness]
        Count differenceCount =
        ^
              const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:91:15: note: FIX-IT applied suggested code changes
        Count differenceCount =
              ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:106:9: warning: implicit conversion 'const AlbaLocalScreenMonitoring *' -> bool [readability-implicit-bool-conversion]
    if (m_screenMonitoringPtr) {
        ^
                              != nullptr
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:106:30: note: FIX-IT applied suggested code changes
    if (m_screenMonitoringPtr) {
                             ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:108:16: warning: implicit conversion 'const AprgBitmap::BitmapSnippet *' -> bool [readability-implicit-bool-conversion]
    } else if (m_bitmapSnippetPtr) {
               ^
                                  != nullptr
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:108:34: note: FIX-IT applied suggested code changes
    } else if (m_bitmapSnippetPtr) {
                                 ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:119:5: warning: variable 'deltaX' of type 'int' can be declared 'const' [misc-const-correctness]
    int deltaX = chessCellBottomRight.getX() - chessCellTopLeft.getX();
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:119:9: note: FIX-IT applied suggested code changes
    int deltaX = chessCellBottomRight.getX() - chessCellTopLeft.getX();
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:120:5: warning: variable 'deltaY' of type 'int' can be declared 'const' [misc-const-correctness]
    int deltaY = chessCellBottomRight.getY() - chessCellTopLeft.getY();
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:120:9: note: FIX-IT applied suggested code changes
    int deltaY = chessCellBottomRight.getY() - chessCellTopLeft.getY();
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:121:5: warning: variable 'offsetInX' of type 'int' can be declared 'const' [misc-const-correctness]
    int offsetInX = getIntegerAfterRoundingADoubleValue<int>(
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:121:9: note: FIX-IT applied suggested code changes
    int offsetInX = getIntegerAfterRoundingADoubleValue<int>(
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:123:5: warning: variable 'offsetInY' of type 'int' can be declared 'const' [misc-const-correctness]
    int offsetInY = getIntegerAfterRoundingADoubleValue<int>(
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:123:9: note: FIX-IT applied suggested code changes
    int offsetInY = getIntegerAfterRoundingADoubleValue<int>(
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:125:5: warning: variable 'pointToCheck' of type 'XY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    XY pointToCheck{chessCellTopLeft.getX() + offsetInX, chessCellTopLeft.getY() + offsetInY};
    ^
       const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:125:8: note: FIX-IT applied suggested code changes
    XY pointToCheck{chessCellTopLeft.getX() + offsetInX, chessCellTopLeft.getY() + offsetInY};
       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:126:5: warning: variable 'colorToCheck' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
    uint32_t colorToCheck(getColorAt(pointToCheck.getX(), pointToCheck.getY()));
    ^
             const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:126:14: note: FIX-IT applied suggested code changes
    uint32_t colorToCheck(getColorAt(pointToCheck.getX(), pointToCheck.getY()));
             ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:131:13: warning: variable 'pointWithOffset' of type 'XY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
            XY pointWithOffset = pointToCheck + aroundOffset;
            ^
               const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:131:16: note: FIX-IT applied suggested code changes
            XY pointWithOffset = pointToCheck + aroundOffset;
               ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:142:13: warning: variable 'pointWithOffset' of type 'XY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
            XY pointWithOffset = pointToCheck + aroundOffset;
            ^
               const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:142:16: note: FIX-IT applied suggested code changes
            XY pointWithOffset = pointToCheck + aroundOffset;
               ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:297:5: warning: variable 'startX' of type 'double' can be declared 'const' [misc-const-correctness]
    double startX = m_configuration.getTopLeftOfBoard().getX();
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:297:12: note: FIX-IT applied suggested code changes
    double startX = m_configuration.getTopLeftOfBoard().getX();
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:298:5: warning: variable 'startY' of type 'double' can be declared 'const' [misc-const-correctness]
    double startY = m_configuration.getTopLeftOfBoard().getY();
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:298:12: note: FIX-IT applied suggested code changes
    double startY = m_configuration.getTopLeftOfBoard().getY();
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:299:5: warning: variable 'endX' of type 'double' can be declared 'const' [misc-const-correctness]
    double endX = m_configuration.getBottomRightOfBoard().getX();
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:299:12: note: FIX-IT applied suggested code changes
    double endX = m_configuration.getBottomRightOfBoard().getX();
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:300:5: warning: variable 'endY' of type 'double' can be declared 'const' [misc-const-correctness]
    double endY = m_configuration.getBottomRightOfBoard().getY();
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:300:12: note: FIX-IT applied suggested code changes
    double endY = m_configuration.getBottomRightOfBoard().getY();
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:301:5: warning: variable 'deltaX' of type 'double' can be declared 'const' [misc-const-correctness]
    double deltaX = (endX - startX) / 8;
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:301:12: note: FIX-IT applied suggested code changes
    double deltaX = (endX - startX) / 8;
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:302:5: warning: variable 'deltaY' of type 'double' can be declared 'const' [misc-const-correctness]
    double deltaY = (endY - startY) / 8;
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:302:12: note: FIX-IT applied suggested code changes
    double deltaY = (endY - startY) / 8;
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:303:5: warning: variable 'chessCellTopLeft' of type 'XY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    XY chessCellTopLeft{
    ^
       const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:303:8: note: FIX-IT applied suggested code changes
    XY chessCellTopLeft{
       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:305:5: warning: variable 'chessCellBottomRight' of type 'XY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    XY chessCellBottomRight{
    ^
       const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:305:8: note: FIX-IT applied suggested code changes
    XY chessCellBottomRight{
       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:309:5: warning: variable 'xLimit' of type 'int' can be declared 'const' [misc-const-correctness]
    int xLimit = chessCellBottomRight.getX() - chessCellTopLeft.getX();
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:309:9: note: FIX-IT applied suggested code changes
    int xLimit = chessCellBottomRight.getX() - chessCellTopLeft.getX();
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:310:5: warning: variable 'yLimit' of type 'int' can be declared 'const' [misc-const-correctness]
    int yLimit = chessCellBottomRight.getY() - chessCellTopLeft.getY();
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardObserver.cpp:310:9: note: FIX-IT applied suggested code changes
    int yLimit = chessCellBottomRight.getY() - chessCellTopLeft.getY();
        ^
[67/89] Building CXX object CMakeFiles/ChessPeek.dir/src/ChessPeek/BoardWithContext.cpp.obj
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardWithContext.cpp:7:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardWithContext.cpp:7:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardWithContext.cpp:86:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardWithContext.cpp:13:57: warning: initializer for member 'm_board' is redundant [readability-redundant-member-init]
BoardWithContext::BoardWithContext() : m_playerColor{}, m_board(), m_boardDetails{} {}
                                                        ^~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardWithContext.cpp:13:57: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardWithContext.cpp:73:13: warning: variable 'coordinate' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
            Coordinate coordinate(i, j);
            ^
                       const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardWithContext.cpp:73:24: note: FIX-IT applied suggested code changes
            Coordinate coordinate(i, j);
                       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardWithContext.cpp:74:13: warning: variable 'piece' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece piece(m_board.getPieceAt(coordinate));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\BoardWithContext.cpp:74:19: note: FIX-IT applied suggested code changes
            Piece piece(m_board.getPieceAt(coordinate));
                  ^
[68/89] Building CXX object CMakeFiles/ChessPeek.dir/src/ChessPeek/Book.cpp.obj
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Book.cpp:10:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Book.cpp:10:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Book.cpp:82:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Book.cpp:44:5: warning: variable 'boardValue' of type 'BoardValue' can be declared 'const' [misc-const-correctness]
    BoardValue boardValue(board);
    ^
               const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Book.cpp:44:16: note: FIX-IT applied suggested code changes
    BoardValue boardValue(board);
               ^
[69/89] Building CXX object CMakeFiles/ChessPeek.dir/src/ChessPeek/CalculationDetails.cpp.obj
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\CalculationDetails.cpp:7:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\CalculationDetails.cpp:7:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\CalculationDetails.cpp:20:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
[70/89] Building CXX object CMakeFiles/ChessPeek.dir/src/ChessPeek/ChessPeek.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:17:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:17:1: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:68:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:27:12: warning: constructor does not initialize these fields: condition [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
    struct CheckDetail {
           ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:44:5: warning: function 'getBitValueFromCell' should be marked [[nodiscard]] [modernize-use-nodiscard]
    BitSet64 getBitValueFromCell(int const xIndex, int const yIndex) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:44:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:45:5: warning: function 'getPieceFromCell' should be marked [[nodiscard]] [modernize-use-nodiscard]
    Piece getPieceFromCell(int const xIndex, int const yIndex) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:45:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:52:5: warning: function 'getBestPieceFromChessCellBitValue' should be marked [[nodiscard]] [modernize-use-nodiscard]
    PieceColorAndType getBestPieceFromChessCellBitValue(uint64_t const chessCellBitValue) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:52:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:53:5: warning: function 'getBestFitPiecesFromChessCellBitValue' should be marked [[nodiscard]] [modernize-use-nodiscard]
    PieceColorAndTypes getBestFitPiecesFromChessCellBitValue(uint64_t const chessCellBitValue) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:53:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:54:5: warning: function 'getColorAt' should be marked [[nodiscard]] [modernize-use-nodiscard]
    uint32_t getColorAt(int const x, int const y) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:54:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:55:5: warning: function 'isBitValueAsserted' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool isBitValueAsserted(
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:55:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:5:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:5:1: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:38:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:20:5: warning: function 'getBoard' should be marked [[nodiscard]] [modernize-use-nodiscard]
    Board const& getBoard() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:20:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:21:5: warning: function 'getPlayerKingCoordinate' should be marked [[nodiscard]] [modernize-use-nodiscard]
    Coordinate getPlayerKingCoordinate() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:21:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:22:5: warning: function 'getOpponentsKingCoordinate' should be marked [[nodiscard]] [modernize-use-nodiscard]
    Coordinate getOpponentsKingCoordinate() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:22:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:23:5: warning: function 'getPlayerColor' should be marked [[nodiscard]] [modernize-use-nodiscard]
    PieceColor getPlayerColor() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:23:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:24:5: warning: function 'getFenString' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string getFenString() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:24:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:25:5: warning: function 'isPlayersKingOnCheck' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool isPlayersKingOnCheck() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:25:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:26:5: warning: function 'isOpponentsKingOnCheck' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool isOpponentsKingOnCheck() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:26:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:10:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:10:1: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:44:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:34:5: warning: function 'getLine' should be marked [[nodiscard]] [modernize-use-nodiscard]
    LineDetailOptional getLine(Board const& board) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:34:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:35:5: warning: function 'getSize' should be marked [[nodiscard]] [modernize-use-nodiscard]
    size_t getSize() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:35:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CalculationDetails.hpp:5:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CalculationDetails.hpp:5:1: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CalculationDetails.hpp:20:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CalculationDetails.hpp:11:8: warning: constructor does not initialize these fields: depthInPlies [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
struct CalculationDetails {
       ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CalculationDetails.hpp:14:21: note: FIX-IT applied suggested code changes
    int depthInPlies;
                    ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CommonTypes.hpp:10:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [llvm-namespace-comment]
}  // namespace alba
 ^~~~~~~~~~~~~~~~~~~
  // namespace alba::chess::ChessPeek
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CommonTypes.hpp:10:2: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CommonTypes.hpp:7:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:41:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:6:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:7:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:7:1: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:54:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:27:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    DetailsFromTheScreen(Configuration const& configuration);
    ^
    explicit 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:27:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:28:5: warning: function 'getBoardWithContext' should be marked [[nodiscard]] [modernize-use-nodiscard]
    BoardWithContext const& getBoardWithContext() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:28:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:29:5: warning: function 'canAnalyzeBoard' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool canAnalyzeBoard() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:29:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:33:5: warning: function 'areKingsValid' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool areKingsValid() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:33:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsOnTheEngine.hpp:5:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsOnTheEngine.hpp:5:1: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsOnTheEngine.hpp:21:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsOnTheEngine.hpp:14:5: warning: function 'getBoardWithContext' should be marked [[nodiscard]] [modernize-use-nodiscard]
    BoardWithContext const& getBoardWithContext() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsOnTheEngine.hpp:14:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:5:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:5:1: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:72:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:40:5: warning: function 'getHumanScore' should be marked [[nodiscard]] [modernize-use-nodiscard]
    Score getHumanScore(MoveDetail const& moveDetail) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:40:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:53:5: warning: function 'getDataFromExchanges' should be marked [[nodiscard]] [modernize-use-nodiscard]
    DataFromExchanges getDataFromExchanges(Move const& move) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:53:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:54:5: warning: function 'getScoreLevelPart' should be marked [[nodiscard]] [modernize-use-nodiscard]
    Score getScoreLevelPart(MoveDetail const& moveDetail) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:54:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:55:5: warning: function 'getMoveTypePart' should be marked [[nodiscard]] [modernize-use-nodiscard]
    Score getMoveTypePart(Move const& move) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:55:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:56:5: warning: function 'getDistanceToKingPart' should be marked [[nodiscard]] [modernize-use-nodiscard]
    Score getDistanceToKingPart(Move const& move) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:56:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:57:5: warning: function 'getPiecePart' should be marked [[nodiscard]] [modernize-use-nodiscard]
    Score getPiecePart(Move const& move) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:57:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:58:5: warning: function 'getHumanScoreOfPiece' should be marked [[nodiscard]] [modernize-use-nodiscard]
    Score getHumanScoreOfPiece(PieceType const pieceType) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:58:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:59:5: warning: function 'getDistanceToKing' should be marked [[nodiscard]] [modernize-use-nodiscard]
    int getDistanceToKing(Coordinate const& coordinate) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:59:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:60:5: warning: function 'getScoreLevelDistance' should be marked [[nodiscard]] [modernize-use-nodiscard]
    int getScoreLevelDistance() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:60:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:61:5: warning: function 'isACaptureMove' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool isACaptureMove(Piece const pieceAtStart, Piece const pieceAtEnd) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:61:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:62:5: warning: function 'isSameValueExchange' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool isSameValueExchange(Piece const pieceAtStart, Piece const pieceAtEnd) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:62:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:63:5: warning: function 'isDevelopingMove' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool isDevelopingMove(Piece const pieceAtStart, Move const& move) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:63:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:64:5: warning: function 'isCastlingMove' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool isCastlingMove(Piece const pieceAtStart, Move const& move) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:64:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:65:5: warning: function 'isCheck' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool isCheck(Piece const pieceAtEnd) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:65:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:10:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:10:1: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:125:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:93:5: warning: function 'createBookMove' should be marked [[nodiscard]] [modernize-use-nodiscard]
    BookMove createBookMove(
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:93:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:95:5: warning: function 'getMovesFromBook' should be marked [[nodiscard]] [modernize-use-nodiscard]
    BookMoves getMovesFromBook() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:95:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:96:5: warning: function 'getMovesSequenceFromMoveString' should be marked [[nodiscard]] [modernize-use-nodiscard]
    MovesSequence getMovesSequenceFromMoveString(std::string const& moveString) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:96:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:97:5: warning: function 'createNextMove' should be marked [[nodiscard]] [modernize-use-nodiscard]
    NextMove createNextMove(Move const& move, Variation const& variation) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:97:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:98:5: warning: function 'getNextMovesFromCalculation' should be marked [[nodiscard]] [modernize-use-nodiscard]
    NextMoves getNextMovesFromCalculation() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:98:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:99:5: warning: function 'getBestAndWorstScores' should be marked [[nodiscard]] [modernize-use-nodiscard]
    ScorePair getBestAndWorstScores(Variations const& variations) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:99:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:100:5: warning: function 'getFirstCharOfABoardCell' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::optional<char> getFirstCharOfABoardCell(bool const isCertainPreMove, bool const isPossiblePreMove) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:100:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:101:5: warning: function 'getNameOfBookMove' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string getNameOfBookMove(Move const& move, Book::LineDetail const& lineDetail) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:101:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:102:5: warning: function 'getDisplayableString' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string getDisplayableString(NextMove const& nextMove) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:102:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:103:5: warning: function 'getDisplayableString' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string getDisplayableString(BookMove const& bookMove) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:103:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:104:5: warning: function 'getDisplayableString' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string getDisplayableString(MovesSequence const& movesSequence) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:104:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:105:5: warning: function 'getDisplayableString' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string getDisplayableString(
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:105:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:107:5: warning: function 'getDisplayableString' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string getDisplayableString(int const mateValue, int const engineScore) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:107:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:108:5: warning: function 'formatToHeaderString' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string formatToHeaderString(std::string const& content) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:108:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:109:5: warning: function 'getDisplayableStringForABoardCell' should be marked [[nodiscard]] [modernize-use-nodiscard]
    std::string getDisplayableStringForABoardCell(
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:109:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:111:5: warning: function 'getNextMovesString' should be marked [[nodiscard]] [modernize-use-nodiscard]
    stringHelper::strings getNextMovesString(NextMoves const& nextMoves, int const startIndex) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:111:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:112:5: warning: function 'getBookMovesString' should be marked [[nodiscard]] [modernize-use-nodiscard]
    stringHelper::strings getBookMovesString(BookMoves const& bookMoves) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:112:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:113:5: warning: function 'getNumberOfColumnsOfGrid' should be marked [[nodiscard]] [modernize-use-nodiscard]
    int getNumberOfColumnsOfGrid(int const numberOfBoards) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:113:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:114:5: warning: function 'getHorizontalBorderSize' should be marked [[nodiscard]] [modernize-use-nodiscard]
    int getHorizontalBorderSize(int const numberOfBoards) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:114:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:115:5: warning: function 'getRowSizeForHalfMoves' should be marked [[nodiscard]] [modernize-use-nodiscard]
    int getRowSizeForHalfMoves(int const numberOfHalfMoves) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:115:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:116:5: warning: function 'getRowSizeForFullMoves' should be marked [[nodiscard]] [modernize-use-nodiscard]
    int getRowSizeForFullMoves(int const numberOfFullMoves) const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:116:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:19:5: warning: variable 'userAutomation' of type 'alba::AlbaLocalUserAutomation' can be declared 'const' [misc-const-correctness]
    alba::AlbaLocalUserAutomation userAutomation;
    ^
                                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:19:35: note: FIX-IT applied suggested code changes
    alba::AlbaLocalUserAutomation userAutomation;
                                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:21:27: warning: static member accessed through instance [readability-static-accessed-through-instance]
        shouldStillRun = !userAutomation.isKeyPressed(VK_ESCAPE);
                          ^~~~~~~~~~~~~~~
                          alba::AlbaLocalUserAutomation::
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:21:27: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:28:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:28:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:195:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:39:7: warning: initializer for member 'm_detailsOnTheEngine' is redundant [readability-redundant-member-init]
      m_detailsOnTheEngine(),
      ^~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:39:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:84:5: warning: variable 'previousCalculationDetails' of type 'CalculationDetails' can be declared 'const' [misc-const-correctness]
    CalculationDetails previousCalculationDetails = m_calculationDetails;
    ^
                       const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:84:24: note: FIX-IT applied suggested code changes
    CalculationDetails previousCalculationDetails = m_calculationDetails;
                       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:100:13: warning: variable 'coordinate' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
            Coordinate coordinate(i, j);
            ^
                       const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:100:24: note: FIX-IT applied suggested code changes
            Coordinate coordinate(i, j);
                       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:101:13: warning: variable 'oldPiece' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece oldPiece(oldBoard.getPieceAt(coordinate));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:101:19: note: FIX-IT applied suggested code changes
            Piece oldPiece(oldBoard.getPieceAt(coordinate));
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:102:13: warning: variable 'newPiece' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece newPiece(newBoard.getPieceAt(coordinate));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:102:19: note: FIX-IT applied suggested code changes
            Piece newPiece(newBoard.getPieceAt(coordinate));
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:112:9: warning: variable 'coordinate1' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate coordinate1(changedCoordinates.front());
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:112:20: note: FIX-IT applied suggested code changes
        Coordinate coordinate1(changedCoordinates.front());
                   ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:113:9: warning: variable 'coordinate2' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate coordinate2(changedCoordinates.back());
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:113:20: note: FIX-IT applied suggested code changes
        Coordinate coordinate2(changedCoordinates.back());
                   ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:114:9: warning: variable 'isPossibleMove1' of type 'bool' can be declared 'const' [misc-const-correctness]
        bool isPossibleMove1 = oldBoard.isAPossibleMove({coordinate1, coordinate2});
        ^
             const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:114:14: note: FIX-IT applied suggested code changes
        bool isPossibleMove1 = oldBoard.isAPossibleMove({coordinate1, coordinate2});
             ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:115:9: warning: variable 'isPossibleMove2' of type 'bool' can be declared 'const' [misc-const-correctness]
        bool isPossibleMove2 = oldBoard.isAPossibleMove({coordinate2, coordinate1});
        ^
             const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ChessPeek.cpp:115:14: note: FIX-IT applied suggested code changes
        bool isPossibleMove2 = oldBoard.isAPossibleMove({coordinate2, coordinate1});
             ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src/ChessPeek/ChessPeek.cpp:19:41: warning: unused variable 'userAutomation' [-Wunused-variable]
    alba::AlbaLocalUserAutomation const userAutomation;
                                        ^
1 warning generated.
[71/89] Building CXX object CMakeFiles/ChessPeek.dir/src/ChessPeek/Configuration.cpp.obj
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Configuration.cpp:8:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Configuration.cpp:8:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Configuration.cpp:141:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Configuration.cpp:16:7: warning: initializer for member 'm_chessEnginePath' is redundant [readability-redundant-member-init]
      m_chessEnginePath(),
      ^~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Configuration.cpp:16:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Configuration.cpp:17:7: warning: initializer for member 'm_uciOptionNamesAndValuePairs' is redundant [readability-redundant-member-init]
      m_uciOptionNamesAndValuePairs(),
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Configuration.cpp:17:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Configuration.cpp:18:7: warning: initializer for member 'm_boardTopLeft' is redundant [readability-redundant-member-init]
      m_boardTopLeft{},
      ^~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Configuration.cpp:18:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Configuration.cpp:19:7: warning: initializer for member 'm_boardBottomRight' is redundant [readability-redundant-member-init]
      m_boardBottomRight{},
      ^~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Configuration.cpp:19:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Configuration.cpp:70:5: warning: variable 'converter' of type 'StringConverterWithFormatting' can be declared 'const' [misc-const-correctness]
    StringConverterWithFormatting converter;
    ^
                                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Configuration.cpp:70:35: note: FIX-IT applied suggested code changes
    StringConverterWithFormatting converter;
                                  ^
[72/89] Building CXX object CMakeFiles/ChessPeek.dir/src/ChessPeek/DetailsFromTheScreen.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:23:12: warning: constructor does not initialize these fields: condition [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
    struct CheckDetail {
           ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:64:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:17:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:34:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:41:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:6:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Utilities.hpp:15:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [llvm-namespace-comment]
}  // namespace alba
 ^~~~~~~~~~~~~~~~~~~
  // namespace alba::chess::ChessPeek
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Utilities.hpp:15:2: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Utilities.hpp:8:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsFromTheScreen.cpp:8:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsFromTheScreen.cpp:8:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsFromTheScreen.cpp:167:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsFromTheScreen.cpp:18:7: warning: initializer for member 'm_boardWithContext' is redundant [readability-redundant-member-init]
      m_boardWithContext(),
      ^~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsFromTheScreen.cpp:18:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsFromTheScreen.cpp:103:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
    constexpr auto xForWhiteSection = 3387, xForBlackSection = 3553;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsFromTheScreen.cpp:103:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsFromTheScreen.cpp:104:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
    constexpr auto lastMovePixelColor = 0x2A4053U, rgbMask = 0xFFFFFFU;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsFromTheScreen.cpp:104:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsFromTheScreen.cpp:111:11: warning: do not use 'else' after 'break' [llvm-else-after-return,readability-else-after-return]
        } else if (lastMovePixelColor == pixelColorInBlackSection) {
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsFromTheScreen.cpp:111:11: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsFromTheScreen.cpp:156:13: warning: variable 'coordinate' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
            Coordinate coordinate(i, j);
            ^
                       const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsFromTheScreen.cpp:156:24: note: FIX-IT applied suggested code changes
            Coordinate coordinate(i, j);
                       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsFromTheScreen.cpp:157:13: warning: variable 'piece' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece piece(m_boardObserver.getPieceFromCell(i, j));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsFromTheScreen.cpp:157:19: note: FIX-IT applied suggested code changes
            Piece piece(m_boardObserver.getPieceFromCell(i, j));
                  ^
[73/89] Building CXX object CMakeFiles/ChessPeek.dir/src/ChessPeek/DetailsOnTheEngine.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:34:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsOnTheEngine.cpp:5:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsOnTheEngine.cpp:5:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsOnTheEngine.cpp:13:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsOnTheEngine.cpp:10:44: warning: initializer for member 'm_boardWithContext' is redundant [readability-redundant-member-init]
DetailsOnTheEngine::DetailsOnTheEngine() : m_boardWithContext() {}
                                           ^~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\DetailsOnTheEngine.cpp:10:44: note: FIX-IT applied suggested code changes
[74/89] Building CXX object CMakeFiles/ChessPeek.dir/src/ChessPeek/HumanScoreGenerator.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:34:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:10:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:10:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:177:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:25:5: warning: variable 'dataFromExchanges' of type 'DataFromExchanges' can be declared 'const' [misc-const-correctness]
    DataFromExchanges dataFromExchanges(getDataFromExchanges(moveDetail.move));
    ^
                      const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:25:23: note: FIX-IT applied suggested code changes
    DataFromExchanges dataFromExchanges(getDataFromExchanges(moveDetail.move));
                      ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:33:5: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtStart = board.getPieceAt(move.first);
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:33:11: note: FIX-IT applied suggested code changes
    Piece pieceAtStart = board.getPieceAt(move.first);
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:34:5: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtEnd = board.getPieceAt(move.second);
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:34:11: note: FIX-IT applied suggested code changes
    Piece pieceAtEnd = board.getPieceAt(move.second);
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:42:13: warning: variable 'coordinate' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
            Coordinate coordinate{i, j};
            ^
                       const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:42:24: note: FIX-IT applied suggested code changes
            Coordinate coordinate{i, j};
                       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:43:13: warning: variable 'piece' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece piece(boardAfterMove.getPieceAt(coordinate));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:43:19: note: FIX-IT applied suggested code changes
            Piece piece(boardAfterMove.getPieceAt(coordinate));
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:44:13: warning: variable 'exchange' of type 'Exchange' can be declared 'const' [misc-const-correctness]
            Exchange exchange(boardAfterMove.getExchangeAt(coordinate));
            ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:44:22: note: FIX-IT applied suggested code changes
            Exchange exchange(boardAfterMove.getExchangeAt(coordinate));
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:71:22: warning: narrowing conversion from 'HumanScoreGenerator::Score' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        scoreLevel = static_cast<HumanScoreGenerator::Score>(
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:79:5: warning: variable 'pieceAtStart' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtStart = board.getPieceAt(move.first);
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:79:11: note: FIX-IT applied suggested code changes
    Piece pieceAtStart = board.getPieceAt(move.first);
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:80:5: warning: variable 'pieceAtEnd' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece pieceAtEnd = board.getPieceAt(move.second);
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:80:11: note: FIX-IT applied suggested code changes
    Piece pieceAtEnd = board.getPieceAt(move.second);
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:83:7: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
    } else if (isCastlingMove(pieceAtStart, move)) {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:83:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:96:5: warning: variable 'reverseDistance' of type 'int' can be declared 'const' [misc-const-correctness]
    int reverseDistance = MAX_DISTANCE_SQUARED_IN_BOARD - getDistanceToKing(move.second);
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:96:9: note: FIX-IT applied suggested code changes
    int reverseDistance = MAX_DISTANCE_SQUARED_IN_BOARD - getDistanceToKing(move.second);
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:104:49: warning: method 'getHumanScoreOfPiece' can be made static [readability-convert-member-functions-to-static]
HumanScoreGenerator::Score HumanScoreGenerator::getHumanScoreOfPiece(PieceType const pieceType) const {
                                                ^                                               ~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/HumanScoreGenerator.hpp:54:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] Score getHumanScoreOfPiece(PieceType const pieceType) const;
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/HumanScoreGenerator.hpp:54:73: note: FIX-IT applied suggested code changes
    [[nodiscard]] Score getHumanScoreOfPiece(PieceType const pieceType) const;
                                                                        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:104:97: note: FIX-IT applied suggested code changes
HumanScoreGenerator::Score HumanScoreGenerator::getHumanScoreOfPiece(PieceType const pieceType) const {
                                                                                                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:139:5: warning: variable 'deltaToKing' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    Coordinate deltaToKing = m_boardWithContext.getOpponentsKingCoordinate() - coordinate;
    ^
               const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:139:16: note: FIX-IT applied suggested code changes
    Coordinate deltaToKing = m_boardWithContext.getOpponentsKingCoordinate() - coordinate;
               ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:146:7: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
    } else if (m_bestScore > LOWER_LIMIT_FOR_SLIGHTLY_BETTER) {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:146:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:157:27: warning: method 'isACaptureMove' can be made static [readability-convert-member-functions-to-static]
bool HumanScoreGenerator::isACaptureMove(Piece const pieceAtStart, Piece const pieceAtEnd) const {
                          ^                                                                ~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/HumanScoreGenerator.hpp:57:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] bool isACaptureMove(Piece const pieceAtStart, Piece const pieceAtEnd) const;
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/HumanScoreGenerator.hpp:57:89: note: FIX-IT applied suggested code changes
    [[nodiscard]] bool isACaptureMove(Piece const pieceAtStart, Piece const pieceAtEnd) const;
                                                                                        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:157:92: note: FIX-IT applied suggested code changes
bool HumanScoreGenerator::isACaptureMove(Piece const pieceAtStart, Piece const pieceAtEnd) const {
                                                                                           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:171:27: warning: method 'isCastlingMove' can be made static [readability-convert-member-functions-to-static]
bool HumanScoreGenerator::isCastlingMove(Piece const pieceAtStart, Move const& move) const {
                          ^                                                          ~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/HumanScoreGenerator.hpp:60:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] bool isCastlingMove(Piece const pieceAtStart, Move const& move) const;
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/HumanScoreGenerator.hpp:60:83: note: FIX-IT applied suggested code changes
    [[nodiscard]] bool isCastlingMove(Piece const pieceAtStart, Move const& move) const;
                                                                                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:171:86: note: FIX-IT applied suggested code changes
bool HumanScoreGenerator::isCastlingMove(Piece const pieceAtStart, Move const& move) const {
                                                                                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:175:27: warning: method 'isCheck' can be made static [readability-convert-member-functions-to-static]
bool HumanScoreGenerator::isCheck(Piece const pieceAtEnd) const { return PieceType::King == pieceAtEnd.getType(); }
                          ^                               ~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/HumanScoreGenerator.hpp:61:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] bool isCheck(Piece const pieceAtEnd) const;
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/HumanScoreGenerator.hpp:61:56: note: FIX-IT applied suggested code changes
    [[nodiscard]] bool isCheck(Piece const pieceAtEnd) const;
                                                       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\HumanScoreGenerator.cpp:175:59: note: FIX-IT applied suggested code changes
bool HumanScoreGenerator::isCheck(Piece const pieceAtEnd) const { return PieceType::King == pieceAtEnd.getType(); }
                                                          ^
[75/89] Building CXX object CMakeFiles/ChessPeek.dir/src/ChessPeek/ResultPrinter.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:34:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:40:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:10:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CalculationDetails.hpp:16:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CalculationDetails.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:68:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:5:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:5:1: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:39:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:20:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]
    SequenceOfMovesAnalyzer(BoardWithContext const& boardWithContext);
    ^
    explicit 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:20:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:21:5: warning: function 'getCurrentBoard' should be marked [[nodiscard]] [modernize-use-nodiscard]
    Board const& getCurrentBoard() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:21:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:22:5: warning: function 'getCurrentMoveColor' should be marked [[nodiscard]] [modernize-use-nodiscard]
    PieceColor getCurrentMoveColor() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:22:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:23:5: warning: function 'getState' should be marked [[nodiscard]] [modernize-use-nodiscard]
    State getState() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:23:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:24:5: warning: function 'canPreMove' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool canPreMove() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:24:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:29:5: warning: function 'isPreviousColorOpposite' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool isPreviousColorOpposite() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:29:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:30:5: warning: function 'canPreMoveBecauseOfRecapture' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool canPreMoveBecauseOfRecapture() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:30:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:31:5: warning: function 'canPreMoveBecauseOfCheck' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool canPreMoveBecauseOfCheck() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:31:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:32:5: warning: function 'didPreviousMoveHadOnlyOneWayToCapture' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool didPreviousMoveHadOnlyOneWayToCapture() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:32:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:33:5: warning: function 'isARecapture' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool isARecapture() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:33:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:23:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:23:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:547:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:77:9: warning: variable 'piece' of type 'Piece' can be declared 'const' [misc-const-correctness]
        Piece piece = updatedBoard.getPieceAt(halfMove.first);
        ^
              const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:77:15: note: FIX-IT applied suggested code changes
        Piece piece = updatedBoard.getPieceAt(halfMove.first);
              ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:99:9: warning: variable 'suffixHeaders' of type 'strings' (aka 'vector<basic_string<char, char_traits<char>, allocator<char>>>') can be declared 'const' [misc-const-correctness]
        strings suffixHeaders{
        ^
                const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:99:17: note: FIX-IT applied suggested code changes
        strings suffixHeaders{
                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:107:9: warning: variable 'suffixHeaders' of type 'strings' (aka 'vector<basic_string<char, char_traits<char>, allocator<char>>>') can be declared 'const' [misc-const-correctness]
        strings suffixHeaders{
        ^
                const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:107:17: note: FIX-IT applied suggested code changes
        strings suffixHeaders{
                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:118:9: warning: variable 'suffixHeaders' of type 'strings' (aka 'vector<basic_string<char, char_traits<char>, allocator<char>>>') can be declared 'const' [misc-const-correctness]
        strings suffixHeaders{
        ^
                const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:118:17: note: FIX-IT applied suggested code changes
        strings suffixHeaders{
                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:129:9: warning: variable 'rowSize' of type 'int' can be declared 'const' [misc-const-correctness]
        int rowSize = getRowSizeForFullMoves(static_cast<int>(genericMoves.size()) - startIndex);
        ^
            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:129:13: note: FIX-IT applied suggested code changes
        int rowSize = getRowSizeForFullMoves(static_cast<int>(genericMoves.size()) - startIndex);
            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:130:9: warning: variable 'numberOfBoardDisplayColumns' of type 'int' can be declared 'const' [misc-const-correctness]
        int numberOfBoardDisplayColumns = getNumberOfColumnsOfGrid(rowSize);
        ^
            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:130:13: note: FIX-IT applied suggested code changes
        int numberOfBoardDisplayColumns = getNumberOfColumnsOfGrid(rowSize);
            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:156:5: warning: variable 'rowSize' of type 'int' can be declared 'const' [misc-const-correctness]
    int rowSize = getRowSizeForHalfMoves(movesSequence.halfMoves.size());
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:156:9: note: FIX-IT applied suggested code changes
    int rowSize = getRowSizeForHalfMoves(movesSequence.halfMoves.size());
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:156:42: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int rowSize = getRowSizeForHalfMoves(movesSequence.halfMoves.size());
                                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:157:5: warning: variable 'numberOfColumns' of type 'int' can be declared 'const' [misc-const-correctness]
    int numberOfColumns = getNumberOfColumnsOfGrid(rowSize);
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:157:9: note: FIX-IT applied suggested code changes
    int numberOfColumns = getNumberOfColumnsOfGrid(rowSize);
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:169:5: warning: variable 'numberOfBoardDisplayColumns' of type 'int' can be declared 'const' [misc-const-correctness]
    int numberOfBoardDisplayColumns = static_cast<int>(grid.getMaxNumberOfColumns());
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:169:9: note: FIX-IT applied suggested code changes
    int numberOfBoardDisplayColumns = static_cast<int>(grid.getMaxNumberOfColumns());
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:172:5: warning: variable 'isUnSurePreMove' of type 'bool' can be declared 'const' [misc-const-correctness]
    bool isUnSurePreMove = false;
    ^
         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:172:10: note: FIX-IT applied suggested code changes
    bool isUnSurePreMove = false;
         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:178:17: warning: variable 'firstChar' of type 'optional<char>' can be declared 'const' [misc-const-correctness]
                optional<char> firstChar = getFirstCharOfABoardCell(analyzer.canPreMove(), isUnSurePreMove);
                ^
                               const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:178:32: note: FIX-IT applied suggested code changes
                optional<char> firstChar = getFirstCharOfABoardCell(analyzer.canPreMove(), isUnSurePreMove);
                               ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:198:5: warning: variable 'rowSize' of type 'int' can be declared 'const' [misc-const-correctness]
    int rowSize = getRowSizeForFullMoves(static_cast<int>(nextMoves.size()) - startIndex);
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:198:9: note: FIX-IT applied suggested code changes
    int rowSize = getRowSizeForFullMoves(static_cast<int>(nextMoves.size()) - startIndex);
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:200:9: warning: variable 'prefixHeaders' of type 'strings' (aka 'vector<basic_string<char, char_traits<char>, allocator<char>>>') can be declared 'const' [misc-const-correctness]
        strings prefixHeaders = getNextMovesString(nextMoves, startIndex);
        ^
                const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:200:17: note: FIX-IT applied suggested code changes
        strings prefixHeaders = getNextMovesString(nextMoves, startIndex);
                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:208:5: warning: variable 'prefixHeaders' of type 'strings' (aka 'vector<basic_string<char, char_traits<char>, allocator<char>>>') can be declared 'const' [misc-const-correctness]
    strings prefixHeaders = getBookMovesString(bookMoves);
    ^
            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:208:13: note: FIX-IT applied suggested code changes
    strings prefixHeaders = getBookMovesString(bookMoves);
            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:210:44: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    printHeaders(prefixHeaders, strings(), prefixHeaders.size());
                                           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:215:5: warning: variable 'rowSize' of type 'int' can be declared 'const' [misc-const-correctness]
    int rowSize = getRowSizeForHalfMoves(movesSequence.halfMoves.size());
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:215:9: note: FIX-IT applied suggested code changes
    int rowSize = getRowSizeForHalfMoves(movesSequence.halfMoves.size());
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:215:42: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int rowSize = getRowSizeForHalfMoves(movesSequence.halfMoves.size());
                                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:217:9: warning: variable 'prefixHeaders' of type 'strings' (aka 'vector<basic_string<char, char_traits<char>, allocator<char>>>') can be declared 'const' [misc-const-correctness]
        strings prefixHeaders{getDisplayableString(movesSequence)};
        ^
                const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:217:17: note: FIX-IT applied suggested code changes
        strings prefixHeaders{getDisplayableString(movesSequence)};
                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:248:21: warning: method 'setSeparatorsOnGrid' can be made static [readability-convert-member-functions-to-static]
void ResultPrinter::setSeparatorsOnGrid(DisplayTable& grid, int const xOffset) const {
                    ^                                                          ~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:248:80: note: FIX-IT applied suggested code changes
void ResultPrinter::setSeparatorsOnGrid(DisplayTable& grid, int const xOffset) const {
                                                                               ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:76:5: note: FIX-IT applied suggested code changes
    void setSeparatorsOnGrid(DisplayTable& grid, int const xOffset) const;
    ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:76:69: note: FIX-IT applied suggested code changes
    void setSeparatorsOnGrid(DisplayTable& grid, int const xOffset) const;
                                                                    ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:249:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
    int const numberOfColumns = grid.getMaxNumberOfColumns(), numberOfRows = grid.getNumberOfRows();
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:249:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:260:13: warning: variable 'piece' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece piece(board.getPieceAt(Coordinate(x, y)));
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:260:19: note: FIX-IT applied suggested code changes
            Piece piece(board.getPieceAt(Coordinate(x, y)));
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:270:5: warning: variable 'piece' of type 'Piece' can be declared 'const' [misc-const-correctness]
    Piece piece(board.getPieceAt(move.first));
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:270:11: note: FIX-IT applied suggested code changes
    Piece piece(board.getPieceAt(move.first));
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:286:17: warning: variable 'move' of type 'Move' (aka 'pair<AlbaXY<int>, AlbaXY<int>>') can be declared 'const' [misc-const-correctness]
                Move move(engineBoard.getMoveUsingAlgebraicNotation(
                ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:286:22: note: FIX-IT applied suggested code changes
                Move move(engineBoard.getMoveUsingAlgebraicNotation(
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:302:13: warning: variable 'move' of type 'Move' (aka 'pair<AlbaXY<int>, AlbaXY<int>>') can be declared 'const' [misc-const-correctness]
            Move move(engineBoard.getMoveUsingUciNotation(variation.halfMoves.front()));
            ^
                 const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:302:18: note: FIX-IT applied suggested code changes
            Move move(engineBoard.getMoveUsingUciNotation(variation.halfMoves.front()));
                 ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:318:21: warning: method 'sortForMoreHumanMoves' can be made static [readability-convert-member-functions-to-static]
void ResultPrinter::sortForMoreHumanMoves(NextMoves& nextMoves) const {
                    ^                                           ~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:318:65: note: FIX-IT applied suggested code changes
void ResultPrinter::sortForMoreHumanMoves(NextMoves& nextMoves) const {
                                                                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:86:5: note: FIX-IT applied suggested code changes
    void sortForMoreHumanMoves(NextMoves& nextMoves) const;
    ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:86:54: note: FIX-IT applied suggested code changes
    void sortForMoreHumanMoves(NextMoves& nextMoves) const;
                                                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:349:9: warning: variable 'move' of type 'Move' (aka 'pair<AlbaXY<int>, AlbaXY<int>>') can be declared 'const' [misc-const-correctness]
        Move move(m_engineBoardWithContext.getBoard().getMoveUsingUciNotation(variation.halfMoves.front()));
        ^
             const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:349:14: note: FIX-IT applied suggested code changes
        Move move(m_engineBoardWithContext.getBoard().getMoveUsingUciNotation(variation.halfMoves.front()));
             ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:357:9: warning: variable 'move' of type 'Move' (aka 'pair<AlbaXY<int>, AlbaXY<int>>') can be declared 'const' [misc-const-correctness]
        Move move(updatedBoard.getMoveUsingUciNotation(halfMoves));
        ^
             const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:357:14: note: FIX-IT applied suggested code changes
        Move move(updatedBoard.getMoveUsingUciNotation(halfMoves));
             ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:359:13: warning: variable 'piece' of type 'Piece' can be declared 'const' [misc-const-correctness]
            Piece piece = updatedBoard.getPieceAt(move.first);
            ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:359:19: note: FIX-IT applied suggested code changes
            Piece piece = updatedBoard.getPieceAt(move.first);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:410:41: warning: method 'getBestAndWorstScores' can be made static [readability-convert-member-functions-to-static]
ResultPrinter::ScorePair ResultPrinter::getBestAndWorstScores(Variations const& variations) const {
                                        ^                                                   ~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:410:93: note: FIX-IT applied suggested code changes
ResultPrinter::ScorePair ResultPrinter::getBestAndWorstScores(Variations const& variations) const {
                                                                                            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:95:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] ScorePair getBestAndWorstScores(Variations const& variations) const;
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:95:81: note: FIX-IT applied suggested code changes
    [[nodiscard]] ScorePair getBestAndWorstScores(Variations const& variations) const;
                                                                                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:439:23: warning: method 'getDisplayableString' can be made static [readability-convert-member-functions-to-static]
string ResultPrinter::getDisplayableString(BookMove const& bookMove) const {
                      ^                                              ~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:439:70: note: FIX-IT applied suggested code changes
string ResultPrinter::getDisplayableString(BookMove const& bookMove) const {
                                                                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:99:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] std::string getDisplayableString(BookMove const& bookMove) const;
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:99:78: note: FIX-IT applied suggested code changes
    [[nodiscard]] std::string getDisplayableString(BookMove const& bookMove) const;
                                                                             ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:449:23: warning: method 'getDisplayableString' can be made static [readability-convert-member-functions-to-static]
string ResultPrinter::getDisplayableString(
                      ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:450:94: note: FIX-IT applied suggested code changes
    int const mateValue, int const engineScore, HumanScoreGenerator::Score const humanScore) const {
                                                                                             ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:101:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] std::string getDisplayableString(
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:102:98: note: FIX-IT applied suggested code changes
        int const mateValue, int const engineScore, HumanScoreGenerator::Score const humanScore) const;
                                                                                                 ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:461:23: warning: method 'getDisplayableString' can be made static [readability-convert-member-functions-to-static]
string ResultPrinter::getDisplayableString(int const mateValue, int const engineScore) const {
                      ^                                                                ~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:461:88: note: FIX-IT applied suggested code changes
string ResultPrinter::getDisplayableString(int const mateValue, int const engineScore) const {
                                                                                       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:103:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] std::string getDisplayableString(int const mateValue, int const engineScore) const;
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:103:96: note: FIX-IT applied suggested code changes
    [[nodiscard]] std::string getDisplayableString(int const mateValue, int const engineScore) const;
                                                                                               ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:471:23: warning: method 'formatToHeaderString' can be made static [readability-convert-member-functions-to-static]
string ResultPrinter::formatToHeaderString(string const& content) const {
                      ^                                           ~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:471:67: note: FIX-IT applied suggested code changes
string ResultPrinter::formatToHeaderString(string const& content) const {
                                                                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:104:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] std::string formatToHeaderString(std::string const& content) const;
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:104:80: note: FIX-IT applied suggested code changes
    [[nodiscard]] std::string formatToHeaderString(std::string const& content) const;
                                                                               ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:475:23: warning: method 'getDisplayableStringForABoardCell' can be made static [readability-convert-member-functions-to-static]
string ResultPrinter::getDisplayableStringForABoardCell(
                      ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:476:80: note: FIX-IT applied suggested code changes
    Piece const& piece, int const moveNumber, optional<char> const& firstChar) const {
                                                                               ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:105:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] std::string getDisplayableStringForABoardCell(
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:106:89: note: FIX-IT applied suggested code changes
        Piece const& piece, int const moveNumber, std::optional<char> const& firstChar) const;
                                                                                        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:479:9: warning: variable 'moveNumberCharacter' of type 'char' can be declared 'const' [misc-const-correctness]
        char moveNumberCharacter = '0' + static_cast<char>(moveNumber);
        ^
             const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:479:14: note: FIX-IT applied suggested code changes
        char moveNumberCharacter = '0' + static_cast<char>(moveNumber);
             ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:479:36: warning: narrowing conversion from 'int' to signed type 'char' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        char moveNumberCharacter = '0' + static_cast<char>(moveNumber);
                                   ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:494:9: warning: variable 'rowSize' of type 'int' can be declared 'const' [misc-const-correctness]
        int rowSize = min(MAX_NUMBER_OF_BOARDS_IN_A_ROW, static_cast<int>(nextMoves.size() - startIndex));
        ^
            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:494:13: note: FIX-IT applied suggested code changes
        int rowSize = min(MAX_NUMBER_OF_BOARDS_IN_A_ROW, static_cast<int>(nextMoves.size() - startIndex));
            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:506:5: warning: variable 'rowSize' of type 'int' can be declared 'const' [misc-const-correctness]
    int rowSize = min(MAX_NUMBER_OF_BOARDS_IN_A_ROW, static_cast<int>(bookMoves.size()));
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:506:9: note: FIX-IT applied suggested code changes
    int rowSize = min(MAX_NUMBER_OF_BOARDS_IN_A_ROW, static_cast<int>(bookMoves.size()));
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:515:20: warning: method 'getNumberOfColumnsOfGrid' can be made static [readability-convert-member-functions-to-static]
int ResultPrinter::getNumberOfColumnsOfGrid(int const numberOfBoards) const {
                   ^                                                  ~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:515:71: note: FIX-IT applied suggested code changes
int ResultPrinter::getNumberOfColumnsOfGrid(int const numberOfBoards) const {
                                                                      ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:109:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] int getNumberOfColumnsOfGrid(int const numberOfBoards) const;
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:109:74: note: FIX-IT applied suggested code changes
    [[nodiscard]] int getNumberOfColumnsOfGrid(int const numberOfBoards) const;
                                                                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:519:20: warning: method 'getHorizontalBorderSize' can be made static [readability-convert-member-functions-to-static]
int ResultPrinter::getHorizontalBorderSize(int const numberOfBoards) const {
                   ^                                                 ~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:519:70: note: FIX-IT applied suggested code changes
int ResultPrinter::getHorizontalBorderSize(int const numberOfBoards) const {
                                                                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:110:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] int getHorizontalBorderSize(int const numberOfBoards) const;
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:110:73: note: FIX-IT applied suggested code changes
    [[nodiscard]] int getHorizontalBorderSize(int const numberOfBoards) const;
                                                                        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:529:20: warning: method 'getRowSizeForHalfMoves' can be made static [readability-convert-member-functions-to-static]
int ResultPrinter::getRowSizeForHalfMoves(int const numberOfHalfMoves) const {
                   ^                                                   ~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:529:72: note: FIX-IT applied suggested code changes
int ResultPrinter::getRowSizeForHalfMoves(int const numberOfHalfMoves) const {
                                                                       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:111:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] int getRowSizeForHalfMoves(int const numberOfHalfMoves) const;
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:111:75: note: FIX-IT applied suggested code changes
    [[nodiscard]] int getRowSizeForHalfMoves(int const numberOfHalfMoves) const;
                                                                          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:533:20: warning: method 'getRowSizeForFullMoves' can be made static [readability-convert-member-functions-to-static]
int ResultPrinter::getRowSizeForFullMoves(int const numberOfFullMoves) const {
                   ^                                                   ~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:533:72: note: FIX-IT applied suggested code changes
int ResultPrinter::getRowSizeForFullMoves(int const numberOfFullMoves) const {
                                                                       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:112:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] int getRowSizeForFullMoves(int const numberOfFullMoves) const;
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:112:75: note: FIX-IT applied suggested code changes
    [[nodiscard]] int getRowSizeForFullMoves(int const numberOfFullMoves) const;
                                                                          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:537:31: warning: method 'getFirstCharOfABoardCell' can be made static [readability-convert-member-functions-to-static]
optional<char> ResultPrinter::getFirstCharOfABoardCell(bool const isSurePreMove, bool const isUnsurePreMove) const {
                              ^                                                                              ~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\ResultPrinter.cpp:537:110: note: FIX-IT applied suggested code changes
optional<char> ResultPrinter::getFirstCharOfABoardCell(bool const isSurePreMove, bool const isUnsurePreMove) const {
                                                                                                             ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:96:19: note: FIX-IT applied suggested code changes
    [[nodiscard]] std::optional<char> getFirstCharOfABoardCell(bool const isCertainPreMove, bool const isPossiblePreMove) const;
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek/ResultPrinter.hpp:96:123: note: FIX-IT applied suggested code changes
    [[nodiscard]] std::optional<char> getFirstCharOfABoardCell(bool const isCertainPreMove, bool const isPossiblePreMove) const;
                                                                                                                          ^
[76/89] Building CXX object CMakeFiles/ChessPeek.dir/src/ChessPeek/SequenceOfMovesAnalyzer.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:34:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\SequenceOfMovesAnalyzer.cpp:8:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\SequenceOfMovesAnalyzer.cpp:8:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\SequenceOfMovesAnalyzer.cpp:82:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\SequenceOfMovesAnalyzer.cpp:32:9: warning: variable 'moveColor' of type 'PieceColor' can be declared 'const' [misc-const-correctness]
        PieceColor moveColor = m_current.boardWithContext.getBoard().getPieceAt(m_current.move.first).getColor();
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\SequenceOfMovesAnalyzer.cpp:32:20: note: FIX-IT applied suggested code changes
        PieceColor moveColor = m_current.boardWithContext.getBoard().getPieceAt(m_current.move.first).getColor();
                   ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\SequenceOfMovesAnalyzer.cpp:57:9: warning: variable 'kingCoordinate' of type 'Coordinate' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        Coordinate kingCoordinate = previousContext.getPlayerKingCoordinate();
        ^
                   const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\SequenceOfMovesAnalyzer.cpp:57:20: note: FIX-IT applied suggested code changes
        Coordinate kingCoordinate = previousContext.getPlayerKingCoordinate();
                   ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\SequenceOfMovesAnalyzer.cpp:59:9: warning: variable 'attacksOnKing' of type 'Moves' (aka 'vector<pair<AlbaXY<int>, AlbaXY<int>>>') can be declared 'const' [misc-const-correctness]
        Moves attacksOnKing = analysisBoard.getAttacksToThis(kingCoordinate, currentContext.getPlayerColor());
        ^
              const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\SequenceOfMovesAnalyzer.cpp:59:15: note: FIX-IT applied suggested code changes
        Moves attacksOnKing = analysisBoard.getAttacksToThis(kingCoordinate, currentContext.getPlayerColor());
              ^
[77/89] Building CXX object CMakeFiles/ChessPeek.dir/src/ChessPeek/Utilities.cpp.obj
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Utilities.cpp:8:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Utilities.cpp:8:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\src\ChessPeek\Utilities.cpp:26:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
[78/89] Building CXX object CMakeFiles/ChessPeek.dir/tst/ChessPeekTests/BoardObserver_unit.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:23:12: warning: constructor does not initialize these fields: condition [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
    struct CheckDetail {
           ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:64:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:17:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:41:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:6:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:11:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:11:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:109:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:56:5: warning: variable 'inputFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler inputFile(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:56:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler inputFile(APRG_DIR
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:59:5: warning: variable 'configuration' of type 'Configuration' can be declared 'const' [misc-const-correctness]
    Configuration configuration(Configuration::Type::ChessDotComVersus);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:59:19: note: FIX-IT applied suggested code changes
    Configuration configuration(Configuration::Type::ChessDotComVersus);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:60:5: warning: variable 'inputBitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap inputBitmap(inputFile.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:60:12: note: FIX-IT applied suggested code changes
    Bitmap inputBitmap(inputFile.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:61:5: warning: variable 'inputSnippet' of type 'BitmapSnippet' can be declared 'const' [misc-const-correctness]
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:61:19: note: FIX-IT applied suggested code changes
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:64:5: warning: variable 'retriever' of type 'BoardObserver' can be declared 'const' [misc-const-correctness]
    BoardObserver retriever(configuration, inputSnippet);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:64:19: note: FIX-IT applied suggested code changes
    BoardObserver retriever(configuration, inputSnippet);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:70:5: warning: variable 'inputFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler inputFile(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:70:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler inputFile(APRG_DIR
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:73:5: warning: variable 'configuration' of type 'Configuration' can be declared 'const' [misc-const-correctness]
    Configuration configuration(Configuration::Type::ChessDotComPuzzle);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:73:19: note: FIX-IT applied suggested code changes
    Configuration configuration(Configuration::Type::ChessDotComPuzzle);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:74:5: warning: variable 'inputBitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap inputBitmap(inputFile.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:74:12: note: FIX-IT applied suggested code changes
    Bitmap inputBitmap(inputFile.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:75:5: warning: variable 'inputSnippet' of type 'BitmapSnippet' can be declared 'const' [misc-const-correctness]
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:75:19: note: FIX-IT applied suggested code changes
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:78:5: warning: variable 'retriever' of type 'BoardObserver' can be declared 'const' [misc-const-correctness]
    BoardObserver retriever(configuration, inputSnippet);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:78:19: note: FIX-IT applied suggested code changes
    BoardObserver retriever(configuration, inputSnippet);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:84:5: warning: variable 'inputFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler inputFile(APRG_DIR R"(\Chess\ChessPeek\Files\RetrieverBasis\LichessVersus\LichessVersus.bmp)");
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:84:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler inputFile(APRG_DIR R"(\Chess\ChessPeek\Files\RetrieverBasis\LichessVersus\LichessVersus.bmp)");
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:86:5: warning: variable 'configuration' of type 'Configuration' can be declared 'const' [misc-const-correctness]
    Configuration configuration(Configuration::Type::LichessVersus);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:86:19: note: FIX-IT applied suggested code changes
    Configuration configuration(Configuration::Type::LichessVersus);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:87:5: warning: variable 'inputBitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap inputBitmap(inputFile.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:87:12: note: FIX-IT applied suggested code changes
    Bitmap inputBitmap(inputFile.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:88:5: warning: variable 'inputSnippet' of type 'BitmapSnippet' can be declared 'const' [misc-const-correctness]
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:88:19: note: FIX-IT applied suggested code changes
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:91:5: warning: variable 'retriever' of type 'BoardObserver' can be declared 'const' [misc-const-correctness]
    BoardObserver retriever(configuration, inputSnippet);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:91:19: note: FIX-IT applied suggested code changes
    BoardObserver retriever(configuration, inputSnippet);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:97:5: warning: variable 'inputFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler inputFile(APRG_DIR R"(\Chess\ChessPeek\Files\RetrieverBasis\LichessStream\LichessStream.bmp)");
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:97:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler inputFile(APRG_DIR R"(\Chess\ChessPeek\Files\RetrieverBasis\LichessStream\LichessStream.bmp)");
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:99:5: warning: variable 'configuration' of type 'Configuration' can be declared 'const' [misc-const-correctness]
    Configuration configuration(Configuration::Type::LichessStream);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:99:19: note: FIX-IT applied suggested code changes
    Configuration configuration(Configuration::Type::LichessStream);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:100:5: warning: variable 'inputBitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap inputBitmap(inputFile.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:100:12: note: FIX-IT applied suggested code changes
    Bitmap inputBitmap(inputFile.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:101:5: warning: variable 'inputSnippet' of type 'BitmapSnippet' can be declared 'const' [misc-const-correctness]
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:101:19: note: FIX-IT applied suggested code changes
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:104:5: warning: variable 'retriever' of type 'BoardObserver' can be declared 'const' [misc-const-correctness]
    BoardObserver retriever(configuration, inputSnippet);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\BoardObserver_unit.cpp:104:19: note: FIX-IT applied suggested code changes
    BoardObserver retriever(configuration, inputSnippet);
                  ^
[79/89] Building CXX object CMakeFiles/ChessPeek.dir/tst/ChessPeekTests/Book_unit.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:40:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:10:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:7:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:7:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:104:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:15:5: warning: variable 'board' of type 'Board' can be declared 'const' [misc-const-correctness]
    Board board(BoardOrientation::BlackUpWhiteDown);
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:15:11: note: FIX-IT applied suggested code changes
    Board board(BoardOrientation::BlackUpWhiteDown);
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:16:5: warning: variable 'lineDetail' of type 'Book::LineDetail' can be declared 'const' [misc-const-correctness]
    Book::LineDetail lineDetail{"LineForTesting", PieceColor::White, {}, {}};
    ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:16:22: note: FIX-IT applied suggested code changes
    Book::LineDetail lineDetail{"LineForTesting", PieceColor::White, {}, {}};
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:26:5: warning: variable 'board' of type 'Board' can be declared 'const' [misc-const-correctness]
    Board board(BoardOrientation::BlackUpWhiteDown);
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:26:11: note: FIX-IT applied suggested code changes
    Board board(BoardOrientation::BlackUpWhiteDown);
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:27:5: warning: variable 'lineDetail' of type 'Book::LineDetail' can be declared 'const' [misc-const-correctness]
    Book::LineDetail lineDetail{"LineForTesting", PieceColor::White, {}, {}};
    ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:27:22: note: FIX-IT applied suggested code changes
    Book::LineDetail lineDetail{"LineForTesting", PieceColor::White, {}, {}};
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:43:5: warning: variable 'board' of type 'Board' can be declared 'const' [misc-const-correctness]
    Board board(BoardOrientation::BlackUpWhiteDown);
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:43:11: note: FIX-IT applied suggested code changes
    Board board(BoardOrientation::BlackUpWhiteDown);
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:44:5: warning: variable 'lineDetail' of type 'Book::LineDetail' can be declared 'const' [misc-const-correctness]
    Book::LineDetail lineDetail{"LineForTesting", PieceColor::White, 100, {}};
    ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:44:22: note: FIX-IT applied suggested code changes
    Book::LineDetail lineDetail{"LineForTesting", PieceColor::White, 100, {}};
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:57:5: warning: variable 'board' of type 'Board' can be declared 'const' [misc-const-correctness]
    Board board(BoardOrientation::BlackUpWhiteDown);
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:57:11: note: FIX-IT applied suggested code changes
    Board board(BoardOrientation::BlackUpWhiteDown);
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:58:5: warning: variable 'lineDetail' of type 'Book::LineDetail' can be declared 'const' [misc-const-correctness]
    Book::LineDetail lineDetail{"LineForTesting", PieceColor::White, 100, {}};
    ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:58:22: note: FIX-IT applied suggested code changes
    Book::LineDetail lineDetail{"LineForTesting", PieceColor::White, 100, {}};
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:72:5: warning: variable 'board' of type 'Board' can be declared 'const' [misc-const-correctness]
    Board board(BoardOrientation::BlackUpWhiteDown);
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:72:11: note: FIX-IT applied suggested code changes
    Board board(BoardOrientation::BlackUpWhiteDown);
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:73:5: warning: variable 'lineDetail1' of type 'Book::LineDetail' can be declared 'const' [misc-const-correctness]
    Book::LineDetail lineDetail1{"LineForTesting", PieceColor::White, 100, {}};
    ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:73:22: note: FIX-IT applied suggested code changes
    Book::LineDetail lineDetail1{"LineForTesting", PieceColor::White, 100, {}};
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:74:5: warning: variable 'lineDetail2' of type 'Book::LineDetail' can be declared 'const' [misc-const-correctness]
    Book::LineDetail lineDetail2{"LineIsOverwritten", PieceColor::Black, 50, {}};
    ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:74:22: note: FIX-IT applied suggested code changes
    Book::LineDetail lineDetail2{"LineIsOverwritten", PieceColor::Black, 50, {}};
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:89:5: warning: variable 'board' of type 'Board' can be declared 'const' [misc-const-correctness]
    Board board(BoardOrientation::BlackUpWhiteDown);
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:89:11: note: FIX-IT applied suggested code changes
    Board board(BoardOrientation::BlackUpWhiteDown);
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:90:5: warning: variable 'lineDetail1' of type 'Book::LineDetail' can be declared 'const' [misc-const-correctness]
    Book::LineDetail lineDetail1{"LineForTesting", PieceColor::White, 100, {}};
    ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:90:22: note: FIX-IT applied suggested code changes
    Book::LineDetail lineDetail1{"LineForTesting", PieceColor::White, 100, {}};
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:91:5: warning: variable 'lineDetail2' of type 'Book::LineDetail' can be declared 'const' [misc-const-correctness]
    Book::LineDetail lineDetail2{"LineIsOverwritten", PieceColor::Black, 200, {}};
    ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\Book_unit.cpp:91:22: note: FIX-IT applied suggested code changes
    Book::LineDetail lineDetail2{"LineIsOverwritten", PieceColor::Black, 200, {}};
                     ^
[80/89] Building CXX object CMakeFiles/ChessPeek.dir/tst/ChessPeekTests/ChessPeek_unit.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:23:12: warning: constructor does not initialize these fields: condition [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
    struct CheckDetail {
           ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:64:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:17:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:34:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:40:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:10:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CalculationDetails.hpp:16:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CalculationDetails.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ChessPeek.hpp:12:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ChessPeek.hpp:12:1: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ChessPeek.hpp:51:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ChessPeek.hpp:29:5: warning: function 'getPerformedMove' should be marked [[nodiscard]] [modernize-use-nodiscard]
    Move getPerformedMove() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ChessPeek.hpp:29:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ChessPeek.hpp:30:5: warning: function 'shouldAnalyzeBoard' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool shouldAnalyzeBoard() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ChessPeek.hpp:30:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ChessPeek.hpp:31:5: warning: function 'didPlayerChange' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool didPlayerChange() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ChessPeek.hpp:31:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ChessPeek.hpp:32:5: warning: function 'didBoardChange' should be marked [[nodiscard]] [modernize-use-nodiscard]
    bool didBoardChange() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ChessPeek.hpp:32:5: note: FIX-IT applied suggested code changes
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:41:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:6:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:50:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:7:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsOnTheEngine.hpp:17:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsOnTheEngine.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ChessPeek_unit.cpp:7:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ChessPeek_unit.cpp:7:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ChessPeek_unit.cpp:65:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ChessPeek_unit.cpp:54:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
    ChessPeek::EngineCalculationDetails details1{}, details2{}, details3{};
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ChessPeek_unit.cpp:54:5: note: FIX-IT applied suggested code changes
[81/89] Building CXX object CMakeFiles/ChessPeek.dir/tst/ChessPeekTests/HumanScoreGenerator_unit.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:34:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:68:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\HumanScoreGenerator_unit.cpp:7:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\HumanScoreGenerator_unit.cpp:7:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\HumanScoreGenerator_unit.cpp:40:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\HumanScoreGenerator_unit.cpp:14:5: warning: variable 'board' of type 'Board' can be declared 'const' [misc-const-correctness]
    Board board(BoardOrientation::BlackUpWhiteDown);
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\HumanScoreGenerator_unit.cpp:14:11: note: FIX-IT applied suggested code changes
    Board board(BoardOrientation::BlackUpWhiteDown);
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\HumanScoreGenerator_unit.cpp:15:5: warning: variable 'boardWithContext' of type 'BoardWithContext' can be declared 'const' [misc-const-correctness]
    BoardWithContext boardWithContext(PieceColor::White, board);
    ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\HumanScoreGenerator_unit.cpp:15:22: note: FIX-IT applied suggested code changes
    BoardWithContext boardWithContext(PieceColor::White, board);
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\HumanScoreGenerator_unit.cpp:16:5: warning: variable 'humanScoreGenerator' of type 'HumanScoreGenerator' can be declared 'const' [misc-const-correctness]
    HumanScoreGenerator humanScoreGenerator(boardWithContext, -127, 52);
    ^
                        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\HumanScoreGenerator_unit.cpp:16:25: note: FIX-IT applied suggested code changes
    HumanScoreGenerator humanScoreGenerator(boardWithContext, -127, 52);
                        ^
[82/89] Building CXX object CMakeFiles/ChessPeek.dir/tst/ChessPeekTests/ResultPrinter_unit.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:34:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:40:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:10:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CalculationDetails.hpp:16:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/CalculationDetails.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:68:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/HumanScoreGenerator.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:121:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/ResultPrinter.hpp:10:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:9:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:9:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:35:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:16:5: warning: variable 'chessDotComBookDatabase' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:16:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:17:5: warning: variable 'book' of type 'Book' can be declared 'const' [misc-const-correctness]
    Book book;
    ^
         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:17:10: note: FIX-IT applied suggested code changes
    Book book;
         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:20:5: warning: variable 'boardWithContext' of type 'BoardWithContext' can be declared 'const' [misc-const-correctness]
    BoardWithContext boardWithContext(PieceColor::White, Board(BoardOrientation::BlackUpWhiteDown));
    ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:20:22: note: FIX-IT applied suggested code changes
    BoardWithContext boardWithContext(PieceColor::White, Board(BoardOrientation::BlackUpWhiteDown));
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:21:5: warning: variable 'variation1' of type 'Variation' can be declared 'const' [misc-const-correctness]
    Variation variation1{0, 200, {"e2e4", "c7c5", "g1f3"}};
    ^
              const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:21:15: note: FIX-IT applied suggested code changes
    Variation variation1{0, 200, {"e2e4", "c7c5", "g1f3"}};
              ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:22:5: warning: variable 'variation2' of type 'Variation' can be declared 'const' [misc-const-correctness]
    Variation variation2{0, 100, {"d2d4", "g8f6", "c2c4"}};
    ^
              const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:22:15: note: FIX-IT applied suggested code changes
    Variation variation2{0, 100, {"d2d4", "g8f6", "c2c4"}};
              ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:23:5: warning: variable 'variation3' of type 'Variation' can be declared 'const' [misc-const-correctness]
    Variation variation3{0, 0, {"g1f3", "g8f6", "d2d4"}};
    ^
              const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:23:15: note: FIX-IT applied suggested code changes
    Variation variation3{0, 0, {"g1f3", "g8f6", "d2d4"}};
              ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:24:5: warning: variable 'variation4' of type 'Variation' can be declared 'const' [misc-const-correctness]
    Variation variation4{0, -100, {"c2c4", "g8f6", "d2d4"}};
    ^
              const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:24:15: note: FIX-IT applied suggested code changes
    Variation variation4{0, -100, {"c2c4", "g8f6", "d2d4"}};
              ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:25:5: warning: variable 'variation5' of type 'Variation' can be declared 'const' [misc-const-correctness]
    Variation variation5{0, -200, {"g2g3", "d7d5", "g1f3"}};
    ^
              const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:25:15: note: FIX-IT applied suggested code changes
    Variation variation5{0, -200, {"g2g3", "d7d5", "g1f3"}};
              ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:26:5: warning: variable 'variations' of type 'Variations' (aka 'vector<Variation>') can be declared 'const' [misc-const-correctness]
    Variations variations{variation1, variation2, variation3, variation4, variation5};
    ^
               const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\ResultPrinter_unit.cpp:26:16: note: FIX-IT applied suggested code changes
    Variations variations{variation1, variation2, variation3, variation4, variation5};
               ^
[83/89] Building CXX object CMakeFiles/ChessPeek.dir/tst/ChessPeekTests/SequenceOfMovesAnalyzer_unit.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:34:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:35:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/SequenceOfMovesAnalyzer.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:7:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:7:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:77:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:14:5: warning: variable 'boardWithContext' of type 'BoardWithContext' can be declared 'const' [misc-const-correctness]
    BoardWithContext boardWithContext(PieceColor::White, Board(BoardOrientation::BlackUpWhiteDown));
    ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:14:22: note: FIX-IT applied suggested code changes
    BoardWithContext boardWithContext(PieceColor::White, Board(BoardOrientation::BlackUpWhiteDown));
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:22:5: warning: variable 'expectedMatrix' of type 'Board::PieceGrid' (aka 'array<Piece, CHESS_SIDE_SIZE * CHESS_SIDE_SIZE>') can be declared 'const' [misc-const-correctness]
    Board::PieceGrid expectedMatrix({0xC, 0xA, 0xB, 0xD, 0xE, 0xB, 0xA, 0xC, 0x9, 0x9, 0x9, 0x9, 0x9, 0x9, 0x9, 0x9,
    ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:22:22: note: FIX-IT applied suggested code changes
    Board::PieceGrid expectedMatrix({0xC, 0xA, 0xB, 0xD, 0xE, 0xB, 0xA, 0xC, 0x9, 0x9, 0x9, 0x9, 0x9, 0x9, 0x9, 0x9,
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:30:5: warning: variable 'boardWithContext' of type 'BoardWithContext' can be declared 'const' [misc-const-correctness]
    BoardWithContext boardWithContext(PieceColor::White, Board(BoardOrientation::BlackUpWhiteDown));
    ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:30:22: note: FIX-IT applied suggested code changes
    BoardWithContext boardWithContext(PieceColor::White, Board(BoardOrientation::BlackUpWhiteDown));
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:44:5: warning: variable 'board' of type 'Board' can be declared 'const' [misc-const-correctness]
    Board board(
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:44:11: note: FIX-IT applied suggested code changes
    Board board(
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:49:5: warning: variable 'boardWithContext' of type 'BoardWithContext' can be declared 'const' [misc-const-correctness]
    BoardWithContext boardWithContext(PieceColor::White, board);
    ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:49:22: note: FIX-IT applied suggested code changes
    BoardWithContext boardWithContext(PieceColor::White, board);
                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:61:5: warning: variable 'board' of type 'Board' can be declared 'const' [misc-const-correctness]
    Board board(
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:61:11: note: FIX-IT applied suggested code changes
    Board board(
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:66:5: warning: variable 'boardWithContext' of type 'BoardWithContext' can be declared 'const' [misc-const-correctness]
    BoardWithContext boardWithContext(PieceColor::White, board);
    ^
                     const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\ChessPeekTests\SequenceOfMovesAnalyzer_unit.cpp:66:22: note: FIX-IT applied suggested code changes
    BoardWithContext boardWithContext(PieceColor::White, board);
                     ^
[84/89] Building CXX object CMakeFiles/ChessPeek.dir/tst/PreparationTests/BoardObserverPreparationTests.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:23:12: warning: constructor does not initialize these fields: condition [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
    struct CheckDetail {
           ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:64:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:17:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:41:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:6:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:13:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:13:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:404:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:25:5: warning: variable 'cellBottomRightCorner' of type 'XY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    XY cellBottomRightCorner(deltaChessBoard / 8U);
    ^
       const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:25:8: note: FIX-IT applied suggested code changes
    XY cellBottomRightCorner(deltaChessBoard / 8U);
       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:37:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
    XYs whitePoints, blackPoints;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:37:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:154:5: warning: variable 'digits' of type 'int' can be declared 'const' [misc-const-correctness]
    int digits = getNumberOfBase10Digits(label);
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:154:9: note: FIX-IT applied suggested code changes
    int digits = getNumberOfBase10Digits(label);
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:154:18: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int digits = getNumberOfBase10Digits(label);
                 ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:155:5: warning: variable 'newValue' of type 'double' can be declared 'const' [misc-const-correctness]
    double newValue = (static_cast<double>(1) / label) * pow(10, digits + 8);
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:155:12: note: FIX-IT applied suggested code changes
    double newValue = (static_cast<double>(1) / label) * pow(10, digits + 8);
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:162:19: warning: narrowing conversion from 'unsigned int' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        result += static_cast<int>(piece) * 13U;
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:173:5: warning: variable 'inputFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler inputFile(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:173:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler inputFile(APRG_DIR
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:176:5: warning: variable 'configuration' of type 'Configuration' can be declared 'const' [misc-const-correctness]
    Configuration configuration(Configuration::Type::ChessDotComVersus);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:176:19: note: FIX-IT applied suggested code changes
    Configuration configuration(Configuration::Type::ChessDotComVersus);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:177:5: warning: variable 'inputBitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap inputBitmap(inputFile.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:177:12: note: FIX-IT applied suggested code changes
    Bitmap inputBitmap(inputFile.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:178:5: warning: variable 'inputSnippet' of type 'BitmapSnippet' can be declared 'const' [misc-const-correctness]
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:178:19: note: FIX-IT applied suggested code changes
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:181:5: warning: variable 'retriever' of type 'BoardObserver' can be declared 'const' [misc-const-correctness]
    BoardObserver retriever(configuration, inputSnippet);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:181:19: note: FIX-IT applied suggested code changes
    BoardObserver retriever(configuration, inputSnippet);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:187:5: warning: variable 'inputFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler inputFile(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:187:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler inputFile(APRG_DIR
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:190:5: warning: variable 'configuration' of type 'Configuration' can be declared 'const' [misc-const-correctness]
    Configuration configuration(Configuration::Type::ChessDotComPuzzle);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:190:19: note: FIX-IT applied suggested code changes
    Configuration configuration(Configuration::Type::ChessDotComPuzzle);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:191:5: warning: variable 'inputBitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap inputBitmap(inputFile.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:191:12: note: FIX-IT applied suggested code changes
    Bitmap inputBitmap(inputFile.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:192:5: warning: variable 'inputSnippet' of type 'BitmapSnippet' can be declared 'const' [misc-const-correctness]
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:192:19: note: FIX-IT applied suggested code changes
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:195:5: warning: variable 'retriever' of type 'BoardObserver' can be declared 'const' [misc-const-correctness]
    BoardObserver retriever(configuration, inputSnippet);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:195:19: note: FIX-IT applied suggested code changes
    BoardObserver retriever(configuration, inputSnippet);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:201:5: warning: variable 'inputFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler inputFile(APRG_DIR R"(\Chess\ChessPeek\Files\RetrieverBasis\LichessVersus\LichessVersus.bmp)");
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:201:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler inputFile(APRG_DIR R"(\Chess\ChessPeek\Files\RetrieverBasis\LichessVersus\LichessVersus.bmp)");
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:203:5: warning: variable 'configuration' of type 'Configuration' can be declared 'const' [misc-const-correctness]
    Configuration configuration(Configuration::Type::LichessVersus);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:203:19: note: FIX-IT applied suggested code changes
    Configuration configuration(Configuration::Type::LichessVersus);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:204:5: warning: variable 'inputBitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap inputBitmap(inputFile.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:204:12: note: FIX-IT applied suggested code changes
    Bitmap inputBitmap(inputFile.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:205:5: warning: variable 'inputSnippet' of type 'BitmapSnippet' can be declared 'const' [misc-const-correctness]
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:205:19: note: FIX-IT applied suggested code changes
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:208:5: warning: variable 'retriever' of type 'BoardObserver' can be declared 'const' [misc-const-correctness]
    BoardObserver retriever(configuration, inputSnippet);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:208:19: note: FIX-IT applied suggested code changes
    BoardObserver retriever(configuration, inputSnippet);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:214:5: warning: variable 'inputFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler inputFile(APRG_DIR R"(\Chess\ChessPeek\Files\RetrieverBasis\LichessStream\LichessStream.bmp)");
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:214:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler inputFile(APRG_DIR R"(\Chess\ChessPeek\Files\RetrieverBasis\LichessStream\LichessStream.bmp)");
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:216:5: warning: variable 'configuration' of type 'Configuration' can be declared 'const' [misc-const-correctness]
    Configuration configuration(Configuration::Type::LichessStream);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:216:19: note: FIX-IT applied suggested code changes
    Configuration configuration(Configuration::Type::LichessStream);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:217:5: warning: variable 'inputBitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap inputBitmap(inputFile.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:217:12: note: FIX-IT applied suggested code changes
    Bitmap inputBitmap(inputFile.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:218:5: warning: variable 'inputSnippet' of type 'BitmapSnippet' can be declared 'const' [misc-const-correctness]
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:218:19: note: FIX-IT applied suggested code changes
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:221:5: warning: variable 'retriever' of type 'BoardObserver' can be declared 'const' [misc-const-correctness]
    BoardObserver retriever(configuration, inputSnippet);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:221:19: note: FIX-IT applied suggested code changes
    BoardObserver retriever(configuration, inputSnippet);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:227:5: warning: variable 'inputFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler inputFile(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:227:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler inputFile(APRG_DIR
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:229:5: warning: variable 'outputFileForWhite' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler outputFileForWhite(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:229:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler outputFileForWhite(APRG_DIR
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:231:5: warning: variable 'outputFileForBlack' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler outputFileForBlack(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:231:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler outputFileForBlack(APRG_DIR
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:237:5: warning: variable 'configuration' of type 'Configuration' can be declared 'const' [misc-const-correctness]
    Configuration configuration(Configuration::Type::ChessDotComVersus);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:237:19: note: FIX-IT applied suggested code changes
    Configuration configuration(Configuration::Type::ChessDotComVersus);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:238:5: warning: variable 'inputBitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap inputBitmap(inputFile.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:238:12: note: FIX-IT applied suggested code changes
    Bitmap inputBitmap(inputFile.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:239:5: warning: variable 'outputBitmapForWhite' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap outputBitmapForWhite(outputFileForWhite.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:239:12: note: FIX-IT applied suggested code changes
    Bitmap outputBitmapForWhite(outputFileForWhite.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:240:5: warning: variable 'outputBitmapForBlack' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap outputBitmapForBlack(outputFileForBlack.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:240:12: note: FIX-IT applied suggested code changes
    Bitmap outputBitmapForBlack(outputFileForBlack.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:241:5: warning: variable 'inputSnippet' of type 'BitmapSnippet' can be declared 'const' [misc-const-correctness]
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:241:19: note: FIX-IT applied suggested code changes
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:246:5: warning: variable 'retriever' of type 'BoardObserver' can be declared 'const' [misc-const-correctness]
    BoardObserver retriever(configuration, inputSnippet);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:246:19: note: FIX-IT applied suggested code changes
    BoardObserver retriever(configuration, inputSnippet);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:249:5: warning: variable 'deltaChessBoard' of type 'XY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    XY deltaChessBoard = configuration.getBottomRightOfBoard() - configuration.getTopLeftOfBoard();
    ^
       const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:249:8: note: FIX-IT applied suggested code changes
    XY deltaChessBoard = configuration.getBottomRightOfBoard() - configuration.getTopLeftOfBoard();
       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:272:5: warning: variable 'inputFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler inputFile(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:272:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler inputFile(APRG_DIR
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:274:5: warning: variable 'outputFileForWhite' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler outputFileForWhite(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:274:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler outputFileForWhite(APRG_DIR
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:276:5: warning: variable 'outputFileForBlack' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler outputFileForBlack(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:276:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler outputFileForBlack(APRG_DIR
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:282:5: warning: variable 'configuration' of type 'Configuration' can be declared 'const' [misc-const-correctness]
    Configuration configuration(Configuration::Type::ChessDotComPuzzle);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:282:19: note: FIX-IT applied suggested code changes
    Configuration configuration(Configuration::Type::ChessDotComPuzzle);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:283:5: warning: variable 'inputBitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap inputBitmap(inputFile.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:283:12: note: FIX-IT applied suggested code changes
    Bitmap inputBitmap(inputFile.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:284:5: warning: variable 'outputBitmapForWhite' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap outputBitmapForWhite(outputFileForWhite.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:284:12: note: FIX-IT applied suggested code changes
    Bitmap outputBitmapForWhite(outputFileForWhite.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:285:5: warning: variable 'outputBitmapForBlack' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap outputBitmapForBlack(outputFileForBlack.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:285:12: note: FIX-IT applied suggested code changes
    Bitmap outputBitmapForBlack(outputFileForBlack.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:286:5: warning: variable 'inputSnippet' of type 'BitmapSnippet' can be declared 'const' [misc-const-correctness]
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:286:19: note: FIX-IT applied suggested code changes
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:291:5: warning: variable 'retriever' of type 'BoardObserver' can be declared 'const' [misc-const-correctness]
    BoardObserver retriever(configuration, inputSnippet);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:291:19: note: FIX-IT applied suggested code changes
    BoardObserver retriever(configuration, inputSnippet);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:294:5: warning: variable 'deltaChessBoard' of type 'XY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    XY deltaChessBoard = configuration.getBottomRightOfBoard() - configuration.getTopLeftOfBoard();
    ^
       const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:294:8: note: FIX-IT applied suggested code changes
    XY deltaChessBoard = configuration.getBottomRightOfBoard() - configuration.getTopLeftOfBoard();
       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:317:5: warning: variable 'inputFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler inputFile(APRG_DIR R"(\Chess\ChessPeek\Files\RetrieverBasis\LichessVersus\LichessVersus.bmp)");
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:317:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler inputFile(APRG_DIR R"(\Chess\ChessPeek\Files\RetrieverBasis\LichessVersus\LichessVersus.bmp)");
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:318:5: warning: variable 'outputFileForWhite' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler outputFileForWhite(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:318:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler outputFileForWhite(APRG_DIR
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:320:5: warning: variable 'outputFileForBlack' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler outputFileForBlack(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:320:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler outputFileForBlack(APRG_DIR
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:326:5: warning: variable 'configuration' of type 'Configuration' can be declared 'const' [misc-const-correctness]
    Configuration configuration(Configuration::Type::LichessVersus);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:326:19: note: FIX-IT applied suggested code changes
    Configuration configuration(Configuration::Type::LichessVersus);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:327:5: warning: variable 'inputBitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap inputBitmap(inputFile.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:327:12: note: FIX-IT applied suggested code changes
    Bitmap inputBitmap(inputFile.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:328:5: warning: variable 'outputBitmapForWhite' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap outputBitmapForWhite(outputFileForWhite.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:328:12: note: FIX-IT applied suggested code changes
    Bitmap outputBitmapForWhite(outputFileForWhite.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:329:5: warning: variable 'outputBitmapForBlack' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap outputBitmapForBlack(outputFileForBlack.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:329:12: note: FIX-IT applied suggested code changes
    Bitmap outputBitmapForBlack(outputFileForBlack.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:330:5: warning: variable 'inputSnippet' of type 'BitmapSnippet' can be declared 'const' [misc-const-correctness]
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:330:19: note: FIX-IT applied suggested code changes
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:335:5: warning: variable 'retriever' of type 'BoardObserver' can be declared 'const' [misc-const-correctness]
    BoardObserver retriever(configuration, inputSnippet);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:335:19: note: FIX-IT applied suggested code changes
    BoardObserver retriever(configuration, inputSnippet);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:338:5: warning: variable 'deltaChessBoard' of type 'XY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    XY deltaChessBoard = configuration.getBottomRightOfBoard() - configuration.getTopLeftOfBoard();
    ^
       const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:338:8: note: FIX-IT applied suggested code changes
    XY deltaChessBoard = configuration.getBottomRightOfBoard() - configuration.getTopLeftOfBoard();
       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:361:5: warning: variable 'inputFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler inputFile(APRG_DIR R"(\Chess\ChessPeek\Files\RetrieverBasis\LichessStream\LichessStream.bmp)");
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:361:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler inputFile(APRG_DIR R"(\Chess\ChessPeek\Files\RetrieverBasis\LichessStream\LichessStream.bmp)");
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:362:5: warning: variable 'outputFileForWhite' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler outputFileForWhite(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:362:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler outputFileForWhite(APRG_DIR
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:364:5: warning: variable 'outputFileForBlack' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler outputFileForBlack(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:364:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler outputFileForBlack(APRG_DIR
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:370:5: warning: variable 'configuration' of type 'Configuration' can be declared 'const' [misc-const-correctness]
    Configuration configuration(Configuration::Type::LichessVersus);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:370:19: note: FIX-IT applied suggested code changes
    Configuration configuration(Configuration::Type::LichessVersus);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:371:5: warning: variable 'inputBitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap inputBitmap(inputFile.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:371:12: note: FIX-IT applied suggested code changes
    Bitmap inputBitmap(inputFile.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:372:5: warning: variable 'outputBitmapForWhite' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap outputBitmapForWhite(outputFileForWhite.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:372:12: note: FIX-IT applied suggested code changes
    Bitmap outputBitmapForWhite(outputFileForWhite.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:373:5: warning: variable 'outputBitmapForBlack' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap outputBitmapForBlack(outputFileForBlack.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:373:12: note: FIX-IT applied suggested code changes
    Bitmap outputBitmapForBlack(outputFileForBlack.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:374:5: warning: variable 'inputSnippet' of type 'BitmapSnippet' can be declared 'const' [misc-const-correctness]
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:374:19: note: FIX-IT applied suggested code changes
    BitmapSnippet inputSnippet(inputBitmap.getSnippetReadFromFile(
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:379:5: warning: variable 'retriever' of type 'BoardObserver' can be declared 'const' [misc-const-correctness]
    BoardObserver retriever(configuration, inputSnippet);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:379:19: note: FIX-IT applied suggested code changes
    BoardObserver retriever(configuration, inputSnippet);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:382:5: warning: variable 'deltaChessBoard' of type 'XY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    XY deltaChessBoard = configuration.getBottomRightOfBoard() - configuration.getTopLeftOfBoard();
    ^
       const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\BoardObserverPreparationTests.cpp:382:8: note: FIX-IT applied suggested code changes
    XY deltaChessBoard = configuration.getBottomRightOfBoard() - configuration.getTopLeftOfBoard();
       ^
[85/89] Building CXX object CMakeFiles/ChessPeek.dir/tst/PreparationTests/DatabaseForBooksTests.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:40:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:10:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:17:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:17:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:242:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:25:5: warning: variable 'chessDotComBookDatabase' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:25:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:26:5: warning: variable 'chessDotComDataFromSite' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler chessDotComDataFromSite(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_DATA_FROM_SITE);
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:26:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler chessDotComDataFromSite(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_DATA_FROM_SITE);
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:32:9: warning: variable 'line' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
        string line = getStringInBetweenTwoStrings(fileReader.getLineAndIgnoreWhiteSpaces(), "Line: [", "]");
        ^
               const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:32:16: note: FIX-IT applied suggested code changes
        string line = getStringInBetweenTwoStrings(fileReader.getLineAndIgnoreWhiteSpaces(), "Line: [", "]");
               ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:38:9: warning: variable 'numberOfNextMoves' of type 'int' can be declared 'const' [misc-const-correctness]
        int numberOfNextMoves = convertStringToNumber<int>(
        ^
            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:38:13: note: FIX-IT applied suggested code changes
        int numberOfNextMoves = convertStringToNumber<int>(
            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:51:13: warning: variable 'nextMove' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
            string nextMove =
            ^
                   const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:51:20: note: FIX-IT applied suggested code changes
            string nextMove =
                   ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:53:13: warning: variable 'numberOfGames' of type 'int' can be declared 'const' [misc-const-correctness]
            int numberOfGames = convertStringToNumber<int>(
            ^
                const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:53:17: note: FIX-IT applied suggested code changes
            int numberOfGames = convertStringToNumber<int>(
                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:55:13: warning: variable 'whiteWinPercentage' of type 'int' can be declared 'const' [misc-const-correctness]
            int whiteWinPercentage = convertStringToNumber<int>(
            ^
                const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:55:17: note: FIX-IT applied suggested code changes
            int whiteWinPercentage = convertStringToNumber<int>(
                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:58:13: warning: variable 'blackWinPercentage' of type 'int' can be declared 'const' [misc-const-correctness]
            int blackWinPercentage = convertStringToNumber<int>(
            ^
                const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:58:17: note: FIX-IT applied suggested code changes
            int blackWinPercentage = convertStringToNumber<int>(
                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:60:13: warning: variable 'winPercentageForColor' of type 'int' can be declared 'const' [misc-const-correctness]
            int winPercentageForColor = (PieceColor::White == playerColor)   ? whiteWinPercentage
            ^
                const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:60:17: note: FIX-IT applied suggested code changes
            int winPercentageForColor = (PieceColor::White == playerColor)   ? whiteWinPercentage
                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:63:13: warning: variable 'moveDetail' of type 'Book::MoveDetail' can be declared 'const' [misc-const-correctness]
            Book::MoveDetail moveDetail{nextMove, winPercentageForColor};
            ^
                             const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:63:30: note: FIX-IT applied suggested code changes
            Book::MoveDetail moveDetail{nextMove, winPercentageForColor};
                             ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:86:5: warning: variable 'chessDotComBookDatabase' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:86:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:88:5: warning: variable 'boardWithBUWD' of type 'Board' can be declared 'const' [misc-const-correctness]
    Board boardWithBUWD(BoardOrientation::BlackUpWhiteDown);
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:88:11: note: FIX-IT applied suggested code changes
    Board boardWithBUWD(BoardOrientation::BlackUpWhiteDown);
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:89:5: warning: variable 'boardWithWUBD' of type 'Board' can be declared 'const' [misc-const-correctness]
    Board boardWithWUBD(BoardOrientation::WhiteUpBlackDown);
    ^
          const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:89:11: note: FIX-IT applied suggested code changes
    Board boardWithWUBD(BoardOrientation::WhiteUpBlackDown);
          ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:109:5: warning: variable 'chessDotComBookDatabase' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:109:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:142:5: warning: variable 'chessDotComBookDatabase' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:142:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:175:5: warning: variable 'chessDotComBookDatabase' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:175:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:208:5: warning: variable 'chessDotComBookDatabase' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DatabaseForBooksTests.cpp:208:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
                         ^
[86/89] Building CXX object CMakeFiles/ChessPeek.dir/tst/PreparationTests/DownloadMovesFromChessDotComTests.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:23:12: warning: constructor does not initialize these fields: condition [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
    struct CheckDetail {
           ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:64:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:17:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:34:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:40:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Book.hpp:10:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:41:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:6:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:50:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:7:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:47:35: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int firstIndexOfFirstString = withTags.find("<", 0);
                                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:52:9: warning: variable 'lastIndexOfFirstString' of type 'int' can be declared 'const' [misc-const-correctness]
        int lastIndexOfFirstString = firstIndexOfFirstString + 1;
        ^
            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:52:13: note: FIX-IT applied suggested code changes
        int lastIndexOfFirstString = firstIndexOfFirstString + 1;
            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:53:9: warning: variable 'firstIndexOfSecondString' of type 'int' can be declared 'const' [misc-const-correctness]
        int firstIndexOfSecondString = withTags.find(">", lastIndexOfFirstString);
        ^
            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:53:13: note: FIX-IT applied suggested code changes
        int firstIndexOfSecondString = withTags.find(">", lastIndexOfFirstString);
            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:53:40: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        int firstIndexOfSecondString = withTags.find(">", lastIndexOfFirstString);
                                       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:55:13: warning: variable 'lastIndexOfSecondString' of type 'int' can be declared 'const' [misc-const-correctness]
            int lastIndexOfSecondString = firstIndexOfSecondString + 1;
            ^
                const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:55:17: note: FIX-IT applied suggested code changes
            int lastIndexOfSecondString = firstIndexOfSecondString + 1;
                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:58:39: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
            firstIndexOfFirstString = withTags.find("<", 0);
                                      ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:69:5: warning: variable 'indexToStart' of type 'int' can be declared 'const' [misc-const-correctness]
    int indexToStart = index;
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:69:9: note: FIX-IT applied suggested code changes
    int indexToStart = index;
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:70:5: warning: variable 'firstIndexOfFirstString' of type 'int' can be declared 'const' [misc-const-correctness]
    int firstIndexOfFirstString = mainString.find(firstString, indexToStart);
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:70:9: note: FIX-IT applied suggested code changes
    int firstIndexOfFirstString = mainString.find(firstString, indexToStart);
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:70:35: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int firstIndexOfFirstString = mainString.find(firstString, indexToStart);
                                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:72:9: warning: variable 'lastIndexOfFirstString' of type 'int' can be declared 'const' [misc-const-correctness]
        int lastIndexOfFirstString = firstIndexOfFirstString + firstString.length();
        ^
            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:72:13: note: FIX-IT applied suggested code changes
        int lastIndexOfFirstString = firstIndexOfFirstString + firstString.length();
            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:72:38: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        int lastIndexOfFirstString = firstIndexOfFirstString + firstString.length();
                                     ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:73:9: warning: variable 'firstIndexOfSecondString' of type 'int' can be declared 'const' [misc-const-correctness]
        int firstIndexOfSecondString = mainString.find(secondString, lastIndexOfFirstString);
        ^
            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:73:13: note: FIX-IT applied suggested code changes
        int firstIndexOfSecondString = mainString.find(secondString, lastIndexOfFirstString);
            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:73:40: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        int firstIndexOfSecondString = mainString.find(secondString, lastIndexOfFirstString);
                                       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:76:21: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
            index = firstIndexOfSecondString + secondString.length();
                    ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:89:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:89:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:514:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:112:5: warning: variable 'userAutomation' of type 'AlbaLocalUserAutomation' can be declared 'const' [misc-const-correctness]
    AlbaLocalUserAutomation userAutomation;
    ^
                            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:112:29: note: FIX-IT applied suggested code changes
    AlbaLocalUserAutomation userAutomation;
                            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:114:27: warning: static member accessed through instance [readability-static-accessed-through-instance]
        shouldStillRun = !userAutomation.isKeyPressed(VK_NUMLOCK);
                          ^~~~~~~~~~~~~~~
                          alba::AlbaLocalUserAutomation::
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:114:27: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:115:9: warning: static member accessed through instance [readability-static-accessed-through-instance]
        userAutomation.sleep(100);
        ^~~~~~~~~~~~~~~
        alba::AlbaLocalUserAutomation::
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:115:9: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:127:5: warning: variable 'configuration' of type 'Configuration' can be declared 'const' [misc-const-correctness]
    Configuration configuration(Configuration::Type::ChessDotComExplorer);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:127:19: note: FIX-IT applied suggested code changes
    Configuration configuration(Configuration::Type::ChessDotComExplorer);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:129:5: warning: variable 'userAutomation' of type 'AlbaLocalUserAutomation' can be declared 'const' [misc-const-correctness]
    AlbaLocalUserAutomation userAutomation;
    ^
                            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:129:29: note: FIX-IT applied suggested code changes
    AlbaLocalUserAutomation userAutomation;
                            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:131:5: warning: variable 'topLeft' of type 'MousePosition' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    MousePosition topLeft(2245, 101);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:131:19: note: FIX-IT applied suggested code changes
    MousePosition topLeft(2245, 101);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:132:5: warning: variable 'bottomRight' of type 'MousePosition' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    MousePosition bottomRight(3124, 980);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:132:19: note: FIX-IT applied suggested code changes
    MousePosition bottomRight(3124, 980);
                  ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:135:5: warning: variable 'deltaX' of type 'double' can be declared 'const' [misc-const-correctness]
    double deltaX = (bottomRight.getX() - topLeft.getX()) / 8;
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:135:12: note: FIX-IT applied suggested code changes
    double deltaX = (bottomRight.getX() - topLeft.getX()) / 8;
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:136:5: warning: variable 'deltaY' of type 'double' can be declared 'const' [misc-const-correctness]
    double deltaY = (bottomRight.getY() - topLeft.getY()) / 8;
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:136:12: note: FIX-IT applied suggested code changes
    double deltaY = (bottomRight.getY() - topLeft.getY()) / 8;
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:141:9: warning: variable 'move' of type 'Move' (aka 'pair<AlbaXY<int>, AlbaXY<int>>') can be declared 'const' [misc-const-correctness]
        Move move = updatedBoard.getMoveUsingAlgebraicNotation(moveString, currentColor);
        ^
             const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:141:14: note: FIX-IT applied suggested code changes
        Move move = updatedBoard.getMoveUsingAlgebraicNotation(moveString, currentColor);
             ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:143:13: warning: variable 'startX' of type 'int' can be declared 'const' [misc-const-correctness]
            int startX = round(topLeft.getX() + (move.first.getX() + 0.5) * deltaX);
            ^
                const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:143:17: note: FIX-IT applied suggested code changes
            int startX = round(topLeft.getX() + (move.first.getX() + 0.5) * deltaX);
                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:143:26: warning: narrowing conversion from 'double' to 'int' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
            int startX = round(topLeft.getX() + (move.first.getX() + 0.5) * deltaX);
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:144:13: warning: variable 'startY' of type 'int' can be declared 'const' [misc-const-correctness]
            int startY = round(topLeft.getY() + (move.first.getY() + 0.5) * deltaY);
            ^
                const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:144:17: note: FIX-IT applied suggested code changes
            int startY = round(topLeft.getY() + (move.first.getY() + 0.5) * deltaY);
                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:144:26: warning: narrowing conversion from 'double' to 'int' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
            int startY = round(topLeft.getY() + (move.first.getY() + 0.5) * deltaY);
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:145:13: warning: variable 'endX' of type 'int' can be declared 'const' [misc-const-correctness]
            int endX = round(topLeft.getX() + (move.second.getX() + 0.5) * deltaX);
            ^
                const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:145:17: note: FIX-IT applied suggested code changes
            int endX = round(topLeft.getX() + (move.second.getX() + 0.5) * deltaX);
                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:145:24: warning: narrowing conversion from 'double' to 'int' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
            int endX = round(topLeft.getX() + (move.second.getX() + 0.5) * deltaX);
                       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:146:13: warning: variable 'endY' of type 'int' can be declared 'const' [misc-const-correctness]
            int endY = round(topLeft.getY() + (move.second.getY() + 0.5) * deltaY);
            ^
                const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:146:17: note: FIX-IT applied suggested code changes
            int endY = round(topLeft.getY() + (move.second.getY() + 0.5) * deltaY);
                ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:146:24: warning: narrowing conversion from 'double' to 'int' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
            int endY = round(topLeft.getY() + (move.second.getY() + 0.5) * deltaY);
                       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:148:13: warning: static member accessed through instance [readability-static-accessed-through-instance]
            userAutomation.setMousePosition(MousePosition(startX, startY));
            ^~~~~~~~~~~~~~~
            alba::AlbaLocalUserAutomation::
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:148:13: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:149:13: warning: static member accessed through instance [readability-static-accessed-through-instance]
            userAutomation.pressLeftButtonOnMouse();
            ^~~~~~~~~~~~~~~
            alba::AlbaLocalUserAutomation::
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:149:13: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:150:13: warning: static member accessed through instance [readability-static-accessed-through-instance]
            userAutomation.sleep(200);
            ^~~~~~~~~~~~~~~
            alba::AlbaLocalUserAutomation::
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:150:13: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:151:13: warning: static member accessed through instance [readability-static-accessed-through-instance]
            userAutomation.setMousePosition(MousePosition(endX, endY));
            ^~~~~~~~~~~~~~~
            alba::AlbaLocalUserAutomation::
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:151:13: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:152:13: warning: static member accessed through instance [readability-static-accessed-through-instance]
            userAutomation.sleep(200);
            ^~~~~~~~~~~~~~~
            alba::AlbaLocalUserAutomation::
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:152:13: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:153:13: warning: static member accessed through instance [readability-static-accessed-through-instance]
            userAutomation.releaseLeftButtonOnMouse();
            ^~~~~~~~~~~~~~~
            alba::AlbaLocalUserAutomation::
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:153:13: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:154:13: warning: static member accessed through instance [readability-static-accessed-through-instance]
            userAutomation.sleep(600);
            ^~~~~~~~~~~~~~~
            alba::AlbaLocalUserAutomation::
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:154:13: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:190:9: warning: variable 'line' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
        string line(fileReader.getLineAndIgnoreWhiteSpaces());
        ^
               const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:190:16: note: FIX-IT applied suggested code changes
        string line(fileReader.getLineAndIgnoreWhiteSpaces());
               ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:191:21: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        int index = line.find(R"("eco-classifier-component sidebar-game-opening")");
                    ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:205:21: warning: variable 'prefix' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
                    string prefix =
                    ^
                           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:205:28: note: FIX-IT applied suggested code changes
                    string prefix =
                           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:207:21: warning: variable 'suffix' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
                    string suffix =
                    ^
                           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:207:28: note: FIX-IT applied suggested code changes
                    string suffix =
                           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:214:21: warning: variable 'moveList' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
                    string moveList = getStringInBetween(
                    ^
                           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:214:28: note: FIX-IT applied suggested code changes
                    string moveList = getStringInBetween(
                           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:231:21: warning: variable 'moveList' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
                    string moveList = getStringInBetween(
                    ^
                           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:231:28: note: FIX-IT applied suggested code changes
                    string moveList = getStringInBetween(
                           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:233:21: warning: variable 'oneMatch' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
                    string oneMatch = getStringInBetween(
                    ^
                           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:233:28: note: FIX-IT applied suggested code changes
                    string oneMatch = getStringInBetween(
                           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:259:5: warning: variable 'size' of type 'int' can be declared 'const' [misc-const-correctness]
    int size = currentLine.size();
    ^
        const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:259:9: note: FIX-IT applied suggested code changes
    int size = currentLine.size();
        ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:259:16: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int size = currentLine.size();
               ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:263:13: warning: variable 'move' of type 'Move' (aka 'pair<AlbaXY<int>, AlbaXY<int>>') can be declared 'const' [misc-const-correctness]
            Move move = updatedBoard.getMoveUsingAlgebraicNotation(moveString, currentColor);
            ^
                 const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:263:18: note: FIX-IT applied suggested code changes
            Move move = updatedBoard.getMoveUsingAlgebraicNotation(moveString, currentColor);
                 ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:309:13: warning: variable 'lineString' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
            string lineString = fileReader.getLineAndIgnoreWhiteSpaces();
            ^
                   const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:309:20: note: FIX-IT applied suggested code changes
            string lineString = fileReader.getLineAndIgnoreWhiteSpaces();
                   ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:320:5: warning: variable 'userAutomation' of type 'AlbaLocalUserAutomation' can be declared 'const' [misc-const-correctness]
    AlbaLocalUserAutomation userAutomation;
    ^
                            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:320:29: note: FIX-IT applied suggested code changes
    AlbaLocalUserAutomation userAutomation;
                            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:325:5: warning: variable 'userAutomation' of type 'AlbaLocalUserAutomation' can be declared 'const' [misc-const-correctness]
    AlbaLocalUserAutomation userAutomation;
    ^
                            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:325:29: note: FIX-IT applied suggested code changes
    AlbaLocalUserAutomation userAutomation;
                            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:328:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
    userAutomation.setStringToClipboard(url);
    ^~~~~~~~~~~~~~~
    alba::AlbaLocalUserAutomation::
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:328:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:329:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
    userAutomation.sleep(1000);
    ^~~~~~~~~~~~~~~
    alba::AlbaLocalUserAutomation::
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:329:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:334:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
    userAutomation.sleep(500);
    ^~~~~~~~~~~~~~~
    alba::AlbaLocalUserAutomation::
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:334:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:353:5: warning: variable 'userAutomation' of type 'AlbaLocalUserAutomation' can be declared 'const' [misc-const-correctness]
    AlbaLocalUserAutomation userAutomation;
    ^
                            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:353:29: note: FIX-IT applied suggested code changes
    AlbaLocalUserAutomation userAutomation;
                            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:356:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
    userAutomation.setStringToClipboard(htmlFile);
    ^~~~~~~~~~~~~~~
    alba::AlbaLocalUserAutomation::
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:356:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:357:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
    userAutomation.sleep(1000);
    ^~~~~~~~~~~~~~~
    alba::AlbaLocalUserAutomation::
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:357:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:365:5: warning: variable 'userAutomation' of type 'AlbaLocalUserAutomation' can be declared 'const' [misc-const-correctness]
    AlbaLocalUserAutomation userAutomation;
    ^
                            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:365:29: note: FIX-IT applied suggested code changes
    AlbaLocalUserAutomation userAutomation;
                            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:387:5: warning: variable 'userAutomation' of type 'AlbaLocalUserAutomation' can be declared 'const' [misc-const-correctness]
    AlbaLocalUserAutomation userAutomation;
    ^
                            const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:387:29: note: FIX-IT applied suggested code changes
    AlbaLocalUserAutomation userAutomation;
                            ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:416:5: warning: variable 'outputIterator' of type 'ostream_iterator<string>' (aka 'ostream_iterator<basic_string<char, char_traits<char>, allocator<char>>>') can be declared 'const' [misc-const-correctness]
    ostream_iterator<string> outputIterator(outStream, ",");
    ^
                             const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:416:30: note: FIX-IT applied suggested code changes
    ostream_iterator<string> outputIterator(outStream, ",");
                             ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:468:5: warning: variable 'chessDotComBookDatabase' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:468:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler chessDotComBookDatabase(APRG_DIR CHESS_PEEK_CHESS_DOT_COM_BOOK_DATABASE);
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:501:5: warning: variable 'explorerUrl' of type 'AlbaWebPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaWebPathHandler explorerUrl(R"(https://www.chess.com/explorer)");
    ^
                       const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:501:24: note: FIX-IT applied suggested code changes
    AlbaWebPathHandler explorerUrl(R"(https://www.chess.com/explorer)");
                       ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:502:5: warning: variable 'tempHtmlFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler tempHtmlFile(APRG_DIR R"(\Chess\ChessPeek\Files\ChessDotComAutomation\temp.html)");
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:502:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler tempHtmlFile(APRG_DIR R"(\Chess\ChessPeek\Files\ChessDotComAutomation\temp.html)");
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:503:5: warning: variable 'dataFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler dataFile(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:503:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler dataFile(APRG_DIR
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:505:5: warning: variable 'linesFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler linesFile(APRG_DIR R"(\Chess\ChessPeek\Files\ChessDotComAutomation\ChessDotComLines.txt)");
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:505:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler linesFile(APRG_DIR R"(\Chess\ChessPeek\Files\ChessDotComAutomation\ChessDotComLines.txt)");
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:506:5: warning: variable 'lineNumberFile' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler lineNumberFile(APRG_DIR
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\DownloadMovesFromChessDotComTests.cpp:506:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler lineNumberFile(APRG_DIR
                         ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/tst/PreparationTests/DownloadMovesFromChessDotComTests.cpp:108:35: warning: unused variable 'userAutomation' [-Wunused-variable]
    AlbaLocalUserAutomation const userAutomation;
                                  ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/tst/PreparationTests/DownloadMovesFromChessDotComTests.cpp:125:35: warning: unused variable 'userAutomation' [-Wunused-variable]
    AlbaLocalUserAutomation const userAutomation;
                                  ^
2 warnings generated.
[87/89] Building CXX object CMakeFiles/ChessPeek.dir/tst/PreparationTests/PrintBoardDataTests.cpp.obj
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:23:12: warning: constructor does not initialize these fields: condition [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
    struct CheckDetail {
           ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:64:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardObserver.hpp:17:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:34:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/BoardWithContext.hpp:5:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:41:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/Configuration.hpp:6:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:50:2: warning: namespace 'alba::chess::ChessPeek' ends with a comment that refers to a wrong namespace 'alba' [google-readability-namespace-comments,llvm-namespace-comment]
}  // namespace alba
 ^
D:/a/aprg/aprg/Chess/ChessPeek/ChessPeek/src\ChessPeek/DetailsFromTheScreen.hpp:7:11: note: namespace 'alba::chess::ChessPeek' starts here
namespace alba::chess::ChessPeek {
          ^
note: cannot apply fix-it because an alias checker has suggested a different fix-it; please remove one of the checkers ('google-readability-namespace-comments', 'llvm-namespace-comment') or ensure they are both configured the same
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\PrintBoardDataTests.cpp:10:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\PrintBoardDataTests.cpp:10:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\PrintBoardDataTests.cpp:27:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\PrintBoardDataTests.cpp:17:5: warning: variable 'configuration' of type 'Configuration' can be declared 'const' [misc-const-correctness]
    Configuration configuration(Configuration::Type::ChessDotComVersus);
    ^
                  const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\PrintBoardDataTests.cpp:17:19: note: FIX-IT applied suggested code changes
    Configuration configuration(Configuration::Type::ChessDotComVersus);
                  ^
[88/89] Building CXX object CMakeFiles/ChessPeek.dir/tst/PreparationTests/ScreenMonitoringTests.cpp.obj
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\ScreenMonitoringTests.cpp:10:1: warning: nested namespaces can be concatenated [modernize-concat-nested-namespaces]
namespace alba {
^~~~~~~~~~~~~~~~
namespace alba::chess::ChessPeek
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\ScreenMonitoringTests.cpp:10:1: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\ScreenMonitoringTests.cpp:35:1: note: FIX-IT applied suggested code changes
}  // namespace ChessPeek
^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\ScreenMonitoringTests.cpp:20:5: warning: variable 'outputFileForWhite' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler outputFileForWhite(APRG_DIR R"(\Chess\ChessPeek\Files\ScreeMonitoringTest.bmp)");
    ^
                         const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\ScreenMonitoringTests.cpp:20:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler outputFileForWhite(APRG_DIR R"(\Chess\ChessPeek\Files\ScreeMonitoringTest.bmp)");
                         ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\ScreenMonitoringTests.cpp:21:5: warning: variable 'outputBitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap outputBitmap(outputFileForWhite.getFullPath());
    ^
           const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\ScreenMonitoringTests.cpp:21:12: note: FIX-IT applied suggested code changes
    Bitmap outputBitmap(outputFileForWhite.getFullPath());
           ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\ScreenMonitoringTests.cpp:24:5: warning: variable 'topLeftCorner' of type 'BitmapXY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    BitmapXY topLeftCorner = outputSnippet.getTopLeftCorner();
    ^
             const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\ScreenMonitoringTests.cpp:24:14: note: FIX-IT applied suggested code changes
    BitmapXY topLeftCorner = outputSnippet.getTopLeftCorner();
             ^
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\ScreenMonitoringTests.cpp:25:5: warning: variable 'bottomRightCorner' of type 'BitmapXY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    BitmapXY bottomRightCorner = outputSnippet.getBottomRightCorner();
    ^
             const 
D:\a\aprg\aprg\Chess\ChessPeek\ChessPeek\tst\PreparationTests\ScreenMonitoringTests.cpp:25:14: note: FIX-IT applied suggested code changes
    BitmapXY bottomRightCorner = outputSnippet.getBottomRightCorner();
             ^
[89/89] Linking CXX executable ChessPeek.exe
[35m2023-09-11T16:41:30[0m | [33mBuildAndRun.sh:218[0m | The script [BuildAndRun.sh] for [buildOnOneCore] is finished.
DONE!
