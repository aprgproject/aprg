StaticAnalysisJobIdentifier: [011]
2023-09-11T18:05:46
[35m2023-09-11T18:07:37[0m | [33mBuildAndRun.sh:28[0m | The current path is [/d/a/aprg/aprg/gsl/GslTest].
[35m2023-09-11T18:07:37[0m | [33mBuildAndRun.sh:29[0m | The scriptPath is [/d/a/aprg/aprg/AllCommonScripts/BuildAndRunScripts/BuildAndRun.sh].
[35m2023-09-11T18:07:37[0m | [33mBuildAndRun.sh:30[0m | The scriptOption is [buildOnOneCore].
[35m2023-09-11T18:07:37[0m | [33mBuildAndRun.sh:31[0m | The buildDirectoryName is [StaticAnalyzersBuild].
[35m2023-09-11T18:07:37[0m | [33mBuildAndRun.sh:32[0m | The argument1 is [Debug] and argument2 is [].
[35m2023-09-11T18:07:37[0m | [33mBuildAndRun.sh:33[0m | The immediateDirectoryName is [GslTest].
[35m2023-09-11T18:07:38[0m | [33mBuildAndRun.sh:84[0m | The buildType is [Debug].
[35m2023-09-11T18:07:38[0m | [33mBuildAndRun.sh:85[0m | The numberOfCores is [2].
[35m2023-09-11T18:07:38[0m | [33mBuildAndRun.sh:68[0m | The build path is [/d/a/aprg/aprg/gsl/StaticAnalyzersBuild] and the output of [ls -la --color=auto]:
total 1358
drwxr-xr-x 1 runneradmin 197121       0 Sep 11 18:07 .
drwxr-xr-x 1 runneradmin 197121       0 Sep 11 18:05 ..
-rw-r--r-- 1 runneradmin 197121   20641 Sep 11 18:07 CMakeCache.txt
drwxr-xr-x 1 runneradmin 197121       0 Sep 11 18:07 CMakeFiles
-rw-r--r-- 1 runneradmin 197121     492 Sep 11 18:07 CTestTestfile.cmake
-rw-r--r-- 1 runneradmin 197121    1570 Sep 11 18:07 arch.c
-rw-r--r-- 1 runneradmin 197121 1328046 Sep 11 18:07 build.ninja
drwxr-xr-x 1 runneradmin 197121       0 Sep 11 18:07 cmake
-rw-r--r-- 1 runneradmin 197121    2390 Sep 11 18:07 cmake_install.cmake
drwxr-xr-x 1 runneradmin 197121       0 Sep 11 18:07 gsl
-rwxr-xr-x 1 runneradmin 197121    1435 Sep 11 18:07 gsl-config
-rw-r--r-- 1 runneradmin 197121     334 Sep 11 18:07 gsl.pc
[1/1003] Building CXX object CMakeFiles/gtest.dir/D_/a/aprg/aprg/gtest/gtest/googletest/src/gtest-all.cc.obj
In file included from D:/a/aprg/aprg/gtest/gtest/googletest/src/gtest-all.cc:49:
D:/a/aprg/aprg/gtest/gtest/googletest\src/gtest.cc:2604:3: warning: extension used [-Wlanguage-extension-token]
  __try {
  ^
1 warning generated.
[2/1003] Building CXX object CMakeFiles/gtest.dir/D_/a/aprg/aprg/gtest/gtest/googletest/src/gtest_main.cc.obj
[3/1003] Linking CXX static library gtest.lib
[4/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Container/AlbaContainerHelper.cpp.obj
[5/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/File/AlbaFileReader.cpp.obj
[6/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Angle/AlbaAngle.cpp.obj
[7/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/ComplexNumberHelpers.cpp.obj
[8/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/ComputationHelpers.cpp.obj
[9/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/FactorAndMulitplesHelpers.cpp.obj
[10/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/PowerHelpers.cpp.obj
[11/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/PrecisionHelpers.cpp.obj
[12/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/StatisticsHelpers.cpp.obj
[13/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/AlbaComplexNumber.cpp.obj
[14/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/AlbaNumber.cpp.obj
[15/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberInterval.cpp.obj
[16/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberIntervalEndpoint.cpp.obj
[17/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberIntervalHelpers.cpp.obj
[18/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Ratio/AlbaRatio.cpp.obj
[19/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Memory/AlbaMemoryBuffer.cpp.obj
[20/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/PathHandler/AlbaPathHandler.cpp.obj
[21/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/PathHandler/AlbaWebPathHandler.cpp.obj
[22/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Print/AlbaPrintFunctions.cpp.obj
[23/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/AlbaOldRandomizer.cpp.obj
[24/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/EntropySources/AlbaCombinedEntropySource.cpp.obj
[25/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/EntropySources/AlbaEntropySourceBasedOnTime.cpp.obj
[26/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamBitReader.cpp.obj
[27/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamBitWriter.cpp.obj
[28/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamParameterReader.cpp.obj
[29/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamParameterWriter.cpp.obj
[30/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/String/AlbaStringHelper.cpp.obj
[31/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaDateTime.cpp.obj
[32/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaDateTimeHelper.cpp.obj
[33/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimeHelper.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\Time\AlbaLocalTimeHelper.cpp:23:34: warning: 'localtime' is deprecated: This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    struct tm const localTime = *localtime(&currentTimeT);
                                 ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h:524:9: note: 'localtime' has been explicitly marked deprecated here
        _CRT_INSECURE_DEPRECATE(localtime_s)
        ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimeHelper.cpp:23:34: warning: 'localtime' is deprecated: This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    struct tm const localTime = *localtime(&currentTimeT);
                                 ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h:524:9: note: 'localtime' has been explicitly marked deprecated here
        _CRT_INSECURE_DEPRECATE(localtime_s)
        ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
1 warning generated.
[34/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimer.cpp.obj
[35/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/User/AlbaUserInterface.cpp.obj
[36/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/User/DisplayTable.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\User\DisplayTable.cpp:205:67: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
int DisplayTablePrinter::getVerticalBorderLength() const { return m_verticalBorder.length(); }
                                                                  ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\User\DisplayTable.cpp:208:12: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return ((m_maxLengthAtColumn.size() + 1) * getVerticalBorderLength()) + m_totalColumnLength;
           ^
[37/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Utility/AlbaScopeGuard.cpp.obj
[38/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities/CommonTestsUtilities/File/BaseFileReaderTest.cpp.obj
[39/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities/CommonTestsUtilities/File/FileUtilities.cpp.obj
[40/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/PathHandler/AlbaWindowsPathHandler.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:28:24: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const length = fullPath.length();
                       ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:30:45: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        int const indexWithSlashCharacter = fullPath.find_first_of(m_slashCharacterString, index);
                                            ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:270:23: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const index = m_directory.find_first_of(m_slashCharacterString + ":");
                      ^
[41/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Time/AlbaWindowsTimeHelper.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\Time\AlbaWindowsTimeHelper.cpp:6:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return AlbaDateTime(
           ^
[42/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Time/AlbaWindowsTimer.cpp.obj
[43/1003] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Windows/AlbaWindowsHelper.cpp.obj
[44/1003] Linking CXX static library APRG_COMMON.lib
[45/1003] Generating gsl/gsl_inline.h, gsl/gsl_machine.h, gsl/gsl_math.h, gsl/gsl_minmax.h, gsl/gsl_mode.h, gsl/gsl_nan.h, gsl/gsl_pow_int.h, gsl/gsl_precision.h, gsl/gsl_types.h, gsl/gsl_version.h, gsl/gsl_blas.h, gsl/gsl_blas_types.h, gsl/gsl_block.h, gsl/gsl_block_char.h, gsl/gsl_block_complex_double.h, gsl/gsl_block_complex_float.h, gsl/gsl_block_complex_long_double.h, gsl/gsl_block_double.h, gsl/gsl_block_float.h, gsl/gsl_block_int.h, gsl/gsl_block_long.h, gsl/gsl_block_long_double.h, gsl/gsl_block_short.h, gsl/gsl_block_uchar.h, gsl/gsl_block_uint.h, gsl/gsl_block_ulong.h, gsl/gsl_block_ushort.h, gsl/gsl_check_range.h, gsl/gsl_bspline.h, gsl/gsl_bst.h, gsl/gsl_bst_avl.h, gsl/gsl_bst_rb.h, gsl/gsl_bst_types.h, gsl/gsl_cblas.h, gsl/gsl_cdf.h, gsl/gsl_chebyshev.h, gsl/gsl_combination.h, gsl/gsl_complex.h, gsl/gsl_complex_math.h, gsl/gsl_const.h, gsl/gsl_const_cgs.h, gsl/gsl_const_cgsm.h, gsl/gsl_const_mks.h, gsl/gsl_const_mksa.h, gsl/gsl_const_num.h, gsl/gsl_deriv.h, gsl/gsl_dht.h, gsl/gsl_diff.h, gsl/gsl_eigen.h, gsl/gsl_errno.h, gsl/gsl_message.h, gsl/gsl_dft_complex.h, gsl/gsl_dft_complex_float.h, gsl/gsl_fft.h, gsl/gsl_fft_complex.h, gsl/gsl_fft_complex_float.h, gsl/gsl_fft_halfcomplex.h, gsl/gsl_fft_halfcomplex_float.h, gsl/gsl_fft_real.h, gsl/gsl_fft_real_float.h, gsl/gsl_filter.h, gsl/gsl_fit.h, gsl/gsl_histogram.h, gsl/gsl_histogram2d.h, gsl/gsl_ieee_utils.h, gsl/gsl_integration.h, gsl/gsl_interp.h, gsl/gsl_interp2d.h, gsl/gsl_spline.h, gsl/gsl_spline2d.h, gsl/gsl_linalg.h, gsl/gsl_matrix.h, gsl/gsl_matrix_char.h, gsl/gsl_matrix_complex_double.h, gsl/gsl_matrix_complex_float.h, gsl/gsl_matrix_complex_long_double.h, gsl/gsl_matrix_double.h, gsl/gsl_matrix_float.h, gsl/gsl_matrix_int.h, gsl/gsl_matrix_long.h, gsl/gsl_matrix_long_double.h, gsl/gsl_matrix_short.h, gsl/gsl_matrix_uchar.h, gsl/gsl_matrix_uint.h, gsl/gsl_matrix_ulong.h, gsl/gsl_matrix_ushort.h, gsl/gsl_min.h, gsl/gsl_monte.h, gsl/gsl_monte_miser.h, gsl/gsl_monte_plain.h, gsl/gsl_monte_vegas.h, gsl/gsl_movstat.h, gsl/gsl_multifit.h, gsl/gsl_multifit_nlin.h, gsl/gsl_multifit_nlinear.h, gsl/gsl_multilarge.h, gsl/gsl_multilarge_nlinear.h, gsl/gsl_multimin.h, gsl/gsl_multiroots.h, gsl/gsl_multiset.h, gsl/gsl_ntuple.h, gsl/gsl_odeiv.h, gsl/gsl_odeiv2.h, gsl/gsl_permutation.h, gsl/gsl_permute.h, gsl/gsl_permute_char.h, gsl/gsl_permute_complex_double.h, gsl/gsl_permute_complex_float.h, gsl/gsl_permute_complex_long_double.h, gsl/gsl_permute_double.h, gsl/gsl_permute_float.h, gsl/gsl_permute_int.h, gsl/gsl_permute_long.h, gsl/gsl_permute_long_double.h, gsl/gsl_permute_matrix.h, gsl/gsl_permute_matrix_char.h, gsl/gsl_permute_matrix_complex_double.h, gsl/gsl_permute_matrix_complex_float.h, gsl/gsl_permute_matrix_complex_long_double.h, gsl/gsl_permute_matrix_double.h, gsl/gsl_permute_matrix_float.h, gsl/gsl_permute_matrix_int.h, gsl/gsl_permute_matrix_long.h, gsl/gsl_permute_matrix_long_double.h, gsl/gsl_permute_matrix_short.h, gsl/gsl_permute_matrix_uchar.h, gsl/gsl_permute_matrix_uint.h, gsl/gsl_permute_matrix_ulong.h, gsl/gsl_permute_matrix_ushort.h, gsl/gsl_permute_short.h, gsl/gsl_permute_uchar.h, gsl/gsl_permute_uint.h, gsl/gsl_permute_ulong.h, gsl/gsl_permute_ushort.h, gsl/gsl_permute_vector.h, gsl/gsl_permute_vector_char.h, gsl/gsl_permute_vector_complex_double.h, gsl/gsl_permute_vector_complex_float.h, gsl/gsl_permute_vector_complex_long_double.h, gsl/gsl_permute_vector_double.h, gsl/gsl_permute_vector_float.h, gsl/gsl_permute_vector_int.h, gsl/gsl_permute_vector_long.h, gsl/gsl_permute_vector_long_double.h, gsl/gsl_permute_vector_short.h, gsl/gsl_permute_vector_uchar.h, gsl/gsl_permute_vector_uint.h, gsl/gsl_permute_vector_ulong.h, gsl/gsl_permute_vector_ushort.h, gsl/gsl_poly.h, gsl/gsl_qrng.h, gsl/gsl_randist.h, gsl/gsl_rng.h, gsl/gsl_roots.h, gsl/gsl_rstat.h, gsl/gsl_siman.h, gsl/gsl_heapsort.h, gsl/gsl_sort.h, gsl/gsl_sort_char.h, gsl/gsl_sort_double.h, gsl/gsl_sort_float.h, gsl/gsl_sort_int.h, gsl/gsl_sort_long.h, gsl/gsl_sort_long_double.h, gsl/gsl_sort_short.h, gsl/gsl_sort_uchar.h, gsl/gsl_sort_uint.h, gsl/gsl_sort_ulong.h, gsl/gsl_sort_ushort.h, gsl/gsl_sort_vector.h, gsl/gsl_sort_vector_char.h, gsl/gsl_sort_vector_double.h, gsl/gsl_sort_vector_float.h, gsl/gsl_sort_vector_int.h, gsl/gsl_sort_vector_long.h, gsl/gsl_sort_vector_long_double.h, gsl/gsl_sort_vector_short.h, gsl/gsl_sort_vector_uchar.h, gsl/gsl_sort_vector_uint.h, gsl/gsl_sort_vector_ulong.h, gsl/gsl_sort_vector_ushort.h, gsl/gsl_spblas.h, gsl/gsl_sf.h, gsl/gsl_sf_airy.h, gsl/gsl_sf_bessel.h, gsl/gsl_sf_clausen.h, gsl/gsl_sf_coulomb.h, gsl/gsl_sf_coupling.h, gsl/gsl_sf_dawson.h, gsl/gsl_sf_debye.h, gsl/gsl_sf_dilog.h, gsl/gsl_sf_elementary.h, gsl/gsl_sf_ellint.h, gsl/gsl_sf_elljac.h, gsl/gsl_sf_erf.h, gsl/gsl_sf_exp.h, gsl/gsl_sf_expint.h, gsl/gsl_sf_fermi_dirac.h, gsl/gsl_sf_gamma.h, gsl/gsl_sf_gegenbauer.h, gsl/gsl_sf_hermite.h, gsl/gsl_sf_hyperg.h, gsl/gsl_sf_laguerre.h, gsl/gsl_sf_lambert.h, gsl/gsl_sf_legendre.h, gsl/gsl_sf_log.h, gsl/gsl_sf_mathieu.h, gsl/gsl_sf_pow_int.h, gsl/gsl_sf_psi.h, gsl/gsl_sf_result.h, gsl/gsl_sf_sincos_pi.h, gsl/gsl_sf_synchrotron.h, gsl/gsl_sf_transport.h, gsl/gsl_sf_trig.h, gsl/gsl_sf_zeta.h, gsl/gsl_specfunc.h, gsl/gsl_splinalg.h, gsl/gsl_spmatrix.h, gsl/gsl_spmatrix_char.h, gsl/gsl_spmatrix_complex_double.h, gsl/gsl_spmatrix_complex_float.h, gsl/gsl_spmatrix_complex_long_double.h, gsl/gsl_spmatrix_double.h, gsl/gsl_spmatrix_float.h, gsl/gsl_spmatrix_int.h, gsl/gsl_spmatrix_long.h, gsl/gsl_spmatrix_long_double.h, gsl/gsl_spmatrix_short.h, gsl/gsl_spmatrix_uchar.h, gsl/gsl_spmatrix_uint.h, gsl/gsl_spmatrix_ulong.h, gsl/gsl_spmatrix_ushort.h, gsl/gsl_statistics.h, gsl/gsl_statistics_char.h, gsl/gsl_statistics_double.h, gsl/gsl_statistics_float.h, gsl/gsl_statistics_int.h, gsl/gsl_statistics_long.h, gsl/gsl_statistics_long_double.h, gsl/gsl_statistics_short.h, gsl/gsl_statistics_uchar.h, gsl/gsl_statistics_uint.h, gsl/gsl_statistics_ulong.h, gsl/gsl_statistics_ushort.h, gsl/gsl_sum.h, gsl/gsl_sys.h, gsl/gsl_test.h, gsl/gsl_vector.h, gsl/gsl_vector_char.h, gsl/gsl_vector_complex.h, gsl/gsl_vector_complex_double.h, gsl/gsl_vector_complex_float.h, gsl/gsl_vector_complex_long_double.h, gsl/gsl_vector_double.h, gsl/gsl_vector_float.h, gsl/gsl_vector_int.h, gsl/gsl_vector_long.h, gsl/gsl_vector_long_double.h, gsl/gsl_vector_short.h, gsl/gsl_vector_uchar.h, gsl/gsl_vector_uint.h, gsl/gsl_vector_ulong.h, gsl/gsl_vector_ushort.h, gsl/gsl_wavelet.h, gsl/gsl_wavelet2d.h
[46/1003] Building CXX object CMakeFiles/GslTest.dir/tst/Gsl_unit.cpp.obj
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:37:5: warning: variable 'xValue' of type 'double' can be declared 'const' [misc-const-correctness]
    double xValue = 5.0;
    ^
           const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:37:12: note: FIX-IT applied suggested code changes
    double xValue = 5.0;
           ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:38:5: warning: variable 'yValue' of type 'double' can be declared 'const' [misc-const-correctness]
    double yValue = gsl_sf_bessel_J0(xValue);
    ^
           const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:38:12: note: FIX-IT applied suggested code changes
    double yValue = gsl_sf_bessel_J0(xValue);
           ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:77:5: warning: variable 'initialPermutation' of type 'PermutationVector' (aka 'vector<unsigned long long>') can be declared 'const' [misc-const-correctness]
    PermutationVector initialPermutation(permutation1->data, permutation1->data + permutation1->size);
    ^
                      const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:77:23: note: FIX-IT applied suggested code changes
    PermutationVector initialPermutation(permutation1->data, permutation1->data + permutation1->size);
                      ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:78:5: warning: variable 'expectedInitialPermutation' of type 'PermutationVector' (aka 'vector<unsigned long long>') can be declared 'const' [misc-const-correctness]
    PermutationVector expectedInitialPermutation{0, 1, 2, 3, 4};
    ^
                      const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:78:23: note: FIX-IT applied suggested code changes
    PermutationVector expectedInitialPermutation{0, 1, 2, 3, 4};
                      ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:82:5: warning: variable 'nextPermutation' of type 'PermutationVector' (aka 'vector<unsigned long long>') can be declared 'const' [misc-const-correctness]
    PermutationVector nextPermutation(permutation1->data, permutation1->data + permutation1->size);
    ^
                      const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:82:23: note: FIX-IT applied suggested code changes
    PermutationVector nextPermutation(permutation1->data, permutation1->data + permutation1->size);
                      ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:83:5: warning: variable 'expectedNextPermutation' of type 'PermutationVector' (aka 'vector<unsigned long long>') can be declared 'const' [misc-const-correctness]
    PermutationVector expectedNextPermutation{0, 1, 2, 4, 3};
    ^
                      const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:83:23: note: FIX-IT applied suggested code changes
    PermutationVector expectedNextPermutation{0, 1, 2, 4, 3};
                      ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:87:5: warning: variable 'prevPermutation' of type 'PermutationVector' (aka 'vector<unsigned long long>') can be declared 'const' [misc-const-correctness]
    PermutationVector prevPermutation(permutation1->data, permutation1->data + permutation1->size);
    ^
                      const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:87:23: note: FIX-IT applied suggested code changes
    PermutationVector prevPermutation(permutation1->data, permutation1->data + permutation1->size);
                      ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:88:5: warning: variable 'expectedPrevPermutation' of type 'PermutationVector' (aka 'vector<unsigned long long>') can be declared 'const' [misc-const-correctness]
    PermutationVector expectedPrevPermutation{0, 1, 2, 3, 4};
    ^
                      const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:88:23: note: FIX-IT applied suggested code changes
    PermutationVector expectedPrevPermutation{0, 1, 2, 3, 4};
                      ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:97:5: warning: variable 'inversePermutation' of type 'PermutationVector' (aka 'vector<unsigned long long>') can be declared 'const' [misc-const-correctness]
    PermutationVector inversePermutation(permutation2->data, permutation2->data + permutation2->size);
    ^
                      const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:97:23: note: FIX-IT applied suggested code changes
    PermutationVector inversePermutation(permutation2->data, permutation2->data + permutation2->size);
                      ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:98:5: warning: variable 'expectedInversePermutation' of type 'PermutationVector' (aka 'vector<unsigned long long>') can be declared 'const' [misc-const-correctness]
    PermutationVector expectedInversePermutation{0, 1, 4, 2, 3};
    ^
                      const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:98:23: note: FIX-IT applied suggested code changes
    PermutationVector expectedInversePermutation{0, 1, 4, 2, 3};
                      ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:184:5: warning: variable 'expectedSmallestValues' of type 'decltype(smallestValues)' (aka 'array<double, NUMBER_OF_SMALLEST_VALUES>') can be declared 'const' [misc-const-correctness]
    decltype(smallestValues) expectedSmallestValues{0, 1, 2, 3, 4};
    ^
                             const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:184:30: note: FIX-IT applied suggested code changes
    decltype(smallestValues) expectedSmallestValues{0, 1, 2, 3, 4};
                             ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:195:5: warning: variable 'matrixViewA' of type 'gsl_matrix_view' (aka '_gsl_matrix_view') can be declared 'const' [misc-const-correctness]
    gsl_matrix_view matrixViewA = gsl_matrix_view_array(matrixA.getMatrixDataReference().data(), 2, 3);
    ^
                    const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:195:21: note: FIX-IT applied suggested code changes
    gsl_matrix_view matrixViewA = gsl_matrix_view_array(matrixA.getMatrixDataReference().data(), 2, 3);
                    ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:196:5: warning: variable 'matrixViewB' of type 'gsl_matrix_view' (aka '_gsl_matrix_view') can be declared 'const' [misc-const-correctness]
    gsl_matrix_view matrixViewB = gsl_matrix_view_array(matrixB.getMatrixDataReference().data(), 3, 2);
    ^
                    const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:196:21: note: FIX-IT applied suggested code changes
    gsl_matrix_view matrixViewB = gsl_matrix_view_array(matrixB.getMatrixDataReference().data(), 3, 2);
                    ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:202:5: warning: variable 'expectedMatrixC' of type 'AlbaMatrix<double>' can be declared 'const' [misc-const-correctness]
    AlbaMatrix<double> expectedMatrixC(2, 2, {367.76, 368.12, 674.06, 674.72});
    ^
                       const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:202:24: note: FIX-IT applied suggested code changes
    AlbaMatrix<double> expectedMatrixC(2, 2, {367.76, 368.12, 674.06, 674.72});
                       ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:211:5: warning: variable 'matrixViewA' of type 'gsl_matrix_view' (aka '_gsl_matrix_view') can be declared 'const' [misc-const-correctness]
    gsl_matrix_view matrixViewA = gsl_matrix_view_array(matrixA.getMatrixDataReference().data(), SIDE_SIZE, SIDE_SIZE);
    ^
                    const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:211:21: note: FIX-IT applied suggested code changes
    gsl_matrix_view matrixViewA = gsl_matrix_view_array(matrixA.getMatrixDataReference().data(), SIDE_SIZE, SIDE_SIZE);
                    ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:212:5: warning: variable 'matrixViewB' of type 'gsl_matrix_view' (aka '_gsl_matrix_view') can be declared 'const' [misc-const-correctness]
    gsl_matrix_view matrixViewB = gsl_matrix_view_array(matrixB.getMatrixDataReference().data(), SIDE_SIZE, SIDE_SIZE);
    ^
                    const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:212:21: note: FIX-IT applied suggested code changes
    gsl_matrix_view matrixViewB = gsl_matrix_view_array(matrixB.getMatrixDataReference().data(), SIDE_SIZE, SIDE_SIZE);
                    ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:246:5: warning: variable 'vectorViewB' of type 'gsl_vector_view' (aka '_gsl_vector_view') can be declared 'const' [misc-const-correctness]
    gsl_vector_view vectorViewB = gsl_vector_view_array(vectorB.data(), 4);
    ^
                    const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:246:21: note: FIX-IT applied suggested code changes
    gsl_vector_view vectorViewB = gsl_vector_view_array(vectorB.data(), 4);
                    ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:254:5: warning: variable 'expectedVectorX' of type 'vector<double>' can be declared 'const' [misc-const-correctness]
    vector<double> expectedVectorX{-4.0520502295739744, -12.605611395906907, 1.6609116267088422, 8.6937669287952293};
    ^
                   const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:254:20: note: FIX-IT applied suggested code changes
    vector<double> expectedVectorX{-4.0520502295739744, -12.605611395906907, 1.6609116267088422, 8.6937669287952293};
                   ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:278:5: warning: variable 'expectedEigenValues' of type 'vector<double>' can be declared 'const' [misc-const-correctness]
    vector<double> expectedEigenValues{
    ^
                   const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:278:20: note: FIX-IT applied suggested code changes
    vector<double> expectedEigenValues{
                   ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:280:5: warning: variable 'expectedEigenVectors' of type 'AlbaMatrix<double>' can be declared 'const' [misc-const-correctness]
    AlbaMatrix<double> expectedEigenVectors(
    ^
                       const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:280:24: note: FIX-IT applied suggested code changes
    AlbaMatrix<double> expectedEigenVectors(
                       ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:334:5: warning: variable 'alpha' of type 'double' can be declared 'const' [misc-const-correctness]
    double alpha = *static_cast<double *>(parameters);
    ^
           const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:334:12: note: FIX-IT applied suggested code changes
    double alpha = *static_cast<double *>(parameters);
           ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:355:5: warning: variable 'expectedValue' of type 'double' can be declared 'const' [misc-const-correctness]
    double expectedValue = -4.0;
    ^
           const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:355:12: note: FIX-IT applied suggested code changes
    double expectedValue = -4.0;
           ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:367:5: warning: variable 'mFunctionInput' of type 'int' can be declared 'const' [misc-const-correctness]
    int mFunctionInput = *static_cast<int *>(parameters);
    ^
        const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:367:9: note: FIX-IT applied suggested code changes
    int mFunctionInput = *static_cast<int *>(parameters);
        ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:390:5: warning: variable 'expectedValue' of type 'double' can be declared 'const' [misc-const-correctness]
    double expectedValue = (mFunctionInput % 2 == 0) ? M_SQRTPI + gsl_sf_gamma(0.5 * (1.0 + mFunctionInput)) : M_SQRTPI;
    ^
           const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:390:12: note: FIX-IT applied suggested code changes
    double expectedValue = (mFunctionInput % 2 == 0) ? M_SQRTPI + gsl_sf_gamma(0.5 * (1.0 + mFunctionInput)) : M_SQRTPI;
           ^
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:408:5: warning: variable 'NUMBER_OF_ITEMS' of type 'int' can be declared 'const' [misc-const-correctness]
    int NUMBER_OF_ITEMS = 10;
    ^
        const 
D:\a\aprg\aprg\gsl\GslTest\tst\Gsl_unit.cpp:408:9: note: FIX-IT applied suggested code changes
    int NUMBER_OF_ITEMS = 10;
        ^
In file included from D:/a/aprg/aprg/gsl/GslTest/tst/Gsl_unit.cpp:1:
D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Debug/AlbaDebug.hpp:13:2: warning: #warning is a C++2b extension [-Wpedantic]
#warning("The class AlbaDebug is used. Please remove after your done debugging.") // GCC extension
 ^
D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Debug/AlbaDebug.hpp:13:2: warning: ("The class AlbaDebug is used. Please remove after your done debugging.") // GCC extension [-W#warnings]
2 warnings generated.
[47/1003] Building C object gsl/CMakeFiles/sys_test.dir/sys/test.c.obj
D:\a\aprg\aprg\gsl\gsl\sys\test.c:30:10: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
  double y;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\sys\test.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\sys\test.c:30:11: note: FIX-IT applied suggested code changes
  double y;
          ^
D:\a\aprg\aprg\gsl\gsl\sys\test.c:31:10: warning: variable 'y_expected' is not initialized [cppcoreguidelines-init-variables]
  double y_expected;
         ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\sys\test.c:31:20: note: FIX-IT applied suggested code changes
  double y_expected;
                   ^
D:\a\aprg\aprg\gsl\gsl\sys\test.c:32:7: warning: variable 'e' is not initialized [cppcoreguidelines-init-variables]
  int e;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\sys\test.c:32:8: note: FIX-IT applied suggested code changes
  int e;
       ^
D:\a\aprg\aprg\gsl\gsl\sys\test.c:33:7: warning: variable 'e_expected' is not initialized [cppcoreguidelines-init-variables]
  int e_expected;
      ^
                 = 0
D:\a\aprg\aprg\gsl\gsl\sys\test.c:33:17: note: FIX-IT applied suggested code changes
  int e_expected;
                ^
D:\a\aprg\aprg\gsl\gsl\sys\test.c:504:12: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
    double x;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\sys\test.c:504:13: note: FIX-IT applied suggested code changes
    double x;
            ^
D:\a\aprg\aprg\gsl\gsl\sys\test.c:505:12: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
    double y;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\sys\test.c:505:13: note: FIX-IT applied suggested code changes
    double y;
            ^
[48/1003] Building C object gsl/CMakeFiles/err_test.dir/err/test.c.obj
D:\a\aprg\aprg\gsl\gsl\err\test.c:36:7: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  int i;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\err\test.c:36:8: note: FIX-IT applied suggested code changes
  int i;
       ^
D:\a\aprg\aprg\gsl\gsl\err\test.c:37:7: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  int j;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\err\test.c:37:8: note: FIX-IT applied suggested code changes
  int j;
       ^
[49/1003] Building C object gsl/CMakeFiles/bst_test.dir/bst/test.c.obj
D:\a\aprg\aprg\gsl\gsl\bst\test.c:63:16: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    array[i] = i;
               ^
D:\a\aprg\aprg\gsl\gsl\bst\test.c:68:55: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      size_t j = i + (unsigned) (gsl_rng_uniform(r) * (n - i));
                                                      ^
D:\a\aprg\aprg\gsl\gsl\bst\test.c:119:22: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          array[i] = i;
                     ^
D:\a\aprg\aprg\gsl\gsl\bst\test.c:125:22: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          array[i] = n - i - 1;
                     ^
D:\a\aprg\aprg\gsl\gsl\bst\test.c:130:31: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        gen_balanced_tree (0, n - 1, &array);
                              ^
D:\a\aprg\aprg\gsl\gsl\bst\test.c:137:26: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
              array[i] = i / 2;
                         ^
D:\a\aprg\aprg\gsl\gsl\bst\test.c:139:26: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
              array[i] = n - i / 2 - 1;
                         ^
D:\a\aprg\aprg\gsl\gsl\bst\test.c:147:24: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
            array[i] = i + n / 2;
                       ^
D:\a\aprg\aprg\gsl\gsl\bst\test.c:149:27: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
              array[i] -= n;
                          ^
D:\a\aprg\aprg\gsl\gsl\bst\test.c:167:8: warning: variable 'prev' is not initialized [cppcoreguidelines-init-variables]
  int *prev;
       ^
            = NULL
D:\a\aprg\aprg\gsl\gsl\bst\test.c:167:12: note: FIX-IT applied suggested code changes
  int *prev;
           ^
D:\a\aprg\aprg\gsl\gsl\bst\test.c:168:8: warning: variable 'cur' is not initialized [cppcoreguidelines-init-variables]
  int *cur;
       ^
           = NULL
D:\a\aprg\aprg\gsl\gsl\bst\test.c:168:11: note: FIX-IT applied suggested code changes
  int *cur;
          ^
D:\a\aprg\aprg\gsl\gsl\bst\test.c:169:8: warning: variable 'next' is not initialized [cppcoreguidelines-init-variables]
  int *next;
       ^
            = NULL
D:\a\aprg\aprg\gsl\gsl\bst\test.c:169:12: note: FIX-IT applied suggested code changes
  int *next;
           ^
D:\a\aprg\aprg\gsl\gsl\bst\test.c:275:7: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  i = n - 1;
      ^
D:\a\aprg\aprg\gsl\gsl\bst\test.c:316:7: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.DeadStores]
      p = gsl_bst_trav_insert(&data_delete[i], &z, w);
      ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\test.c:316:7: note: Value stored to 'p' is never read
      p = gsl_bst_trav_insert(&data_delete[i], &z, w);
      ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\test.c:344:20: warning: variable 'order' is not initialized [cppcoreguidelines-init-variables]
  enum array_order order;
                   ^
[50/1003] Building C object gsl/CMakeFiles/const_test.dir/const/test.c.obj
[51/1003] Building C object gsl/CMakeFiles/complex_test.dir/complex/test.c.obj
[52/1003] Building C object gsl/CMakeFiles/complex_test_c11.dir/complex/test.c.obj
[53/1003] Building C object gsl/CMakeFiles/cheb_test.dir/cheb/test.c.obj
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:76:10: warning: Value stored to 'x' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double x = NAN; 
         ^
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:76:10: note: Value stored to 'x' during its initialization is never read
  double x = NAN; 
         ^
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:84:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for(x=a; x<b; x += (b-a)/100.0) {
  ^        ~    ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:84:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for(x=a; x<b; x += (b-a)/100.0) {
  ^        ~    ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:93:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for(x=a; x<b; x += (b-a)/100.0) {
  ^        ~    ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:93:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for(x=a; x<b; x += (b-a)/100.0) {
  ^        ~    ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:102:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for(x=a; x<b; x += (b-a)/100.0) {
  ^        ~    ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:102:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for(x=a; x<b; x += (b-a)/100.0) {
  ^        ~    ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:117:10: warning: Value stored to 'x' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double x = NAN; 
         ^
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:117:10: note: Value stored to 'x' during its initialization is never read
  double x = NAN; 
         ^
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:202:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:202:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:207:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:207:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:208:12: warning: variable 'r' is not initialized [cppcoreguidelines-init-variables]
    double r;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:208:13: note: FIX-IT applied suggested code changes
    double r;
            ^
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:209:12: warning: variable 'e' is not initialized [cppcoreguidelines-init-variables]
    double e;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:209:13: note: FIX-IT applied suggested code changes
    double e;
            ^
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:216:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:216:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:221:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:221:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:222:12: warning: variable 'r' is not initialized [cppcoreguidelines-init-variables]
    double r;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:222:13: note: FIX-IT applied suggested code changes
    double r;
            ^
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:223:12: warning: variable 'e' is not initialized [cppcoreguidelines-init-variables]
    double e;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:223:13: note: FIX-IT applied suggested code changes
    double e;
            ^
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:234:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:234:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:249:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:249:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:268:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:268:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:283:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
D:\a\aprg\aprg\gsl\gsl\cheb\test.c:283:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for(x=-M_PI; x<M_PI; x += M_PI/100.0) {
  ^            ~       ~
[54/1003] Building C object gsl/CMakeFiles/block_test.dir/block/test.c.obj
D:\a\aprg\aprg\gsl\gsl\block/test_complex_source.c:59:11: warning: Array access (via field 'data') results in a null pointer dereference [clang-analyzer-core.NullDereference]
      if (b->data[2 * i] != 0.0 || b->data[2 * i + 1] != 0.0)
          ^
D:\a\aprg\aprg\gsl\gsl\block\test.c:161:3: note: Calling 'test_complex_long_double_func'
  test_complex_long_double_func ();
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_complex_source.c:33:13: note: Assuming field 'data' is not equal to null
  gsl_test (b->data == 0, NAME (gsl_block) "_alloc returns valid pointer");
            ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_complex_source.c:34:13: note: Assuming field 'size' is equal to N
  gsl_test (b->size != N, NAME (gsl_block) "_alloc returns valid size");
            ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_complex_source.c:39:13: note: Assuming 'data' is not equal to null
  gsl_test (data == 0, NAME (gsl_block) "_data returns valid pointer");
            ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_complex_source.c:40:13: note: Assuming 'size' is equal to N
  gsl_test (size != N, NAME (gsl_block) "_size returns valid size");
            ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_complex_source.c:46:13: note: Assuming field 'data' is equal to null
  gsl_test (b->data == 0, NAME (gsl_block) "_calloc returns valid pointer");
            ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_complex_source.c:46:13: note: Assuming pointer value is null
  gsl_test (b->data == 0, NAME (gsl_block) "_calloc returns valid pointer");
            ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_complex_source.c:47:13: note: Assuming field 'size' is equal to N
  gsl_test (b->size != N, NAME (gsl_block) "_calloc returns valid size");
            ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_complex_source.c:52:13: note: Assuming 'data' is not equal to null
  gsl_test (data == 0, NAME (gsl_block) "_data returns valid pointer from calloc");
            ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_complex_source.c:53:13: note: Assuming 'size' is equal to N
  gsl_test (size != N, NAME (gsl_block) "_size returns valid size from calloc");
            ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_complex_source.c:57:3: note: Loop condition is true.  Entering loop body
  for (i = 0; i < N; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\block/test_complex_source.c:59:11: note: Array access (via field 'data') results in a null pointer dereference
      if (b->data[2 * i] != 0.0 || b->data[2 * i + 1] != 0.0)
          ^  ~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_source.c:60:11: warning: Array access (via field 'data') results in a null pointer dereference [clang-analyzer-core.NullDereference]
      if (v->data[i] != 0.0)
          ^
D:\a\aprg\aprg\gsl\gsl\block\test.c:150:3: note: Calling 'test_long_double_func'
  test_long_double_func ();
  ^~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_source.c:33:13: note: Assuming field 'data' is not equal to null
  gsl_test (v->data == 0, NAME (gsl_block) "_alloc returns valid pointer");
            ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_source.c:34:13: note: Assuming field 'size' is equal to N
  gsl_test (v->size != N, NAME (gsl_block) "_alloc returns valid size");
            ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_source.c:39:13: note: Assuming 'data' is not equal to null
  gsl_test (data == 0, NAME (gsl_block) "_data returns valid pointer");
            ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_source.c:40:13: note: Assuming 'size' is equal to N
  gsl_test (size != N, NAME (gsl_block) "_size returns valid size");
            ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_source.c:47:13: note: Assuming field 'data' is equal to null
  gsl_test (v->data == 0, NAME (gsl_block) "_calloc returns valid pointer");
            ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_source.c:47:13: note: Assuming pointer value is null
  gsl_test (v->data == 0, NAME (gsl_block) "_calloc returns valid pointer");
            ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_source.c:48:13: note: Assuming field 'size' is equal to N
  gsl_test (v->size != N, NAME (gsl_block) "_calloc returns valid size");
            ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_source.c:53:13: note: Assuming 'data' is not equal to null
  gsl_test (data == 0, NAME (gsl_block) "_data returns valid pointer from calloc");
            ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_source.c:54:13: note: Assuming 'size' is equal to N
  gsl_test (size != N, NAME (gsl_block) "_size returns valid size from calloc");
            ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\block/test_source.c:58:3: note: Loop condition is true.  Entering loop body
  for (i = 0; i < N; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\block/test_source.c:60:11: note: Array access (via field 'data') results in a null pointer dereference
      if (v->data[i] != 0.0)
          ^  ~~~~
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:39:
D:/a/aprg/aprg/gsl/gsl/block/test_complex_source.c:76:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:39:
D:/a/aprg/aprg/gsl/gsl/block/test_complex_source.c:94:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:49:
D:/a/aprg/aprg/gsl/gsl/block/test_complex_source.c:76:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:49:
D:/a/aprg/aprg/gsl/gsl/block/test_complex_source.c:94:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:50:
D:/a/aprg/aprg/gsl/gsl/block/test_complex_io.c:30:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:50:
D:/a/aprg/aprg/gsl/gsl/block/test_complex_io.c:48:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:56:
D:/a/aprg/aprg/gsl/gsl/block/test_complex_source.c:76:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:56:
D:/a/aprg/aprg/gsl/gsl/block/test_complex_source.c:94:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:57:
D:/a/aprg/aprg/gsl/gsl/block/test_complex_io.c:30:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:57:
D:/a/aprg/aprg/gsl/gsl/block/test_complex_io.c:48:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:63:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:78:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:63:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:95:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:72:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:78:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:72:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:95:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:73:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:30:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:73:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:47:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:79:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:78:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:79:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:95:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:80:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:30:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:80:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:47:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:86:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:78:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:86:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:95:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:87:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:30:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:87:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:47:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:93:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:78:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:93:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:95:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:94:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:30:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:94:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:47:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:100:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:78:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:100:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:95:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:101:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:30:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:101:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:47:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:107:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:78:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:107:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:95:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:108:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:30:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:108:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:47:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:114:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:78:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:114:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:95:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:115:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:30:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:115:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:47:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:121:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:78:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:121:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:95:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:122:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:30:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:122:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:47:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:128:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:78:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:128:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:95:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:129:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:30:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:129:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:47:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:135:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:78:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:135:
D:/a/aprg/aprg/gsl/gsl/block/test_source.c:95:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:136:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:30:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/test.c:136:
D:/a/aprg/aprg/gsl/gsl/block/test_io.c:47:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
52 warnings generated.
[55/1003] Building C object gsl/CMakeFiles/vector_test.dir/vector/test.c.obj
D:\a\aprg\aprg\gsl\gsl\vector\test.c:139:10: warning: variable 'stride' is not initialized [cppcoreguidelines-init-variables]
  size_t stride;
         ^
                = 0
D:\a\aprg\aprg\gsl\gsl\vector\test.c:139:16: note: FIX-IT applied suggested code changes
  size_t stride;
               ^
D:\a\aprg\aprg\gsl\gsl\vector\test.c:140:10: warning: variable 'ostride' is not initialized [cppcoreguidelines-init-variables]
  size_t ostride;
         ^
                 = 0
D:\a\aprg\aprg\gsl\gsl\vector\test.c:140:17: note: FIX-IT applied suggested code changes
  size_t ostride;
                ^
D:\a\aprg\aprg\gsl\gsl\vector\test.c:141:10: warning: variable 'N' is not initialized [cppcoreguidelines-init-variables]
  size_t N;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\vector\test.c:141:11: note: FIX-IT applied suggested code changes
  size_t N;
          ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:51:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:707:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:51:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:724:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:57:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:707:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:57:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:724:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:57:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:762:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:57:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:779:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:63:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:707:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:63:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:724:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:63:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:762:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:63:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:779:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:69:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:69:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:75:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:75:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:75:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:75:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:81:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:81:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:81:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:81:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:87:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: remove the call to 'fabs' since unsigned values cannot be negative
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: remove the call to 'fabs' since unsigned values cannot be negative
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: remove the call to 'fabs' since unsigned values cannot be negative
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: remove the call to 'fabs' since unsigned values cannot be negative
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:87:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:87:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:87:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:93:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: use function 'labs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
            labs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: use function 'labs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
                                                labs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: use function 'labs' instead
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
        labs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: use function 'labs' instead
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
        labs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:93:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:93:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:93:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:99:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: remove the call to 'fabs' since unsigned values cannot be negative
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: remove the call to 'fabs' since unsigned values cannot be negative
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: remove the call to 'fabs' since unsigned values cannot be negative
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: remove the call to 'fabs' since unsigned values cannot be negative
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:99:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:99:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:99:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:105:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
            abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
                                                abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: use function 'abs' instead
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: use function 'abs' instead
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:105:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:105:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:105:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:111:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
            abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: taking the absolute value of unsigned type 'unsigned short' has no effect [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: remove the call to 'fabs' since unsigned values cannot be negative
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: use function 'abs' instead
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: use function 'abs' instead
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:111:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:111:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:111:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:117:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
            abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
                                                abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: use function 'abs' instead
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: use function 'abs' instead
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:117:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:117:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:117:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:123:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
            abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: taking the absolute value of unsigned type 'unsigned char' has no effect [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: remove the call to 'fabs' since unsigned values cannot be negative
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: use function 'abs' instead
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: use function 'abs' instead
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:123:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:123:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:123:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:129:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
            abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
                                                abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: use function 'abs' instead
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: use function 'abs' instead
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:129:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:129:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:129:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
84 warnings generated.
[56/1003] Building C object gsl/CMakeFiles/vector_test_static.dir/vector/test_static.c.obj
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:51:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:707:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:51:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:724:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:57:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:707:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:57:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:724:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:57:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:762:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:57:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:779:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:63:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:707:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:63:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:724:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:63:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:762:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:63:
D:/a/aprg/aprg/gsl/gsl/vector/test_complex_source.c:779:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:69:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:69:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:75:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:75:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:75:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:75:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:81:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:81:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:81:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:81:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:87:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: remove the call to 'fabs' since unsigned values cannot be negative
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: remove the call to 'fabs' since unsigned values cannot be negative
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: remove the call to 'fabs' since unsigned values cannot be negative
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: remove the call to 'fabs' since unsigned values cannot be negative
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:87:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:87:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:87:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:93:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: use function 'labs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
            labs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: use function 'labs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
                                                labs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: use function 'labs' instead
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
        labs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: use function 'labs' instead
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
        labs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:93:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:93:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:93:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:99:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: remove the call to 'fabs' since unsigned values cannot be negative
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: remove the call to 'fabs' since unsigned values cannot be negative
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: remove the call to 'fabs' since unsigned values cannot be negative
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: remove the call to 'fabs' since unsigned values cannot be negative
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:99:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:99:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:99:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:105:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
            abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
                                                abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: use function 'abs' instead
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: use function 'abs' instead
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:105:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:105:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:105:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:111:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
            abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: taking the absolute value of unsigned type 'unsigned short' has no effect [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: remove the call to 'fabs' since unsigned values cannot be negative
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: use function 'abs' instead
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: use function 'abs' instead
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:111:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:111:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:111:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:117:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
            abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
                                                abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: use function 'abs' instead
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: use function 'abs' instead
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:117:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:117:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:117:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:123:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
            abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: taking the absolute value of unsigned type 'unsigned char' has no effect [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: remove the call to 'fabs' since unsigned values cannot be negative
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: use function 'abs' instead
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: use function 'abs' instead
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:123:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:123:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:123:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:129:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:13: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
            ^~~~
            abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:751:49: note: use function 'abs' instead
        if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                ^~~~
                                                abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:763:9: note: use function 'abs' instead
    if (fabs(sum_a - exact_sum_a) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:768:9: note: use function 'abs' instead
    if (fabs(sum_b - exact_sum_b) > GSL_FLT_EPSILON)
        ^~~~
        abs
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:794:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:129:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:808:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:129:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:846:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test_static.c:6:
In file included from D:/a/aprg/aprg/gsl/gsl/vector/test.c:129:
D:/a/aprg/aprg/gsl/gsl/vector/test_source.c:860:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
84 warnings generated.
[57/1003] Building C object gsl/CMakeFiles/matrix_test.dir/matrix/test.c.obj
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:50:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:331:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:50:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:353:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:50:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:397:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:50:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:419:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:56:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:265:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:56:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:287:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:56:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:331:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:56:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:353:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:56:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:397:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:56:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:419:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:62:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:265:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:62:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:287:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:62:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:331:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:62:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:353:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:62:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:397:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:62:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:419:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:68:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:68:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:68:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:68:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:74:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:74:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:74:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:74:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:74:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:74:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:80:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:80:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:80:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:80:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:80:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:80:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:86:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:86:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:86:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:86:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:86:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:86:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:92:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: use function 'labs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
                labs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: use function 'labs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
                                                    labs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: use function 'labs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                labs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: use function 'labs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    labs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: use function 'labs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                labs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: use function 'labs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    labs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:92:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:92:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:92:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:92:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:92:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:98:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:98:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:98:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:98:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:98:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:98:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:104:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:104:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:104:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:104:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:104:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:104:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:110:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: taking the absolute value of unsigned type 'unsigned short' has no effect [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: taking the absolute value of unsigned type 'unsigned short' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: taking the absolute value of unsigned type 'unsigned short' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:110:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:110:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:110:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:110:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:110:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:116:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:116:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:116:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:116:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:116:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:116:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:122:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: taking the absolute value of unsigned type 'unsigned char' has no effect [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: taking the absolute value of unsigned type 'unsigned char' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: taking the absolute value of unsigned type 'unsigned char' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:122:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:122:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:122:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:122:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:122:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:128:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:128:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:128:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:128:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:128:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:128:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
128 warnings generated.
[58/1003] Building C object gsl/CMakeFiles/matrix_test_static.dir/matrix/test_static.c.obj
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:50:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:331:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:50:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:353:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:50:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:397:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:50:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:419:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:56:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:265:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:56:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:287:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:56:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:331:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:56:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:353:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:56:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:397:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:56:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:419:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:62:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:265:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:62:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:287:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:62:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:331:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:62:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:353:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:62:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:397:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:62:
D:/a/aprg/aprg/gsl/gsl/matrix/test_complex_source.c:419:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:68:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:68:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:68:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:68:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:74:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:74:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:74:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:74:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:74:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:74:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:80:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:80:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:80:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:80:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:80:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:80:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:86:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: taking the absolute value of unsigned type 'unsigned long' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:86:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:86:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:86:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:86:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:86:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:92:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: use function 'labs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
                labs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: use function 'labs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
                                                    labs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: use function 'labs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                labs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: use function 'labs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    labs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: use function 'labs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                labs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: use function 'labs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    labs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:92:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:92:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:92:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:92:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:92:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:98:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: taking the absolute value of unsigned type 'unsigned int' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:98:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:98:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:98:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:98:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:98:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:104:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:104:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:104:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:104:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:104:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:104:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:110:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: taking the absolute value of unsigned type 'unsigned short' has no effect [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: taking the absolute value of unsigned type 'unsigned short' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: taking the absolute value of unsigned type 'unsigned short' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:110:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:110:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:110:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:110:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:110:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:116:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:116:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:116:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:116:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:116:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:116:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:122:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: taking the absolute value of unsigned type 'unsigned char' has no effect [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: taking the absolute value of unsigned type 'unsigned char' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: taking the absolute value of unsigned type 'unsigned char' has no effect [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: remove the call to 'fabs' since unsigned values cannot be negative
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:122:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:122:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:122:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:122:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:122:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:128:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:17: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:540:53: note: use function 'abs' instead
            if (fabs(r - z) > 2 * GSL_FLT_EPSILON * fabs(z))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:634:53: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:17: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                ^~~~
                abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:654:53: note: use function 'abs' instead
            if (fabs(r - y) > 2 * GSL_FLT_EPSILON * fabs(y))
                                                    ^~~~
                                                    abs
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:881:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:128:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:901:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:128:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:944:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:128:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:963:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:128:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1006:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test_static.c:7:
In file included from D:/a/aprg/aprg/gsl/gsl/matrix/test.c:128:
D:/a/aprg/aprg/gsl/gsl/matrix/test_source.c:1025:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen(filename, "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
128 warnings generated.
[59/1003] Building C object gsl/CMakeFiles/permutation_test.dir/permutation/test.c.obj
D:\a\aprg\aprg\gsl\gsl\permutation\test.c:132:9: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
    int j;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\permutation\test.c:132:10: note: FIX-IT applied suggested code changes
    int j;
         ^
D:\a\aprg\aprg\gsl\gsl\permutation\test.c:228:9: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
    int j;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\permutation\test.c:228:10: note: FIX-IT applied suggested code changes
    int j;
         ^
[60/1003] Building C object gsl/CMakeFiles/combination_test.dir/combination/test.c.obj
D:\a\aprg\aprg\gsl\gsl\combination\test.c:43:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\combination\test.c:43:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\combination\test.c:44:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\combination\test.c:44:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\combination\test.c:46:7: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
  int s;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\combination\test.c:46:8: note: FIX-IT applied suggested code changes
  int s;
       ^
[61/1003] Building C object gsl/CMakeFiles/multiset_test.dir/multiset/test.c.obj
D:\a\aprg\aprg\gsl\gsl\multiset\test.c:60:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\multiset\test.c:60:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\multiset\test.c:61:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\multiset\test.c:61:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\multiset\test.c:63:7: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
  int s;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\multiset\test.c:63:8: note: FIX-IT applied suggested code changes
  int s;
       ^
[62/1003] Building C object gsl/CMakeFiles/sort_test.dir/sort/test.c.obj
D:\a\aprg\aprg\gsl\gsl\sort\test.c:104:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\sort\test.c:104:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\sort\test.c:105:10: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
  size_t s;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\sort\test.c:105:11: note: FIX-IT applied suggested code changes
  size_t s;
          ^
D:\a\aprg\aprg\gsl\gsl\sort\test.c:141:41: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  return (size_t) ((x / 2147483648.0) * N);
                                        ^
[63/1003] Building C object gsl/CMakeFiles/ieee-utils_test.dir/ieee-utils/test.c.obj
D:\a\aprg\aprg\gsl\gsl\ieee-utils\test.c:56:17: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  float zerof = 0.0f;
                ^  ~
                   F
D:\a\aprg\aprg\gsl\gsl\ieee-utils\test.c:56:20: note: FIX-IT applied suggested code changes
  float zerof = 0.0f;
                   ^
D:\a\aprg\aprg\gsl\gsl\ieee-utils\test.c:57:23: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
  float minus_onef = -1.0f ;
                      ^  ~
                         F
D:\a\aprg\aprg\gsl\gsl\ieee-utils\test.c:57:26: note: FIX-IT applied suggested code changes
  float minus_onef = -1.0f ;
                         ^
D:\a\aprg\aprg\gsl\gsl\ieee-utils\test.c:254:15: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
    float x = 1.0f;
              ^  ~
                 F
D:\a\aprg\aprg\gsl\gsl\ieee-utils\test.c:254:18: note: FIX-IT applied suggested code changes
    float x = 1.0f;
                 ^
D:\a\aprg\aprg\gsl\gsl\ieee-utils\test.c:255:15: warning: floating point literal has suffix 'f', which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]
    float y = 2.0f;
              ^  ~
                 F
D:\a\aprg\aprg\gsl\gsl\ieee-utils\test.c:255:18: note: FIX-IT applied suggested code changes
    float y = 2.0f;
                 ^
[64/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/sasum.c.obj
[65/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/saxpy.c.obj
[66/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/scasum.c.obj
[67/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/scnrm2.c.obj
[68/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/scopy.c.obj
[69/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/sdot.c.obj
[70/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/sdsdot.c.obj
[71/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/sgbmv.c.obj
[72/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/sgemm.c.obj
[73/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/sgemv.c.obj
[74/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/sger.c.obj
[75/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/snrm2.c.obj
[76/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/srot.c.obj
[77/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/srotg.c.obj
[78/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/srotm.c.obj
[79/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/srotmg.c.obj
[80/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ssbmv.c.obj
[81/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/sscal.c.obj
[82/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/sspmv.c.obj
[83/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/sspr.c.obj
[84/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/sspr2.c.obj
[85/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/sswap.c.obj
[86/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ssymm.c.obj
[87/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ssymv.c.obj
[88/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ssyr.c.obj
[89/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ssyr2.c.obj
[90/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ssyr2k.c.obj
[91/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ssyrk.c.obj
[92/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/stbmv.c.obj
[93/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/stbsv.c.obj
[94/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/stpmv.c.obj
[95/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/stpsv.c.obj
[96/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/strmm.c.obj
[97/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/strmv.c.obj
[98/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/strsm.c.obj
[99/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/strsv.c.obj
[100/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dasum.c.obj
[101/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/daxpy.c.obj
[102/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dcopy.c.obj
[103/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ddot.c.obj
[104/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dgbmv.c.obj
[105/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dgemm.c.obj
[106/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dgemv.c.obj
[107/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dger.c.obj
[108/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dnrm2.c.obj
[109/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/drot.c.obj
[110/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/drotg.c.obj
[111/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/drotm.c.obj
[112/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/drotmg.c.obj
[113/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dsbmv.c.obj
[114/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dscal.c.obj
[115/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dsdot.c.obj
[116/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dspmv.c.obj
[117/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dspr.c.obj
[118/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dspr2.c.obj
[119/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dswap.c.obj
[120/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dsymm.c.obj
[121/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dsymv.c.obj
[122/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dsyr.c.obj
[123/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dsyr2.c.obj
[124/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dsyr2k.c.obj
[125/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dsyrk.c.obj
[126/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dtbmv.c.obj
[127/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dtbsv.c.obj
[128/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dtpmv.c.obj
[129/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dtpsv.c.obj
[130/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dtrmm.c.obj
[131/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dtrmv.c.obj
[132/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dtrsm.c.obj
[133/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dtrsv.c.obj
[134/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dzasum.c.obj
[135/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/dznrm2.c.obj
[136/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/caxpy.c.obj
[137/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ccopy.c.obj
[138/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/cdotc_sub.c.obj
[139/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/cdotu_sub.c.obj
[140/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/cgbmv.c.obj
[141/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/cgemm.c.obj
[142/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/cgemv.c.obj
[143/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/cgerc.c.obj
[144/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/cgeru.c.obj
[145/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/chbmv.c.obj
[146/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/chemm.c.obj
[147/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/chemv.c.obj
[148/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/cher.c.obj
[149/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/cher2.c.obj
[150/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/cher2k.c.obj
[151/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/cherk.c.obj
[152/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/chpmv.c.obj
[153/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/chpr.c.obj
[154/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/chpr2.c.obj
[155/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/cscal.c.obj
[156/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/csscal.c.obj
[157/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/cswap.c.obj
[158/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/csymm.c.obj
[159/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/csyr2k.c.obj
[160/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/csyrk.c.obj
[161/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ctbmv.c.obj
[162/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ctbsv.c.obj
[163/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ctpmv.c.obj
[164/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ctpsv.c.obj
[165/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ctrmm.c.obj
[166/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ctrmv.c.obj
[167/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ctrsm.c.obj
[168/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ctrsv.c.obj
[169/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zaxpy.c.obj
[170/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zcopy.c.obj
[171/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zdotc_sub.c.obj
[172/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zdotu_sub.c.obj
[173/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zdscal.c.obj
[174/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zgbmv.c.obj
[175/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zgemm.c.obj
[176/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zgemv.c.obj
[177/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zgerc.c.obj
[178/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zgeru.c.obj
[179/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zhbmv.c.obj
[180/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zhemm.c.obj
[181/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zhemv.c.obj
[182/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zher.c.obj
[183/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zher2.c.obj
[184/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zher2k.c.obj
[185/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zherk.c.obj
[186/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zhpmv.c.obj
[187/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zhpr.c.obj
[188/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zhpr2.c.obj
[189/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zscal.c.obj
[190/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zswap.c.obj
[191/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zsymm.c.obj
[192/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zsyr2k.c.obj
[193/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/zsyrk.c.obj
[194/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ztbmv.c.obj
[195/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ztbsv.c.obj
[196/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ztpmv.c.obj
[197/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ztpsv.c.obj
[198/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ztrmm.c.obj
[199/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ztrmv.c.obj
[200/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ztrsm.c.obj
[201/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/ztrsv.c.obj
[202/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/icamax.c.obj
[203/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/idamax.c.obj
[204/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/isamax.c.obj
[205/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/izamax.c.obj
[206/1003] Building C object gsl/CMakeFiles/gslcblas.dir/cblas/xerbla.c.obj
[207/1003] Linking C static library gsl\gslcblas.lib
[208/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test.c.obj
[209/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_amax.c.obj
D:\a\aprg\aprg\gsl\gsl\cblas\test_amax.c:16:8: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   k = cblas_isamax(N, X, incX);
       ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_amax.c:27:8: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   k = cblas_idamax(N, X, incX);
       ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_amax.c:38:8: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   k = cblas_icamax(N, X, incX);
       ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_amax.c:49:8: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   k = cblas_izamax(N, X, incX);
       ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_amax.c:60:8: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   k = cblas_isamax(N, X, incX);
       ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_amax.c:71:8: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   k = cblas_idamax(N, X, incX);
       ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_amax.c:82:8: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   k = cblas_icamax(N, X, incX);
       ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_amax.c:93:8: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   k = cblas_izamax(N, X, incX);
       ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_amax.c:104:8: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   k = cblas_isamax(N, X, incX);
       ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_amax.c:115:8: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   k = cblas_idamax(N, X, incX);
       ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_amax.c:126:8: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   k = cblas_icamax(N, X, incX);
       ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_amax.c:137:8: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   k = cblas_izamax(N, X, incX);
       ^
[210/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_asum.c.obj
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:18:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:18:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:29:11: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:29:11: note: Value stored to 'f' during its initialization is never read
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:40:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:40:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:51:11: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:51:11: note: Value stored to 'f' during its initialization is never read
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:62:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:62:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:73:11: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:73:11: note: Value stored to 'f' during its initialization is never read
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:84:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:84:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:95:11: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:95:11: note: Value stored to 'f' during its initialization is never read
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:106:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:106:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:117:11: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:117:11: note: Value stored to 'f' during its initialization is never read
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:128:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:128:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:139:11: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_asum.c:139:11: note: Value stored to 'f' during its initialization is never read
   double f = NAN;
          ^
[211/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_axpy.c.obj
[212/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_copy.c.obj
[213/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_dot.c.obj
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:21:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:21:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:35:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:35:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:49:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:49:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:63:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:63:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:77:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:77:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:91:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:91:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:105:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:105:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:119:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:119:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:133:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:133:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:146:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:146:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:159:11: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:159:11: note: Value stored to 'f' during its initialization is never read
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:228:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:228:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:241:11: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:241:11: note: Value stored to 'f' during its initialization is never read
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:310:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:310:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:323:11: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_dot.c:323:11: note: Value stored to 'f' during its initialization is never read
   double f = NAN;
          ^
[214/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_gbmv.c.obj
[215/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_gemm.c.obj
[216/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_gemv.c.obj
[217/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_ger.c.obj
[218/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_hbmv.c.obj
[219/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_hemm.c.obj
[220/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_hemv.c.obj
[221/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_her.c.obj
[222/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_her2.c.obj
[223/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_her2k.c.obj
[224/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_herk.c.obj
[225/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_hpmv.c.obj
[226/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_hpr.c.obj
[227/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_hpr2.c.obj
[228/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_nrm2.c.obj
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:18:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:18:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:29:11: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:29:11: note: Value stored to 'f' during its initialization is never read
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:40:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:40:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:51:11: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:51:11: note: Value stored to 'f' during its initialization is never read
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:62:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:62:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:73:11: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:73:11: note: Value stored to 'f' during its initialization is never read
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:84:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:84:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:95:11: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:95:11: note: Value stored to 'f' during its initialization is never read
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:106:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:106:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:117:11: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:117:11: note: Value stored to 'f' during its initialization is never read
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:128:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:128:10: note: Value stored to 'f' during its initialization is never read
   float f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:139:11: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
   double f = NAN;
          ^
D:\a\aprg\aprg\gsl\gsl\cblas\test_nrm2.c:139:11: note: Value stored to 'f' during its initialization is never read
   double f = NAN;
          ^
[229/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_rot.c.obj
[230/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_rotg.c.obj
[231/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_rotm.c.obj
[232/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_rotmg.c.obj
[233/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_sbmv.c.obj
[234/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_scal.c.obj
[235/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_spmv.c.obj
[236/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_spr.c.obj
[237/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_spr2.c.obj
[238/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_swap.c.obj
[239/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_symm.c.obj
[240/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_symv.c.obj
[241/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_syr.c.obj
[242/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_syr2.c.obj
[243/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_syr2k.c.obj
[244/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_syrk.c.obj
[245/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_tbmv.c.obj
[246/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_tbsv.c.obj
[247/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_tpmv.c.obj
[248/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_tpsv.c.obj
[249/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_trmm.c.obj
[250/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_trmv.c.obj
[251/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_trsm.c.obj
[252/1003] Building C object gsl/CMakeFiles/cblas_test.dir/cblas/test_trsv.c.obj
[253/1003] Building C object gsl/CMakeFiles/linalg_test.dir/linalg/test.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:106:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else
  ^~~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:106:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:107:5: note: FIX-IT applied suggested code changes
    {
    ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:139:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:139:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:140:17: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  unsigned long j;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:140:18: note: FIX-IT applied suggested code changes
  unsigned long j;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:153:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:153:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:154:17: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  unsigned long j;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:154:18: note: FIX-IT applied suggested code changes
  unsigned long j;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:167:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:167:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:168:17: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  unsigned long j;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:168:18: note: FIX-IT applied suggested code changes
  unsigned long j;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:188:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:188:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:189:17: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  unsigned long j;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:189:18: note: FIX-IT applied suggested code changes
  unsigned long j;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:202:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:202:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:203:17: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  unsigned long j;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:203:18: note: FIX-IT applied suggested code changes
  unsigned long j;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:216:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:216:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:217:17: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  unsigned long j;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:217:18: note: FIX-IT applied suggested code changes
  unsigned long j;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:273:21: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long int i;
                    ^
                      = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:273:22: note: FIX-IT applied suggested code changes
  unsigned long int i;
                     ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:274:21: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  unsigned long int j;
                    ^
                      = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:274:22: note: FIX-IT applied suggested code changes
  unsigned long int j;
                     ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:303:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:303:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:304:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:304:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:421:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:421:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:495:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:495:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:573:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:573:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:672:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:672:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:689:28: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    gsl_vector_set(rhs, i, i + 1.0);
                           ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:787:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:787:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:805:28: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    gsl_vector_set(rhs, i, i + 1.0);
                           ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:910:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:910:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:988:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:988:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1069:7: warning: variable 'signum' is not initialized [cppcoreguidelines-init-variables]
  int signum;
      ^
             = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1069:13: note: FIX-IT applied suggested code changes
  int signum;
            ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1070:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1070:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1071:17: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  unsigned long j;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1071:18: note: FIX-IT applied suggested code changes
  unsigned long j;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1203:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1203:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1204:17: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  unsigned long j;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1204:18: note: FIX-IT applied suggested code changes
  unsigned long j;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1205:17: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  unsigned long k;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1205:18: note: FIX-IT applied suggested code changes
  unsigned long k;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1356:7: warning: variable 'signum' is not initialized [cppcoreguidelines-init-variables]
  int signum;
      ^
             = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1356:13: note: FIX-IT applied suggested code changes
  int signum;
            ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1357:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1357:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1358:17: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  unsigned long j;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1358:18: note: FIX-IT applied suggested code changes
  unsigned long j;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1359:17: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  unsigned long k;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1359:18: note: FIX-IT applied suggested code changes
  unsigned long k;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1520:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1520:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1593:10: warning: Value stored to 'di1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double di1 = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1593:10: note: Value stored to 'di1' during its initialization is never read
  double di1 = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1594:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1594:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1595:17: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  unsigned long j;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1595:18: note: FIX-IT applied suggested code changes
  unsigned long j;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1790:12: warning: variable 'i1' is not initialized [cppcoreguidelines-init-variables]
    double i1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1790:14: note: FIX-IT applied suggested code changes
    double i1;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1791:12: warning: variable 'i2' is not initialized [cppcoreguidelines-init-variables]
    double i2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1791:14: note: FIX-IT applied suggested code changes
    double i2;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1792:12: warning: variable 'i3' is not initialized [cppcoreguidelines-init-variables]
    double i3;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1792:14: note: FIX-IT applied suggested code changes
    double i3;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1793:12: warning: variable 'i4' is not initialized [cppcoreguidelines-init-variables]
    double i4;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1793:14: note: FIX-IT applied suggested code changes
    double i4;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1797:5: warning: Variable 'i1' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
    for (i1 = lower; i1 <= upper; i1++)
    ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1797:5: note: Variable 'i1' with floating point type 'double' should not be used as a loop counter
    for (i1 = lower; i1 <= upper; i1++)
    ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1799:9: warning: Variable 'i2' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
        for (i2 = lower; i2 <= upper; i2++)
        ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1799:9: note: Variable 'i2' with floating point type 'double' should not be used as a loop counter
        for (i2 = lower; i2 <= upper; i2++)
        ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1801:13: warning: Variable 'i3' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
            for (i3 = lower; i3 <= upper; i3++)
            ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1801:13: note: Variable 'i3' with floating point type 'double' should not be used as a loop counter
            for (i3 = lower; i3 <= upper; i3++)
            ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1803:17: warning: Variable 'i4' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
                for (i4 = lower; i4 <= upper; i4++)
                ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1803:17: note: Variable 'i4' with floating point type 'double' should not be used as a loop counter
                for (i4 = lower; i4 <= upper; i4++)
                ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1884:10: warning: Value stored to 'di1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double di1 = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1884:10: note: Value stored to 'di1' during its initialization is never read
  double di1 = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1885:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1885:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1886:17: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  unsigned long j;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:1886:18: note: FIX-IT applied suggested code changes
  unsigned long j;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2048:12: warning: variable 'i1' is not initialized [cppcoreguidelines-init-variables]
    double i1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2048:14: note: FIX-IT applied suggested code changes
    double i1;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2049:12: warning: variable 'i2' is not initialized [cppcoreguidelines-init-variables]
    double i2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2049:14: note: FIX-IT applied suggested code changes
    double i2;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2050:12: warning: variable 'i3' is not initialized [cppcoreguidelines-init-variables]
    double i3;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2050:14: note: FIX-IT applied suggested code changes
    double i3;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2051:12: warning: variable 'i4' is not initialized [cppcoreguidelines-init-variables]
    double i4;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2051:14: note: FIX-IT applied suggested code changes
    double i4;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2055:5: warning: Variable 'i1' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
    for (i1 = lower; i1 <= upper; i1++)
    ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2055:5: note: Variable 'i1' with floating point type 'double' should not be used as a loop counter
    for (i1 = lower; i1 <= upper; i1++)
    ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2057:9: warning: Variable 'i2' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
        for (i2 = lower; i2 <= upper; i2++)
        ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2057:9: note: Variable 'i2' with floating point type 'double' should not be used as a loop counter
        for (i2 = lower; i2 <= upper; i2++)
        ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2059:13: warning: Variable 'i3' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
            for (i3 = lower; i3 <= upper; i3++)
            ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2059:13: note: Variable 'i3' with floating point type 'double' should not be used as a loop counter
            for (i3 = lower; i3 <= upper; i3++)
            ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2061:17: warning: Variable 'i4' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
                for (i4 = lower; i4 <= upper; i4++)
                ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2061:17: note: Variable 'i4' with floating point type 'double' should not be used as a loop counter
                for (i4 = lower; i4 <= upper; i4++)
                ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2142:10: warning: Value stored to 'di1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double di1 = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2142:10: note: Value stored to 'di1' during its initialization is never read
  double di1 = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2143:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2143:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2144:17: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  unsigned long j;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2144:18: note: FIX-IT applied suggested code changes
  unsigned long j;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2307:12: warning: variable 'i1' is not initialized [cppcoreguidelines-init-variables]
    double i1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2307:14: note: FIX-IT applied suggested code changes
    double i1;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2308:12: warning: variable 'i2' is not initialized [cppcoreguidelines-init-variables]
    double i2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2308:14: note: FIX-IT applied suggested code changes
    double i2;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2309:12: warning: variable 'i3' is not initialized [cppcoreguidelines-init-variables]
    double i3;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2309:14: note: FIX-IT applied suggested code changes
    double i3;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2310:12: warning: variable 'i4' is not initialized [cppcoreguidelines-init-variables]
    double i4;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2310:14: note: FIX-IT applied suggested code changes
    double i4;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2314:5: warning: Variable 'i1' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
    for (i1 = lower; i1 <= upper; i1++)
    ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2314:5: note: Variable 'i1' with floating point type 'double' should not be used as a loop counter
    for (i1 = lower; i1 <= upper; i1++)
    ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2316:9: warning: Variable 'i2' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
        for (i2 = lower; i2 <= upper; i2++)
        ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2316:9: note: Variable 'i2' with floating point type 'double' should not be used as a loop counter
        for (i2 = lower; i2 <= upper; i2++)
        ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2318:13: warning: Variable 'i3' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
            for (i3 = lower; i3 <= upper; i3++)
            ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2318:13: note: Variable 'i3' with floating point type 'double' should not be used as a loop counter
            for (i3 = lower; i3 <= upper; i3++)
            ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2320:17: warning: Variable 'i4' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
                for (i4 = lower; i4 <= upper; i4++)
                ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2320:17: note: Variable 'i4' with floating point type 'double' should not be used as a loop counter
                for (i4 = lower; i4 <= upper; i4++)
                ^                ~~           ~~
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2435:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2435:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2464:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2464:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2540:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2540:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2541:17: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  unsigned long j;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2541:18: note: FIX-IT applied suggested code changes
  unsigned long j;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2646:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2646:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2712:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:2712:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:3096:17: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  unsigned long i;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:3096:18: note: FIX-IT applied suggested code changes
  unsigned long i;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:3097:17: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  unsigned long j;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:3097:18: note: FIX-IT applied suggested code changes
  unsigned long j;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:3098:17: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  unsigned long k;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:3098:18: note: FIX-IT applied suggested code changes
  unsigned long k;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:3099:17: warning: variable 'r' is not initialized [cppcoreguidelines-init-variables]
  unsigned long r;
                ^
                  = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:3099:18: note: FIX-IT applied suggested code changes
  unsigned long r;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:3208:10: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
  size_t n;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:3208:11: note: FIX-IT applied suggested code changes
  size_t n;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:3209:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:3209:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:3210:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\test.c:3210:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
In file included from D:/a/aprg/aprg/gsl/gsl/linalg/test.c:413:
D:/a/aprg/aprg/gsl/gsl/linalg/test_qr.c:59:61: warning: format specifies type 'unsigned long' but the argument has type 'size_t' (aka 'unsigned long long') [-Wformat]
        printf("(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\n", M, N, i,j, aij, mij);
                 ~~~~                                       ^
                 %3zu
D:/a/aprg/aprg/gsl/gsl/linalg/test_qr.c:59:64: warning: format specifies type 'unsigned long' but the argument has type 'size_t' (aka 'unsigned long long') [-Wformat]
        printf("(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\n", M, N, i,j, aij, mij);
                      ~~~~                                     ^
                      %3zu
D:/a/aprg/aprg/gsl/gsl/linalg/test_qr.c:59:67: warning: format specifies type 'unsigned long' but the argument has type 'size_t' (aka 'unsigned long long') [-Wformat]
        printf("(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\n", M, N, i,j, aij, mij);
                            ~~~                                   ^
                            %zu
D:/a/aprg/aprg/gsl/gsl/linalg/test_qr.c:59:69: warning: format specifies type 'unsigned long' but the argument has type 'size_t' (aka 'unsigned long long') [-Wformat]
        printf("(%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\n", M, N, i,j, aij, mij);
                                ~~~                                 ^
                                %zu
In file included from D:/a/aprg/aprg/gsl/gsl/linalg/test.c:414:
D:/a/aprg/aprg/gsl/gsl/linalg/test_qrc.c:61:72: warning: format specifies type 'unsigned long' but the argument has type 'size_t' (aka 'unsigned long long') [-Wformat]
          printf("%s (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\n", desc, M, N, i, j, GSL_REAL(aij), GSL_REAL(mij));
                      ~~~~                                             ^
                      %3zu
D:/a/aprg/aprg/gsl/gsl/linalg/test_qrc.c:61:75: warning: format specifies type 'unsigned long' but the argument has type 'size_t' (aka 'unsigned long long') [-Wformat]
          printf("%s (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\n", desc, M, N, i, j, GSL_REAL(aij), GSL_REAL(mij));
                           ~~~~                                           ^
                           %3zu
D:/a/aprg/aprg/gsl/gsl/linalg/test_qrc.c:61:78: warning: format specifies type 'unsigned long' but the argument has type 'size_t' (aka 'unsigned long long') [-Wformat]
          printf("%s (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\n", desc, M, N, i, j, GSL_REAL(aij), GSL_REAL(mij));
                                 ~~~                                         ^
                                 %zu
D:/a/aprg/aprg/gsl/gsl/linalg/test_qrc.c:61:81: warning: format specifies type 'unsigned long' but the argument has type 'size_t' (aka 'unsigned long long') [-Wformat]
          printf("%s (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\n", desc, M, N, i, j, GSL_REAL(aij), GSL_REAL(mij));
                                     ~~~                                        ^
                                     %zu
D:/a/aprg/aprg/gsl/gsl/linalg/test_qrc.c:62:72: warning: format specifies type 'unsigned long' but the argument has type 'size_t' (aka 'unsigned long long') [-Wformat]
          printf("%s (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\n", desc, M, N, i, j, GSL_IMAG(aij), GSL_IMAG(mij));
                      ~~~~                                             ^
                      %3zu
D:/a/aprg/aprg/gsl/gsl/linalg/test_qrc.c:62:75: warning: format specifies type 'unsigned long' but the argument has type 'size_t' (aka 'unsigned long long') [-Wformat]
          printf("%s (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\n", desc, M, N, i, j, GSL_IMAG(aij), GSL_IMAG(mij));
                           ~~~~                                           ^
                           %3zu
D:/a/aprg/aprg/gsl/gsl/linalg/test_qrc.c:62:78: warning: format specifies type 'unsigned long' but the argument has type 'size_t' (aka 'unsigned long long') [-Wformat]
          printf("%s (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\n", desc, M, N, i, j, GSL_IMAG(aij), GSL_IMAG(mij));
                                 ~~~                                         ^
                                 %zu
D:/a/aprg/aprg/gsl/gsl/linalg/test_qrc.c:62:81: warning: format specifies type 'unsigned long' but the argument has type 'size_t' (aka 'unsigned long long') [-Wformat]
          printf("%s (%3lu,%3lu)[%lu,%lu]: %22.18g   %22.18g\n", desc, M, N, i, j, GSL_IMAG(aij), GSL_IMAG(mij));
                                     ~~~                                        ^
                                     %zu
12 warnings generated.
[254/1003] Building C object gsl/CMakeFiles/eigen_test.dir/eigen/test.c.obj
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:55:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:55:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:56:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:56:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:73:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:73:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:74:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:74:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:100:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:100:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:101:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:101:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:120:31: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  const double alpha = 10.0 * N;
                              ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:138:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:138:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:139:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:139:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:161:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:161:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:162:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:162:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:196:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:196:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:197:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:197:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:205:18: warning: Value stored to 'val' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
          double val = NAN;
                 ^~~
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:205:18: note: Value stored to 'val' during its initialization is never read
          double val = NAN;
                 ^~~
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:264:49: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      gsl_test_rel(GSL_REAL(ei), GSL_REAL(e2i), 10*N*GSL_DBL_EPSILON, 
                                                ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:267:49: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      gsl_test_rel(GSL_IMAG(ei), GSL_IMAG(e2i), 10*N*GSL_DBL_EPSILON, 
                                                ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:286:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:286:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:287:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:287:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:324:33: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      gsl_test_rel (nrm_v, 1.0, N * GSL_DBL_EPSILON, "%s, normalized(%d), %s", 
                                ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:336:36: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          gsl_test_abs (vivj, 0.0, N * GSL_DBL_EPSILON, 
                                   ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:401:10: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
  size_t n;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:401:11: note: FIX-IT applied suggested code changes
  size_t n;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:402:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:402:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:489:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:489:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:490:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:490:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:523:33: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      gsl_test_rel (nrm_v, 1.0, N * GSL_DBL_EPSILON, "%s, normalized(%d), %s", 
                                ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:536:60: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          gsl_test_abs (gsl_complex_abs(vivj), 0.0, 10.0 * N * GSL_DBL_EPSILON, 
                                                           ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:601:10: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
  size_t n;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:601:11: note: FIX-IT applied suggested code changes
  size_t n;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:602:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:602:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:651:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:651:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:652:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:652:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:677:31: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      gsl_test_rel(norm, 1.0, N * GSL_DBL_EPSILON,
                              ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:756:10: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
  size_t n;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:756:11: note: FIX-IT applied suggested code changes
  size_t n;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:757:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:757:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:818:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:818:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:819:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:819:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:833:31: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      gsl_test_rel(norm, 1.0, N * GSL_DBL_EPSILON,
                              ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:868:10: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
  size_t n;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:868:11: note: FIX-IT applied suggested code changes
  size_t n;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:869:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:869:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:951:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:951:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:952:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:952:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:966:31: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      gsl_test_rel(norm, 1.0, N * GSL_DBL_EPSILON,
                              ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1000:10: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
  size_t n;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1000:11: note: FIX-IT applied suggested code changes
  size_t n;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1001:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1001:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1148:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1148:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1149:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1149:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1150:23: warning: variable 'ma' is not initialized [cppcoreguidelines-init-variables]
  gsl_matrix_complex *ma;
                      ^
                         = NULL
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1150:25: note: FIX-IT applied suggested code changes
  gsl_matrix_complex *ma;
                        ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1151:23: warning: variable 'mb' is not initialized [cppcoreguidelines-init-variables]
  gsl_matrix_complex *mb;
                      ^
                         = NULL
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1151:25: note: FIX-IT applied suggested code changes
  gsl_matrix_complex *mb;
                        ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1152:23: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
  gsl_vector_complex *x;
                      ^
                        = NULL
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1152:24: note: FIX-IT applied suggested code changes
  gsl_vector_complex *x;
                       ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1153:23: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
  gsl_vector_complex *y;
                      ^
                        = NULL
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1153:24: note: FIX-IT applied suggested code changes
  gsl_vector_complex *y;
                       ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1261:14: warning: Value stored to 'bi' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double bi = NAN;
             ^~
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1261:14: note: Value stored to 'bi' during its initialization is never read
      double bi = NAN;
             ^~
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1289:10: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
  size_t n;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1289:11: note: FIX-IT applied suggested code changes
  size_t n;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1290:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\test.c:1290:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
[255/1003] Building C object gsl/CMakeFiles/specfunc_test.dir/specfunc/test_sf.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:44:5: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  } else if(x1 <= DBL_MAX && x2 <= DBL_MAX && (x1 + x2 != 0.0)) {
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:44:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:90:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
    sprintf(buff, "  expected: %20.16e\n", val);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:90:5: note: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
    sprintf(buff, "  expected: %20.16e\n", val);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:91:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:91:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:91:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:92:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
    sprintf(buff, "  obtained: %20.16e +/- %.16e (rel=%g)\n", r.val, r.err, r.err/(fabs(r.val) + r.err));
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:92:5: note: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
    sprintf(buff, "  obtained: %20.16e +/- %.16e (rel=%g)\n", r.val, r.err, r.err/(fabs(r.val) + r.err));
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:93:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:93:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:93:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:94:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
    sprintf(buff, "  fracdiff: %20.16e\n", f);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:94:5: note: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
    sprintf(buff, "  fracdiff: %20.16e\n", f);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:95:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:95:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:95:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:96:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
    sprintf(buff, " tolerance: %20.16e\n", tol);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:96:5: note: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
    sprintf(buff, " tolerance: %20.16e\n", tol);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:97:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:97:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:97:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:101:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, "  value/expected not consistent within reported error\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:101:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, "  value/expected not consistent within reported error\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:101:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, "  value/expected not consistent within reported error\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:104:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, "  reported error negative\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:104:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, "  reported error negative\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:104:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, "  reported error negative\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:107:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, "  reported error is bad\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:107:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, "  reported error is bad\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:107:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, "  reported error is bad\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:110:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, "  reported error is much too big\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:110:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, "  reported error is much too big\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:110:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, "  reported error is much too big\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:113:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, "  value not within tolerance of expected value\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:113:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, "  value not within tolerance of expected value\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:113:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, "  value not within tolerance of expected value\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:133:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
    sprintf(buff, "  expected exponent: 10^%d\n", e10_in);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:133:5: note: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
    sprintf(buff, "  expected exponent: 10^%d\n", e10_in);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:134:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:134:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:134:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:135:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
    sprintf(buff, "  obtained exponent: 10^%d", e10);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:135:5: note: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
    sprintf(buff, "  obtained exponent: 10^%d", e10);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:136:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:136:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:136:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:140:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, "  exponent is incorrect\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:140:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, "  exponent is incorrect\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:140:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, "  exponent is incorrect\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:157:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
    sprintf(buff, "  expected: %20.16e\n", val);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:157:5: note: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
    sprintf(buff, "  expected: %20.16e\n", val);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:158:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:158:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:158:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:159:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
    sprintf(buff, "  obtained: %20.16e\n", rval);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:159:5: note: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
    sprintf(buff, "  obtained: %20.16e\n", rval);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:160:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:160:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:160:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:161:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
    sprintf(buff, "  fracdiff: %20.16e\n", f);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:161:5: note: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
    sprintf(buff, "  fracdiff: %20.16e\n", f);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:162:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:162:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:162:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:166:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, "  value not within tolerance of expected value\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:166:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, "  value not within tolerance of expected value\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:166:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, "  value not within tolerance of expected value\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:193:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
    sprintf(buff, "  expected: %20.16e\n", val);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:193:5: note: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
    sprintf(buff, "  expected: %20.16e\n", val);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:194:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:194:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:194:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:195:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
    sprintf(buff, "  obtained: %20.16e +/- %.16e  (rel=%g)\n", r.val, r.err, r.err/(fabs(r.val) + r.err));
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:195:5: note: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
    sprintf(buff, "  obtained: %20.16e +/- %.16e  (rel=%g)\n", r.val, r.err, r.err/(fabs(r.val) + r.err));
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:196:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:196:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:196:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:197:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
    sprintf(buff, "  fracdiff: %20.16e\n", f);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:197:5: note: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
    sprintf(buff, "  fracdiff: %20.16e\n", f);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:198:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:198:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:198:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:202:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, "  value/expected not consistent MAX(tol,SINGLE_PREC)\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:202:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, "  value/expected not consistent MAX(tol,SINGLE_PREC)\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:202:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, "  value/expected not consistent MAX(tol,SINGLE_PREC)\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:205:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, "  reported error negative\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:205:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, "  reported error negative\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:205:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, "  reported error negative\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:208:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, "  reported error is bad\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:208:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, "  reported error is bad\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:208:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, "  reported error is bad\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:211:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, "  value not within tolerance of expected value\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:211:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, "  value not within tolerance of expected value\n");
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:211:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, "  value not within tolerance of expected value\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:225:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
    sprintf(buff, "  unexpected return code: %d\n", val_return);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:225:5: note: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
    sprintf(buff, "  unexpected return code: %d\n", val_return);
    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:226:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:226:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
    strcat(message_buff, buff);
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:226:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:972:10: warning: Value stored to 'x' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double x = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:972:10: note: Value stored to 'x' during its initialization is never read
  double x = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1561:10: warning: variable 'u' is not initialized [cppcoreguidelines-init-variables]
  double u;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1561:11: note: FIX-IT applied suggested code changes
  double u;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1562:10: warning: variable 'm' is not initialized [cppcoreguidelines-init-variables]
  double m;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1562:11: note: FIX-IT applied suggested code changes
  double m;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1563:10: warning: variable 'sn' is not initialized [cppcoreguidelines-init-variables]
  double sn;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1563:12: note: FIX-IT applied suggested code changes
  double sn;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1564:10: warning: variable 'cn' is not initialized [cppcoreguidelines-init-variables]
  double cn;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1564:12: note: FIX-IT applied suggested code changes
  double cn;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1565:10: warning: variable 'dn' is not initialized [cppcoreguidelines-init-variables]
  double dn;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1565:12: note: FIX-IT applied suggested code changes
  double dn;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1573:3: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
  stat_ej = gsl_sf_elljac_e(u, m, &sn, &cn, &dn);
  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1573:3: note: Value stored to 'stat_ej' is never read
  stat_ej = gsl_sf_elljac_e(u, m, &sn, &cn, &dn);
  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1583:3: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
  stat_ej = gsl_sf_elljac_e(u, m, &sn, &cn, &dn);
  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1583:3: note: Value stored to 'stat_ej' is never read
  stat_ej = gsl_sf_elljac_e(u, m, &sn, &cn, &dn);
  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1593:3: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
  stat_ej = gsl_sf_elljac_e(u, m, &sn, &cn, &dn);
  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1593:3: note: Value stored to 'stat_ej' is never read
  stat_ej = gsl_sf_elljac_e(u, m, &sn, &cn, &dn);
  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1603:3: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
  stat_ej = gsl_sf_elljac_e(u, m, &sn, &cn, &dn);
  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1603:3: note: Value stored to 'stat_ej' is never read
  stat_ej = gsl_sf_elljac_e(u, m, &sn, &cn, &dn);
  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1613:3: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
  stat_ej = gsl_sf_elljac_e(u, m, &sn, &cn, &dn);
  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1613:3: note: Value stored to 'stat_ej' is never read
  stat_ej = gsl_sf_elljac_e(u, m, &sn, &cn, &dn);
  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1624:3: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
  stat_ej = gsl_sf_elljac_e(u, m, &sn, &cn, &dn);
  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1624:3: note: Value stored to 'stat_ej' is never read
  stat_ej = gsl_sf_elljac_e(u, m, &sn, &cn, &dn);
  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1634:3: warning: Value stored to 'u' is never read [clang-analyzer-deadcode.DeadStores]
  u = 0;
  ^   ~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1634:3: note: Value stored to 'u' is never read
  u = 0;
  ^   ~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1650:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(0.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1650:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(0.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1658:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(-eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1658:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(-eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1666:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1666:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1674:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(1e-30, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1674:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(1e-30, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1682:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(K / 2.0 - eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1682:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(K / 2.0 - eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1690:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1690:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1698:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(K / 2.0 + eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1698:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(K / 2.0 + eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1706:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(K - eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1706:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(K - eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1714:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1714:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1722:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(K + eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1722:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(K + eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1730:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(3.0*K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1730:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(3.0*K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1739:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(2.0*K - eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1739:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(2.0*K - eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1747:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(2.0*K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1747:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(2.0*K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1755:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(2.0*K + eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1755:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(2.0*K + eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1763:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(5.0*K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1763:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(5.0*K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1771:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(3.0*K - eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1771:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(3.0*K - eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1779:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(3.0*K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1779:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(3.0*K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1787:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(3.0*K + eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1787:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(3.0*K + eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1795:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(7.0*K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1795:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(7.0*K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1803:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(4.0*K - eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1803:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(4.0*K - eps, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1811:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(4.0*K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1811:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(4.0*K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1819:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(9.0 * K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1819:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(9.0 * K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1827:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(-K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1827:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(-K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1835:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(-K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1835:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(-K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1843:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(-3.0*K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1843:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(-3.0*K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1851:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(-2.0*K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1851:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(-2.0*K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1859:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(-5.0*K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1859:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(-5.0*K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1867:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(-3.0*K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1867:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(-3.0*K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1875:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(-7.0*K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1875:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(-7.0*K / 2.0, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1883:5: warning: Value stored to 'stat_ej' is never read [clang-analyzer-deadcode.DeadStores]
    stat_ej = gsl_sf_elljac_e(-4.0*K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_sf.c:1883:5: note: Value stored to 'stat_ej' is never read
    stat_ej = gsl_sf_elljac_e(-4.0*K, m, &sn, &cn, &dn);
    ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:91:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:93:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:95:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:97:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:101:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, "  value/expected not consistent within reported error\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:104:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, "  reported error negative\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:107:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, "  reported error is bad\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:110:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, "  reported error is much too big\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:113:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, "  value not within tolerance of expected value\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:134:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:136:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:140:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, "  exponent is incorrect\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:158:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:160:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:162:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:166:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, "  value not within tolerance of expected value\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:194:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:196:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:198:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:202:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, "  value/expected not consistent MAX(tol,SINGLE_PREC)\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:205:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, "  reported error negative\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:208:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, "  reported error is bad\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:211:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, "  value not within tolerance of expected value\n");
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/specfunc/test_sf.c:226:5: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    strcat(message_buff, buff);
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
24 warnings generated.
[256/1003] Building C object gsl/CMakeFiles/specfunc_test.dir/specfunc/test_airy.c.obj
[257/1003] Building C object gsl/CMakeFiles/specfunc_test.dir/specfunc/test_bessel.c.obj
[258/1003] Building C object gsl/CMakeFiles/specfunc_test.dir/specfunc/test_coulomb.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:46:10: warning: variable 'Fe' is not initialized [cppcoreguidelines-init-variables]
  double Fe;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:25:1: note: FIX-IT applied suggested code changes
#include "test_sf.h"
^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:46:12: note: FIX-IT applied suggested code changes
  double Fe;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:47:10: warning: variable 'Ge' is not initialized [cppcoreguidelines-init-variables]
  double Ge;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:47:12: note: FIX-IT applied suggested code changes
  double Ge;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:48:10: warning: Value stored to 'lam_min' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double lam_min = NAN;
         ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:48:10: note: Value stored to 'lam_min' during its initialization is never read
  double lam_min = NAN;
         ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:49:10: warning: Value stored to 'lam_F' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double lam_F = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:49:10: note: Value stored to 'lam_F' during its initialization is never read
  double lam_F = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:50:10: warning: variable 'eta' is not initialized [cppcoreguidelines-init-variables]
  double eta;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:50:13: note: FIX-IT applied suggested code changes
  double eta;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:51:10: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
  double x;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:51:11: note: FIX-IT applied suggested code changes
  double x;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:131:3: warning: Value stored to 'lam_min' is never read [clang-analyzer-deadcode.DeadStores]
  lam_min = 0.0;
  ^         ~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:131:3: note: Value stored to 'lam_min' is never read
  lam_min = 0.0;
  ^         ~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:145:3: warning: Value stored to 'lam_min' is never read [clang-analyzer-deadcode.DeadStores]
  lam_min = 0.0;
  ^         ~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_coulomb.c:145:3: note: Value stored to 'lam_min' is never read
  lam_min = 0.0;
  ^         ~~~
[259/1003] Building C object gsl/CMakeFiles/specfunc_test.dir/specfunc/test_dilog.c.obj
[260/1003] Building C object gsl/CMakeFiles/specfunc_test.dir/specfunc/test_gamma.c.obj
[261/1003] Building C object gsl/CMakeFiles/specfunc_test.dir/specfunc/test_hermite.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\test_hermite.c:45:10: warning: variable 'lhs' is not initialized [cppcoreguidelines-init-variables]
  double lhs;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_hermite.c:24:1: note: FIX-IT applied suggested code changes
^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_hermite.c:45:13: note: FIX-IT applied suggested code changes
  double lhs;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_hermite.c:46:10: warning: variable 'rhs' is not initialized [cppcoreguidelines-init-variables]
  double rhs;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_hermite.c:46:13: note: FIX-IT applied suggested code changes
  double rhs;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_hermite.c:76:7: warning: variable 'm' is not initialized [cppcoreguidelines-init-variables]
  int m;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\test_hermite.c:76:8: note: FIX-IT applied suggested code changes
  int m;
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_hermite.c:77:7: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
  int n;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\test_hermite.c:77:8: note: FIX-IT applied suggested code changes
  int n;
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_hermite.c:78:7: warning: variable 'sa' is not initialized [cppcoreguidelines-init-variables]
  int sa;
      ^
         = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\test_hermite.c:78:9: note: FIX-IT applied suggested code changes
  int sa;
        ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_hermite.c:80:10: warning: Value stored to 'x' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double x = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_hermite.c:80:10: note: Value stored to 'x' during its initialization is never read
  double x = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_hermite.c:190:3: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]
  x = 0.75;
  ^   ~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_hermite.c:190:3: note: Value stored to 'x' is never read
  x = 0.75;
  ^   ~~~~
[262/1003] Building C object gsl/CMakeFiles/specfunc_test.dir/specfunc/test_hyperg.c.obj
[263/1003] Building C object gsl/CMakeFiles/specfunc_test.dir/specfunc/test_legendre.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:33:10: warning: Value stored to 'dx' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double dx = NAN;
         ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:33:10: note: Value stored to 'dx' during its initialization is never read
  double dx = NAN;
         ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:125:10: warning: Value stored to 'value' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double value = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:125:10: note: Value stored to 'value' during its initialization is never read
  double value = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:140:32: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  double factor = sqrt( (2.0 * l + 1.0) / 4.0 / M_PI);
                               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:152:24: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  double factor = sqrt(l + 0.5);
                       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:167:10: warning: variable 'l' is not initialized [cppcoreguidelines-init-variables]
  size_t l;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:167:11: note: FIX-IT applied suggested code changes
  size_t l;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:168:10: warning: variable 'm' is not initialized [cppcoreguidelines-init-variables]
  size_t m;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:168:11: note: FIX-IT applied suggested code changes
  size_t m;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:195:10: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
  double x;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:195:11: note: FIX-IT applied suggested code changes
  double x;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:196:10: warning: variable 'dx' is not initialized [cppcoreguidelines-init-variables]
  double dx;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:196:12: note: FIX-IT applied suggested code changes
  double dx;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:197:11: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  double *p;
          ^
            = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:197:12: note: FIX-IT applied suggested code changes
  double *p;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:198:11: warning: variable 'p2' is not initialized [cppcoreguidelines-init-variables]
  double *p2;
          ^
             = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:198:13: note: FIX-IT applied suggested code changes
  double *p2;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:199:11: warning: variable 'dp' is not initialized [cppcoreguidelines-init-variables]
  double *dp;
          ^
             = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:199:13: note: FIX-IT applied suggested code changes
  double *dp;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:200:11: warning: variable 'd2p' is not initialized [cppcoreguidelines-init-variables]
  double *d2p;
          ^
              = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:200:14: note: FIX-IT applied suggested code changes
  double *d2p;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:201:11: warning: variable 'p_alt' is not initialized [cppcoreguidelines-init-variables]
  double *p_alt;
          ^
                = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:201:16: note: FIX-IT applied suggested code changes
  double *p_alt;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:202:11: warning: variable 'dp_alt' is not initialized [cppcoreguidelines-init-variables]
  double *dp_alt;
          ^
                 = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:202:17: note: FIX-IT applied suggested code changes
  double *dp_alt;
                ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:251:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for (x = -1.0; x <= 1.0; x += dx)
  ^              ~         ~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:251:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for (x = -1.0; x <= 1.0; x += dx)
  ^              ~         ~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:266:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for (x = -1.0 + dx; x < 1.0 - dx; x += dx)
  ^                   ~             ~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:266:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for (x = -1.0 + dx; x < 1.0 - dx; x += dx)
  ^                   ~             ~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:292:48: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          double sum = test_legendre_sum_deriv(l, p, dp);
                                               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:300:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for (x = -1.0 + dx; x < 1.0 - dx; x += dx)
  ^                   ~             ~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:300:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for (x = -1.0 + dx; x < 1.0 - dx; x += dx)
  ^                   ~             ~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:317:48: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          double sum = test_legendre_sum_deriv(l, p, dp);
                                               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:318:50: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          double sum2 = test_legendre_sum_deriv2(l, p, dp, d2p);
                                                 ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:343:10: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
  double x;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:343:11: note: FIX-IT applied suggested code changes
  double x;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:344:10: warning: variable 'dx' is not initialized [cppcoreguidelines-init-variables]
  double dx;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:344:12: note: FIX-IT applied suggested code changes
  double dx;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:345:11: warning: variable 'p_schmidt' is not initialized [cppcoreguidelines-init-variables]
  double *p_schmidt;
          ^
                    = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:345:20: note: FIX-IT applied suggested code changes
  double *p_schmidt;
                   ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:346:11: warning: variable 'dp_schmidt' is not initialized [cppcoreguidelines-init-variables]
  double *dp_schmidt;
          ^
                     = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:346:21: note: FIX-IT applied suggested code changes
  double *dp_schmidt;
                    ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:347:11: warning: variable 'd2p_schmidt' is not initialized [cppcoreguidelines-init-variables]
  double *d2p_schmidt;
          ^
                      = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:347:22: note: FIX-IT applied suggested code changes
  double *d2p_schmidt;
                     ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:348:11: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  double *p;
          ^
            = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:348:12: note: FIX-IT applied suggested code changes
  double *p;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:349:11: warning: variable 'dp' is not initialized [cppcoreguidelines-init-variables]
  double *dp;
          ^
             = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:349:13: note: FIX-IT applied suggested code changes
  double *dp;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:350:11: warning: variable 'd2p' is not initialized [cppcoreguidelines-init-variables]
  double *d2p;
          ^
              = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:350:14: note: FIX-IT applied suggested code changes
  double *d2p;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:391:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for (x = -1.0; x <= 1.0; x += dx)
  ^              ~         ~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:391:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for (x = -1.0; x <= 1.0; x += dx)
  ^              ~         ~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:400:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for (x = -1.0 + dx; x < 1.0 - dx; x += dx)
  ^                   ~             ~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:400:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for (x = -1.0 + dx; x < 1.0 - dx; x += dx)
  ^                   ~             ~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:449:10: warning: variable 'l' is not initialized [cppcoreguidelines-init-variables]
  size_t l;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:449:11: note: FIX-IT applied suggested code changes
  size_t l;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:450:10: warning: variable 'm' is not initialized [cppcoreguidelines-init-variables]
  size_t m;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:450:11: note: FIX-IT applied suggested code changes
  size_t m;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:451:10: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
  double x;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:451:11: note: FIX-IT applied suggested code changes
  double x;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:452:10: warning: variable 'dx' is not initialized [cppcoreguidelines-init-variables]
  double dx;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:452:12: note: FIX-IT applied suggested code changes
  double dx;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:453:11: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  double *p;
          ^
            = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:453:12: note: FIX-IT applied suggested code changes
  double *p;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:454:11: warning: variable 'dp' is not initialized [cppcoreguidelines-init-variables]
  double *dp;
          ^
             = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:454:13: note: FIX-IT applied suggested code changes
  double *dp;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:455:11: warning: variable 'd2p' is not initialized [cppcoreguidelines-init-variables]
  double *d2p;
          ^
              = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:455:14: note: FIX-IT applied suggested code changes
  double *d2p;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:456:11: warning: variable 'p2' is not initialized [cppcoreguidelines-init-variables]
  double *p2;
          ^
             = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:456:13: note: FIX-IT applied suggested code changes
  double *p2;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:457:11: warning: variable 'p_schmidt' is not initialized [cppcoreguidelines-init-variables]
  double *p_schmidt;
          ^
                    = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:457:20: note: FIX-IT applied suggested code changes
  double *p_schmidt;
                   ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:458:11: warning: variable 'dp_schmidt' is not initialized [cppcoreguidelines-init-variables]
  double *dp_schmidt;
          ^
                     = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:458:21: note: FIX-IT applied suggested code changes
  double *dp_schmidt;
                    ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:459:11: warning: variable 'd2p_schmidt' is not initialized [cppcoreguidelines-init-variables]
  double *d2p_schmidt;
          ^
                      = NULL
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:459:22: note: FIX-IT applied suggested code changes
  double *d2p_schmidt;
                     ^
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:473:3: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
  for (x = -1.0 + dx; x < 1.0 - dx; x += dx)
  ^                   ~             ~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:473:3: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
  for (x = -1.0 + dx; x < 1.0 - dx; x += dx)
  ^                   ~             ~
D:\a\aprg\aprg\gsl\gsl\specfunc\test_legendre.c:481:49: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          double a_lm = sqrt(2.0 / (double)l / (l + 1.0));
                                                ^
[264/1003] Building C object gsl/CMakeFiles/specfunc_test.dir/specfunc/test_mathieu.c.obj
[265/1003] Building C object gsl/CMakeFiles/specfunc_test.dir/specfunc/test_sincos_pi.c.obj
[266/1003] Building C object gsl/CMakeFiles/dht_test.dir/dht/test.c.obj
[267/1003] Building C object gsl/CMakeFiles/qrng_test.dir/qrng/test.c.obj
D:\a\aprg\aprg\gsl\gsl\qrng\test.c:69:2: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
        status = 0;
        ^        ~
D:\a\aprg\aprg\gsl\gsl\qrng\test.c:69:2: note: Value stored to 'status' is never read
        status = 0;
        ^        ~
D:\a\aprg\aprg\gsl\gsl\qrng\test.c:160:2: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
        status = 0;
        ^        ~
D:\a\aprg\aprg\gsl\gsl\qrng\test.c:160:2: note: Value stored to 'status' is never read
        status = 0;
        ^        ~
[268/1003] Building C object gsl/CMakeFiles/rng_test.dir/rng/test.c.obj
D:\a\aprg\aprg\gsl\gsl\rng\test.c:267:10: warning: variable 'u' is not initialized [cppcoreguidelines-init-variables]
  double u;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\rng\test.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\rng\test.c:267:11: note: FIX-IT applied suggested code changes
  double u;
          ^
D:\a\aprg\aprg\gsl\gsl\rng\test.c:268:10: warning: variable 'c' is not initialized [cppcoreguidelines-init-variables]
  double c ; 
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\rng\test.c:268:11: note: FIX-IT applied suggested code changes
  double c ; 
          ^
D:\a\aprg\aprg\gsl\gsl\rng\test.c:411:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    FILE *f = fopen("test.dat", "wb"); 
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\rng\test.c:422:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    FILE *f = fopen("test.dat", "rb"); 
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\rng\test.c:509:10: warning: Value stored to 'expect_uncovered' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double expect_uncovered = NAN;
         ^~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\rng\test.c:509:10: note: Value stored to 'expect_uncovered' during its initialization is never read
  double expect_uncovered = NAN;
         ^~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\rng\test.c:537:10: warning: Value stored to 'expect_uncovered' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double expect_uncovered = NAN;
         ^~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\rng\test.c:537:10: note: Value stored to 'expect_uncovered' during its initialization is never read
  double expect_uncovered = NAN;
         ^~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\rng\test.c:564:7: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  int i;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\rng\test.c:564:8: note: FIX-IT applied suggested code changes
  int i;
       ^
D:\a\aprg\aprg\gsl\gsl\rng\test.c:565:7: warning: variable 'status' is not initialized [cppcoreguidelines-init-variables]
  int status;
      ^
             = 0
D:\a\aprg\aprg\gsl\gsl\rng\test.c:565:13: note: FIX-IT applied suggested code changes
  int status;
            ^
D:\a\aprg\aprg\gsl\gsl\rng\test.c:597:7: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  int i;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\rng\test.c:597:8: note: FIX-IT applied suggested code changes
  int i;
       ^
D:\a\aprg\aprg\gsl\gsl\rng\test.c:598:7: warning: variable 'status' is not initialized [cppcoreguidelines-init-variables]
  int status;
      ^
             = 0
D:\a\aprg\aprg\gsl\gsl\rng\test.c:598:13: note: FIX-IT applied suggested code changes
  int status;
            ^
D:\a\aprg\aprg\gsl\gsl\rng\test.c:607:15: warning: narrowing conversion from 'unsigned long' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      int j = gsl_rng_uniform_int (r, BINS);
              ^
D:\a\aprg\aprg\gsl\gsl\rng\test.c:644:10: warning: variable 'sigma' is not initialized [cppcoreguidelines-init-variables]
  double sigma;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\rng\test.c:644:15: note: FIX-IT applied suggested code changes
  double sigma;
              ^
D:\a\aprg\aprg\gsl\gsl\rng\test.c:645:7: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  int i;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\rng\test.c:645:8: note: FIX-IT applied suggested code changes
  int i;
       ^
D:/a/aprg/aprg/gsl/gsl/rng/test.c:412:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen("test.dat", "wb"); 
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/rng/test.c:423:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen("test.dat", "rb"); 
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
2 warnings generated.
[269/1003] Building C object gsl/CMakeFiles/randist_test.dir/randist/test.c.obj
D:\a\aprg\aprg\gsl\gsl\randist\test.c:428:7: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  int i;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\randist\test.c:428:8: note: FIX-IT applied suggested code changes
  int i;
       ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:429:7: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  int j;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\randist\test.c:429:8: note: FIX-IT applied suggested code changes
  int j;
       ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:480:7: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  int i;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\randist\test.c:480:8: note: FIX-IT applied suggested code changes
  int i;
       ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:481:7: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  int j;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\randist\test.c:481:8: note: FIX-IT applied suggested code changes
  int j;
       ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:529:10: warning: variable 'expected' is not initialized [cppcoreguidelines-init-variables]
  double expected;
         ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:21:1: note: FIX-IT applied suggested code changes
#include <stdio.h>
^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:529:18: note: FIX-IT applied suggested code changes
  double expected;
                 ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:530:10: warning: variable 'sigma' is not initialized [cppcoreguidelines-init-variables]
  double sigma;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:530:15: note: FIX-IT applied suggested code changes
  double sigma;
              ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:574:10: warning: variable 'result' is not initialized [cppcoreguidelines-init-variables]
  double result;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:574:16: note: FIX-IT applied suggested code changes
  double result;
               ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:575:10: warning: variable 'abserr' is not initialized [cppcoreguidelines-init-variables]
  double abserr;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:575:16: note: FIX-IT applied suggested code changes
  double abserr;
               ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:601:10: warning: variable 'mean' is not initialized [cppcoreguidelines-init-variables]
  double mean;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:601:14: note: FIX-IT applied suggested code changes
  double mean;
             ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:602:7: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  int i;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\randist\test.c:602:8: note: FIX-IT applied suggested code changes
  int i;
       ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:603:7: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  int j;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\randist\test.c:603:8: note: FIX-IT applied suggested code changes
  int j;
       ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:699:15: warning: narrowing conversion from 'double' to 'long' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          n = 2.0*n;
              ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:945:10: warning: variable 'theta' is not initialized [cppcoreguidelines-init-variables]
  double theta;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:945:15: note: FIX-IT applied suggested code changes
  double theta;
              ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:969:10: warning: variable 'theta' is not initialized [cppcoreguidelines-init-variables]
  double theta;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:969:15: note: FIX-IT applied suggested code changes
  double theta;
              ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:994:10: warning: variable 'theta' is not initialized [cppcoreguidelines-init-variables]
  double theta;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:994:15: note: FIX-IT applied suggested code changes
  double theta;
              ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1019:10: warning: variable 'theta' is not initialized [cppcoreguidelines-init-variables]
  double theta;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1019:15: note: FIX-IT applied suggested code changes
  double theta;
              ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1044:10: warning: variable 'theta' is not initialized [cppcoreguidelines-init-variables]
  double theta;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1044:15: note: FIX-IT applied suggested code changes
  double theta;
              ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1138:10: warning: variable 'mean' is not initialized [cppcoreguidelines-init-variables]
  double mean;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1138:14: note: FIX-IT applied suggested code changes
  double mean;
             ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1139:10: warning: variable 'obs_mean' is not initialized [cppcoreguidelines-init-variables]
  double obs_mean;
         ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1139:18: note: FIX-IT applied suggested code changes
  double obs_mean;
                 ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1140:10: warning: variable 'sd' is not initialized [cppcoreguidelines-init-variables]
  double sd;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1140:12: note: FIX-IT applied suggested code changes
  double sd;
           ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1141:10: warning: variable 'sigma' is not initialized [cppcoreguidelines-init-variables]
  double sigma;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1141:15: note: FIX-IT applied suggested code changes
  double sigma;
              ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1142:7: warning: variable 'status' is not initialized [cppcoreguidelines-init-variables]
  int status;
      ^
             = 0
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1142:13: note: FIX-IT applied suggested code changes
  int status;
            ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1143:7: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  int k;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1143:8: note: FIX-IT applied suggested code changes
  int k;
       ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1144:7: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
  int n;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1144:8: note: FIX-IT applied suggested code changes
  int n;
       ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1193:10: warning: variable 'mean' is not initialized [cppcoreguidelines-init-variables]
  double mean;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1193:14: note: FIX-IT applied suggested code changes
  double mean;
             ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1194:10: warning: variable 'obs_mean' is not initialized [cppcoreguidelines-init-variables]
  double obs_mean;
         ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1194:18: note: FIX-IT applied suggested code changes
  double obs_mean;
                 ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1195:10: warning: variable 'sd' is not initialized [cppcoreguidelines-init-variables]
  double sd;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1195:12: note: FIX-IT applied suggested code changes
  double sd;
           ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1196:10: warning: variable 'sigma' is not initialized [cppcoreguidelines-init-variables]
  double sigma;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1196:15: note: FIX-IT applied suggested code changes
  double sigma;
              ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1197:7: warning: variable 'status' is not initialized [cppcoreguidelines-init-variables]
  int status;
      ^
             = 0
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1197:13: note: FIX-IT applied suggested code changes
  int status;
            ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1198:7: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  int k;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1198:8: note: FIX-IT applied suggested code changes
  int k;
       ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1199:7: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
  int n;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1199:8: note: FIX-IT applied suggested code changes
  int n;
       ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1238:10: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  return gsl_ran_discrete (r_global, g1);
         ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1255:10: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  return gsl_ran_discrete (r_global, g2);
         ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1273:10: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  return gsl_ran_discrete (r_global, g3);
         ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1718:7: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  int i;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1718:8: note: FIX-IT applied suggested code changes
  int i;
       ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1917:15: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  threshold = (N-1) * d / (double)(N-d) * gsl_cdf_fdist_Pinv(1-alpha, d, N-d);
              ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1917:71: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  threshold = (N-1) * d / (double)(N-d) * gsl_cdf_fdist_Pinv(1-alpha, d, N-d);
                                                                      ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:1922:32: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  pvalue = gsl_cdf_fdist_Q(T2, d, N-d);
                               ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:2045:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\randist\test.c:2045:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:2046:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\randist\test.c:2046:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:2048:10: warning: variable 'mean_wishart' is not initialized [cppcoreguidelines-init-variables]
  double mean_wishart;
         ^
                      = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:2048:22: note: FIX-IT applied suggested code changes
  double mean_wishart;
                     ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:2049:10: warning: variable 'var_wishart' is not initialized [cppcoreguidelines-init-variables]
  double var_wishart;
         ^
                     = NAN
D:\a\aprg\aprg\gsl\gsl\randist\test.c:2049:21: note: FIX-IT applied suggested code changes
  double var_wishart;
                    ^
D:\a\aprg\aprg\gsl\gsl\randist\test.c:2065:7: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
      status = gsl_ran_wishart(r_global, df[j], L, sample_wishart, work);
      ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\randist\test.c:2065:7: note: Value stored to 'status' is never read
      status = gsl_ran_wishart(r_global, df[j], L, sample_wishart, work);
      ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[270/1003] Building C object gsl/CMakeFiles/fft_test.dir/fft/test.c.obj
[271/1003] Building C object gsl/CMakeFiles/fft_test.dir/fft/signals.c.obj
[272/1003] Building C object gsl/CMakeFiles/poly_test.dir/poly/test.c.obj
D:\a\aprg\aprg\gsl\gsl\poly\test.c:39:15: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  if (r < 0.0)
              ^
               {
D:\a\aprg\aprg\gsl\gsl\poly\test.c:39:15: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\poly\test.c:41:3: note: FIX-IT applied suggested code changes
  else
  ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:41:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else
  ^~~~
D:\a\aprg\aprg\gsl\gsl\poly\test.c:41:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\poly\test.c:41:7: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  else
      ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\poly\test.c:55:12: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
    double x;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:55:13: note: FIX-IT applied suggested code changes
    double x;
            ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:56:12: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
    double y;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:56:13: note: FIX-IT applied suggested code changes
    double y;
            ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:65:12: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
    double x;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:65:13: note: FIX-IT applied suggested code changes
    double x;
            ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:66:12: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
    double y;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:66:13: note: FIX-IT applied suggested code changes
    double y;
            ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:136:12: warning: variable 'x0' is not initialized [cppcoreguidelines-init-variables]
    double x0;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:136:14: note: FIX-IT applied suggested code changes
    double x0;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:137:12: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
    double x1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:137:14: note: FIX-IT applied suggested code changes
    double x1;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:145:12: warning: variable 'x0' is not initialized [cppcoreguidelines-init-variables]
    double x0;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:145:14: note: FIX-IT applied suggested code changes
    double x0;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:146:12: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
    double x1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:146:14: note: FIX-IT applied suggested code changes
    double x1;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:157:12: warning: variable 'x0' is not initialized [cppcoreguidelines-init-variables]
    double x0;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:157:14: note: FIX-IT applied suggested code changes
    double x0;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:158:12: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
    double x1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:158:14: note: FIX-IT applied suggested code changes
    double x1;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:168:12: warning: variable 'x0' is not initialized [cppcoreguidelines-init-variables]
    double x0;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:168:14: note: FIX-IT applied suggested code changes
    double x0;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:169:12: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
    double x1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:169:14: note: FIX-IT applied suggested code changes
    double x1;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:179:12: warning: variable 'x0' is not initialized [cppcoreguidelines-init-variables]
    double x0;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:179:14: note: FIX-IT applied suggested code changes
    double x0;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:180:12: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
    double x1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:180:14: note: FIX-IT applied suggested code changes
    double x1;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:192:12: warning: variable 'x0' is not initialized [cppcoreguidelines-init-variables]
    double x0;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:192:14: note: FIX-IT applied suggested code changes
    double x0;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:193:12: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
    double x1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:193:14: note: FIX-IT applied suggested code changes
    double x1;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:204:12: warning: variable 'x0' is not initialized [cppcoreguidelines-init-variables]
    double x0;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:204:14: note: FIX-IT applied suggested code changes
    double x0;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:205:12: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
    double x1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:205:14: note: FIX-IT applied suggested code changes
    double x1;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:216:12: warning: variable 'x0' is not initialized [cppcoreguidelines-init-variables]
    double x0;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:216:14: note: FIX-IT applied suggested code changes
    double x0;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:217:12: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
    double x1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:217:14: note: FIX-IT applied suggested code changes
    double x1;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:218:12: warning: variable 'x2' is not initialized [cppcoreguidelines-init-variables]
    double x2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:218:14: note: FIX-IT applied suggested code changes
    double x2;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:227:12: warning: variable 'x0' is not initialized [cppcoreguidelines-init-variables]
    double x0;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:227:14: note: FIX-IT applied suggested code changes
    double x0;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:228:12: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
    double x1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:228:14: note: FIX-IT applied suggested code changes
    double x1;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:229:12: warning: variable 'x2' is not initialized [cppcoreguidelines-init-variables]
    double x2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:229:14: note: FIX-IT applied suggested code changes
    double x2;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:240:12: warning: variable 'x0' is not initialized [cppcoreguidelines-init-variables]
    double x0;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:240:14: note: FIX-IT applied suggested code changes
    double x0;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:241:12: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
    double x1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:241:14: note: FIX-IT applied suggested code changes
    double x1;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:242:12: warning: variable 'x2' is not initialized [cppcoreguidelines-init-variables]
    double x2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:242:14: note: FIX-IT applied suggested code changes
    double x2;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:254:12: warning: variable 'x0' is not initialized [cppcoreguidelines-init-variables]
    double x0;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:254:14: note: FIX-IT applied suggested code changes
    double x0;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:255:12: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
    double x1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:255:14: note: FIX-IT applied suggested code changes
    double x1;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:256:12: warning: variable 'x2' is not initialized [cppcoreguidelines-init-variables]
    double x2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:256:14: note: FIX-IT applied suggested code changes
    double x2;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:268:12: warning: variable 'x0' is not initialized [cppcoreguidelines-init-variables]
    double x0;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:268:14: note: FIX-IT applied suggested code changes
    double x0;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:269:12: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
    double x1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:269:14: note: FIX-IT applied suggested code changes
    double x1;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:270:12: warning: variable 'x2' is not initialized [cppcoreguidelines-init-variables]
    double x2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:270:14: note: FIX-IT applied suggested code changes
    double x2;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:282:12: warning: variable 'x0' is not initialized [cppcoreguidelines-init-variables]
    double x0;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:282:14: note: FIX-IT applied suggested code changes
    double x0;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:283:12: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
    double x1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:283:14: note: FIX-IT applied suggested code changes
    double x1;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:284:12: warning: variable 'x2' is not initialized [cppcoreguidelines-init-variables]
    double x2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\poly\test.c:284:14: note: FIX-IT applied suggested code changes
    double x2;
             ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:714:12: warning: Value stored to 'x' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double x = NAN;
           ^
D:\a\aprg\aprg\gsl\gsl\poly\test.c:714:12: note: Value stored to 'x' during its initialization is never read
    double x = NAN;
           ^
[273/1003] Building C object gsl/CMakeFiles/fit_test.dir/fit/test.c.obj
D:\a\aprg\aprg\gsl\gsl\fit\test.c:59:12: warning: variable 'c0' is not initialized [cppcoreguidelines-init-variables]
    double c0;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:6:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:59:14: note: FIX-IT applied suggested code changes
    double c0;
             ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:60:12: warning: variable 'c1' is not initialized [cppcoreguidelines-init-variables]
    double c1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:60:14: note: FIX-IT applied suggested code changes
    double c1;
             ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:61:12: warning: variable 'cov00' is not initialized [cppcoreguidelines-init-variables]
    double cov00;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:61:17: note: FIX-IT applied suggested code changes
    double cov00;
                ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:62:12: warning: variable 'cov01' is not initialized [cppcoreguidelines-init-variables]
    double cov01;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:62:17: note: FIX-IT applied suggested code changes
    double cov01;
                ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:63:12: warning: variable 'cov11' is not initialized [cppcoreguidelines-init-variables]
    double cov11;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:63:17: note: FIX-IT applied suggested code changes
    double cov11;
                ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:64:12: warning: variable 'sumsq' is not initialized [cppcoreguidelines-init-variables]
    double sumsq;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:64:17: note: FIX-IT applied suggested code changes
    double sumsq;
                ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:88:12: warning: variable 'c0' is not initialized [cppcoreguidelines-init-variables]
    double c0;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:88:14: note: FIX-IT applied suggested code changes
    double c0;
             ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:89:12: warning: variable 'c1' is not initialized [cppcoreguidelines-init-variables]
    double c1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:89:14: note: FIX-IT applied suggested code changes
    double c1;
             ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:90:12: warning: variable 'cov00' is not initialized [cppcoreguidelines-init-variables]
    double cov00;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:90:17: note: FIX-IT applied suggested code changes
    double cov00;
                ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:91:12: warning: variable 'cov01' is not initialized [cppcoreguidelines-init-variables]
    double cov01;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:91:17: note: FIX-IT applied suggested code changes
    double cov01;
                ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:92:12: warning: variable 'cov11' is not initialized [cppcoreguidelines-init-variables]
    double cov11;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:92:17: note: FIX-IT applied suggested code changes
    double cov11;
                ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:93:12: warning: variable 'sumsq' is not initialized [cppcoreguidelines-init-variables]
    double sumsq;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:93:17: note: FIX-IT applied suggested code changes
    double sumsq;
                ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:121:12: warning: variable 'c1' is not initialized [cppcoreguidelines-init-variables]
    double c1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:121:14: note: FIX-IT applied suggested code changes
    double c1;
             ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:122:12: warning: variable 'cov11' is not initialized [cppcoreguidelines-init-variables]
    double cov11;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:122:17: note: FIX-IT applied suggested code changes
    double cov11;
                ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:123:12: warning: variable 'sumsq' is not initialized [cppcoreguidelines-init-variables]
    double sumsq;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:123:17: note: FIX-IT applied suggested code changes
    double sumsq;
                ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:137:12: warning: variable 'c1' is not initialized [cppcoreguidelines-init-variables]
    double c1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:137:14: note: FIX-IT applied suggested code changes
    double c1;
             ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:138:12: warning: variable 'cov11' is not initialized [cppcoreguidelines-init-variables]
    double cov11;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:138:17: note: FIX-IT applied suggested code changes
    double cov11;
                ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:139:12: warning: variable 'sumsq' is not initialized [cppcoreguidelines-init-variables]
    double sumsq;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:139:17: note: FIX-IT applied suggested code changes
    double sumsq;
                ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:161:12: warning: variable 'c1' is not initialized [cppcoreguidelines-init-variables]
    double c1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:161:14: note: FIX-IT applied suggested code changes
    double c1;
             ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:162:12: warning: variable 'cov11' is not initialized [cppcoreguidelines-init-variables]
    double cov11;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:162:17: note: FIX-IT applied suggested code changes
    double cov11;
                ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:163:12: warning: variable 'sumsq' is not initialized [cppcoreguidelines-init-variables]
    double sumsq;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:163:17: note: FIX-IT applied suggested code changes
    double sumsq;
                ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:177:12: warning: variable 'c1' is not initialized [cppcoreguidelines-init-variables]
    double c1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:177:14: note: FIX-IT applied suggested code changes
    double c1;
             ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:178:12: warning: variable 'cov11' is not initialized [cppcoreguidelines-init-variables]
    double cov11;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:178:17: note: FIX-IT applied suggested code changes
    double cov11;
                ^
D:\a\aprg\aprg\gsl\gsl\fit\test.c:179:12: warning: variable 'sumsq' is not initialized [cppcoreguidelines-init-variables]
    double sumsq;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\fit\test.c:179:17: note: FIX-IT applied suggested code changes
    double sumsq;
                ^
[274/1003] Building C object gsl/CMakeFiles/multifit_test.dir/multifit/test.c.obj
[275/1003] Building C object gsl/CMakeFiles/multifit_nlinear_test.dir/multifit_nlinear/test.c.obj
In file included from D:/a/aprg/aprg/gsl/gsl/multifit_nlinear/test.c:33:
D:/a/aprg/aprg/gsl/gsl/multifit_nlinear/test_fdf.c:273:9: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
        strcat(buf, "/fdjac,forward");
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/multifit_nlinear/test.c:33:
D:/a/aprg/aprg/gsl/gsl/multifit_nlinear/test_fdf.c:275:9: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
        strcat(buf, "/fdjac,center");
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/multifit_nlinear/test.c:33:
D:/a/aprg/aprg/gsl/gsl/multifit_nlinear/test_fdf.c:280:7: warning: 'strcat' is deprecated: This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
      strcat(buf, "/fdfvv");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:91:5: note: 'strcat' has been explicitly marked deprecated here
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/multifit_nlinear/test.c:33:
D:/a/aprg/aprg/gsl/gsl/multifit_nlinear/test_fdf.c:283:3: warning: 'strcpy' is deprecated: This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  strcpy(sname, buf);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:130:1: note: 'strcpy' has been explicitly marked deprecated here
__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
4 warnings generated.
[276/1003] Building C object gsl/CMakeFiles/multilarge_test.dir/multilarge/test.c.obj
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:80:48: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  const double ratio = pow(smin / smax, 1.0 / (N - 1.0));
                                               ^
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:81:10: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double s = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:81:10: note: Value stored to 's' during its initialization is never read
  double s = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:124:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:124:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:125:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:125:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:341:10: warning: variable 'rnorm0' is not initialized [cppcoreguidelines-init-variables]
  double rnorm0;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:341:16: note: FIX-IT applied suggested code changes
  double rnorm0;
               ^
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:342:10: warning: variable 'snorm0' is not initialized [cppcoreguidelines-init-variables]
  double snorm0;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:342:16: note: FIX-IT applied suggested code changes
  double snorm0;
               ^
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:343:10: warning: variable 'rnorm1' is not initialized [cppcoreguidelines-init-variables]
  double rnorm1;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:343:16: note: FIX-IT applied suggested code changes
  double rnorm1;
               ^
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:344:10: warning: variable 'snorm1' is not initialized [cppcoreguidelines-init-variables]
  double snorm1;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:344:16: note: FIX-IT applied suggested code changes
  double snorm1;
               ^
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:378:9: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
        sprintf(str, "random %s unweighted stdform n=%zu p=%zu lambda=%g",
        ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:378:9: note: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
        sprintf(str, "random %s unweighted stdform n=%zu p=%zu lambda=%g",
        ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:391:9: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
        sprintf(str, "random %s weighted diag(L) n=%zu p=%zu lambda=%g",
        ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:391:9: note: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
        sprintf(str, "random %s weighted diag(L) n=%zu p=%zu lambda=%g",
        ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:404:9: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
        sprintf(str, "random %s unweighted diag(L) n=%zu p=%zu lambda=%g",
        ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:404:9: note: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
        sprintf(str, "random %s unweighted diag(L) n=%zu p=%zu lambda=%g",
        ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:417:9: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
        sprintf(str, "random %s weighted Lsqr n=%zu p=%zu lambda=%g",
        ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:417:9: note: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
        sprintf(str, "random %s weighted Lsqr n=%zu p=%zu lambda=%g",
        ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:430:9: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
        sprintf(str, "random %s unweighted Lsqr n=%zu p=%zu lambda=%g",
        ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:430:9: note: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
        sprintf(str, "random %s unweighted Lsqr n=%zu p=%zu lambda=%g",
        ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:443:9: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
        sprintf(str, "random %s weighted Ltall n=%zu p=%zu lambda=%g",
        ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:443:9: note: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
        sprintf(str, "random %s weighted Ltall n=%zu p=%zu lambda=%g",
        ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:456:9: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
        sprintf(str, "random %s unweighted Ltall n=%zu p=%zu lambda=%g",
        ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\multilarge\test.c:456:9: note: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
        sprintf(str, "random %s unweighted Ltall n=%zu p=%zu lambda=%g",
        ^~~~~~~
[277/1003] Building C object gsl/CMakeFiles/multilarge_nlinear_test.dir/multilarge_nlinear/test.c.obj
In file included from D:/a/aprg/aprg/gsl/gsl/multilarge_nlinear/test.c:33:
D:/a/aprg/aprg/gsl/gsl/multilarge_nlinear/test_fdf.c:284:3: warning: 'strcpy' is deprecated: This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  strcpy(sname, buf);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:130:1: note: 'strcpy' has been explicitly marked deprecated here
__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
1 warning generated.
[278/1003] Building C object gsl/CMakeFiles/filter_test.dir/filter/test.c.obj
In file included from D:/a/aprg/aprg/gsl/gsl/filter/test.c:64:
D:/a/aprg/aprg/gsl/gsl/filter/test_gaussian.c:44:39: warning: implicit conversion from enumeration type 'const gsl_filter_end_t' to different enumeration type 'gsl_movstat_end_t' [-Wenum-conversion]
      size_t wsize = gsl_movstat_fill(etype, x, i, H, H, window);
                     ~~~~~~~~~~~~~~~~ ^~~~~
In file included from D:/a/aprg/aprg/gsl/gsl/filter/test.c:65:
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:39:39: warning: implicit conversion from enumeration type 'const gsl_filter_end_t' to different enumeration type 'gsl_movstat_end_t' [-Wenum-conversion]
      size_t wsize = gsl_movstat_fill(etype, x, i, H, H, window);
                     ~~~~~~~~~~~~~~~~ ^~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:89:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 1000, 1, GSL_MOVSTAT_END_PADZERO, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:90:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 1000, 3, GSL_MOVSTAT_END_PADZERO, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:91:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 1000, 5, GSL_MOVSTAT_END_PADZERO, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:92:47: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 100, 301, GSL_MOVSTAT_END_PADZERO, rng_p);
  ~~~~~~~~~~~~~~~~                            ^~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:93:47: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 5000, 17, GSL_MOVSTAT_END_PADZERO, rng_p);
  ~~~~~~~~~~~~~~~~                            ^~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:94:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 5000, 9, GSL_MOVSTAT_END_PADZERO, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:95:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 50, 901, GSL_MOVSTAT_END_PADZERO, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:96:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 50, 201, GSL_MOVSTAT_END_PADZERO, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:98:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 1000, 1, GSL_MOVSTAT_END_PADVALUE, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:99:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 1000, 3, GSL_MOVSTAT_END_PADVALUE, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:100:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 1000, 5, GSL_MOVSTAT_END_PADVALUE, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:101:47: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 100, 301, GSL_MOVSTAT_END_PADVALUE, rng_p);
  ~~~~~~~~~~~~~~~~                            ^~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:102:47: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 5000, 17, GSL_MOVSTAT_END_PADVALUE, rng_p);
  ~~~~~~~~~~~~~~~~                            ^~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:103:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 5000, 9, GSL_MOVSTAT_END_PADVALUE, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:104:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 50, 901, GSL_MOVSTAT_END_PADVALUE, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:105:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 50, 201, GSL_MOVSTAT_END_PADVALUE, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:107:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 1000, 1, GSL_MOVSTAT_END_TRUNCATE, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:108:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 1000, 3, GSL_MOVSTAT_END_TRUNCATE, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:109:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 1000, 5, GSL_MOVSTAT_END_TRUNCATE, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:110:47: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 100, 301, GSL_MOVSTAT_END_TRUNCATE, rng_p);
  ~~~~~~~~~~~~~~~~                            ^~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:111:47: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 5000, 17, GSL_MOVSTAT_END_TRUNCATE, rng_p);
  ~~~~~~~~~~~~~~~~                            ^~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:112:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 5000, 9, GSL_MOVSTAT_END_TRUNCATE, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:113:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 50, 901, GSL_MOVSTAT_END_TRUNCATE, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~~
D:/a/aprg/aprg/gsl/gsl/filter/test_median.c:114:46: warning: implicit conversion from enumeration type 'gsl_movstat_end_t' to different enumeration type 'gsl_filter_end_t' [-Wenum-conversion]
  test_median_proc(GSL_DBL_EPSILON, 50, 201, GSL_MOVSTAT_END_TRUNCATE, rng_p);
  ~~~~~~~~~~~~~~~~                           ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from D:/a/aprg/aprg/gsl/gsl/filter/test.c:66:
D:/a/aprg/aprg/gsl/gsl/filter/test_rmedian.c:39:39: warning: implicit conversion from enumeration type 'const gsl_filter_end_t' to different enumeration type 'gsl_movstat_end_t' [-Wenum-conversion]
      size_t wsize = gsl_movstat_fill(endtype, x, i, H, H, window);
                     ~~~~~~~~~~~~~~~~ ^~~~~~~
27 warnings generated.
[279/1003] Building C object gsl/CMakeFiles/movstat_test.dir/movstat/test.c.obj
D:\a\aprg\aprg\gsl\gsl\movstat\test.c:70:33: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      double ti = (double) i / (n - 1.0);
                                ^
[280/1003] Building C object gsl/CMakeFiles/rstat_test.dir/rstat/test.c.obj
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:53:10: warning: variable 'mean' is not initialized [cppcoreguidelines-init-variables]
  double mean;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:53:14: note: FIX-IT applied suggested code changes
  double mean;
             ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:54:10: warning: variable 'var' is not initialized [cppcoreguidelines-init-variables]
  double var;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:54:13: note: FIX-IT applied suggested code changes
  double var;
            ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:55:10: warning: variable 'sd' is not initialized [cppcoreguidelines-init-variables]
  double sd;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:55:12: note: FIX-IT applied suggested code changes
  double sd;
           ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:56:10: warning: variable 'sd_mean' is not initialized [cppcoreguidelines-init-variables]
  double sd_mean;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:56:17: note: FIX-IT applied suggested code changes
  double sd_mean;
                ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:57:10: warning: variable 'rms' is not initialized [cppcoreguidelines-init-variables]
  double rms;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:57:13: note: FIX-IT applied suggested code changes
  double rms;
            ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:58:10: warning: variable 'skew' is not initialized [cppcoreguidelines-init-variables]
  double skew;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:58:14: note: FIX-IT applied suggested code changes
  double skew;
             ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:59:10: warning: variable 'kurtosis' is not initialized [cppcoreguidelines-init-variables]
  double kurtosis;
         ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:59:18: note: FIX-IT applied suggested code changes
  double kurtosis;
                 ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:60:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:60:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:61:10: warning: variable 'num' is not initialized [cppcoreguidelines-init-variables]
  size_t num;
         ^
             = 0
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:61:13: note: FIX-IT applied suggested code changes
  size_t num;
            ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:69:38: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  expected_rms = sqrt(expected_rms / n);
                                     ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:82:16: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  gsl_test_int(num, n, "%s n n=%zu", desc, n);
               ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:82:21: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  gsl_test_int(num, n, "%s n n=%zu", desc, n);
                    ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:107:14: warning: variable 'expected_median' is not initialized [cppcoreguidelines-init-variables]
      double expected_median;
             ^
                             = NAN
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:107:29: note: FIX-IT applied suggested code changes
      double expected_median;
                            ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:108:14: warning: variable 'median' is not initialized [cppcoreguidelines-init-variables]
      double median;
             ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:108:20: note: FIX-IT applied suggested code changes
      double median;
                   ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:110:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
      memcpy(data_copy, data, n * sizeof(double));
      ^~~~~~
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:110:7: note: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11
      memcpy(data_copy, data, n * sizeof(double));
      ^~~~~~
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:123:16: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  gsl_test_int(num, 0, "n n=%zu" , n);
               ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:133:10: warning: Value stored to 'result' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double result = NAN;
         ^~~~~~
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:133:10: note: Value stored to 'result' during its initialization is never read
  double result = NAN;
         ^~~~~~
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:164:12: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    size_t i;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:164:13: note: FIX-IT applied suggested code changes
    size_t i;
            ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:165:12: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
    size_t j;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:165:13: note: FIX-IT applied suggested code changes
    size_t j;
            ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:175:13: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
            sprintf(buf, "test1 j=%zu", j);
            ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:175:13: note: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
            sprintf(buf, "test1 j=%zu", j);
            ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:224:12: warning: Value stored to 'p' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double p = NAN;
           ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:224:12: note: Value stored to 'p' during its initialization is never read
    double p = NAN;
           ^
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:233:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
    memcpy(sorted_data, data, n * sizeof(double));
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:233:5: note: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11
    memcpy(sorted_data, data, n * sizeof(double));
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:237:5: warning: Variable 'p' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
    for (p = 0.1; p <= 0.9; p += 0.1)
    ^             ~         ~
D:\a\aprg\aprg\gsl\gsl\rstat\test.c:237:5: note: Variable 'p' with floating point type 'double' should not be used as a loop counter
    for (p = 0.1; p <= 0.9; p += 0.1)
    ^             ~         ~
[281/1003] Building C object gsl/CMakeFiles/statistics_test.dir/statistics/test.c.obj
D:\a\aprg\aprg\gsl\gsl\statistics\test.c:107:10: warning: variable 's1' is not initialized [cppcoreguidelines-init-variables]
  size_t s1;
         ^
            = 0
D:\a\aprg\aprg\gsl\gsl\statistics\test.c:107:12: note: FIX-IT applied suggested code changes
  size_t s1;
           ^
D:\a\aprg\aprg\gsl\gsl\statistics\test.c:108:10: warning: variable 's2' is not initialized [cppcoreguidelines-init-variables]
  size_t s2;
         ^
            = 0
D:\a\aprg\aprg\gsl\gsl\statistics\test.c:108:12: note: FIX-IT applied suggested code changes
  size_t s2;
           ^
[282/1003] Building C object gsl/CMakeFiles/statistics_test.dir/statistics/test_nist.c.obj
[283/1003] Building C object gsl/CMakeFiles/statistics_test.dir/statistics/test_robust.c.obj
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:53:10: warning: variable 'median' is not initialized [cppcoreguidelines-init-variables]
  double median;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:53:16: note: FIX-IT applied suggested code changes
  double median;
               ^
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:54:10: warning: variable 'mad' is not initialized [cppcoreguidelines-init-variables]
  double mad;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:54:13: note: FIX-IT applied suggested code changes
  double mad;
            ^
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:82:10: warning: Value stored to 'Sn' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double Sn = NAN;
         ^~
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:82:10: note: Value stored to 'Sn' during its initialization is never read
  double Sn = NAN;
         ^~
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:83:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:83:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:84:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:84:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:115:10: warning: Value stored to 'Qn' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double Qn = NAN;
         ^~
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:115:10: note: Value stored to 'Qn' during its initialization is never read
  double Qn = NAN;
         ^~
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:117:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:117:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:118:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:118:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:145:10: warning: variable 'median1' is not initialized [cppcoreguidelines-init-variables]
  double median1;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:145:17: note: FIX-IT applied suggested code changes
  double median1;
                ^
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:146:10: warning: variable 'median2' is not initialized [cppcoreguidelines-init-variables]
  double median2;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:146:17: note: FIX-IT applied suggested code changes
  double median2;
                ^
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:167:10: warning: variable 'mad1' is not initialized [cppcoreguidelines-init-variables]
  double mad1;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:167:14: note: FIX-IT applied suggested code changes
  double mad1;
             ^
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:168:10: warning: variable 'mad2' is not initialized [cppcoreguidelines-init-variables]
  double mad2;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:168:14: note: FIX-IT applied suggested code changes
  double mad2;
             ^
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:190:10: warning: variable 'Sn1' is not initialized [cppcoreguidelines-init-variables]
  double Sn1;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:190:13: note: FIX-IT applied suggested code changes
  double Sn1;
            ^
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:191:10: warning: variable 'Sn2' is not initialized [cppcoreguidelines-init-variables]
  double Sn2;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:191:13: note: FIX-IT applied suggested code changes
  double Sn2;
            ^
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:216:10: warning: variable 'Qn1' is not initialized [cppcoreguidelines-init-variables]
  double Qn1;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:216:13: note: FIX-IT applied suggested code changes
  double Qn1;
            ^
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:217:10: warning: variable 'Qn2' is not initialized [cppcoreguidelines-init-variables]
  double Qn2;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\statistics\test_robust.c:217:13: note: FIX-IT applied suggested code changes
  double Qn2;
            ^
[284/1003] Building C object gsl/CMakeFiles/siman_test.dir/siman/test.c.obj
D:\a\aprg\aprg\gsl\gsl\siman\test.c:74:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
  memcpy(xp, &new_x, sizeof(new_x));
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\siman\test.c:74:3: note: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11
  memcpy(xp, &new_x, sizeof(new_x));
  ^~~~~~
[285/1003] Building C object gsl/CMakeFiles/sum_test.dir/sum/test.c.obj
D:\a\aprg\aprg\gsl\gsl\sum\test.c:61:12: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
    double x;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\sum\test.c:23:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\sum\test.c:61:13: note: FIX-IT applied suggested code changes
    double x;
            ^
D:\a\aprg\aprg\gsl\gsl\sum\test.c:62:12: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
    double y;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\sum\test.c:62:13: note: FIX-IT applied suggested code changes
    double y;
            ^
D:\a\aprg\aprg\gsl\gsl\sum\test.c:81:12: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
    double x;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\sum\test.c:81:13: note: FIX-IT applied suggested code changes
    double x;
            ^
D:\a\aprg\aprg\gsl\gsl\sum\test.c:82:12: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
    double y;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\sum\test.c:82:13: note: FIX-IT applied suggested code changes
    double y;
            ^
D:\a\aprg\aprg\gsl\gsl\sum\test.c:101:12: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
    double x;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\sum\test.c:101:13: note: FIX-IT applied suggested code changes
    double x;
            ^
D:\a\aprg\aprg\gsl\gsl\sum\test.c:102:12: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
    double y;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\sum\test.c:102:13: note: FIX-IT applied suggested code changes
    double y;
            ^
D:\a\aprg\aprg\gsl\gsl\sum\test.c:120:12: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
    double x;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\sum\test.c:120:13: note: FIX-IT applied suggested code changes
    double x;
            ^
D:\a\aprg\aprg\gsl\gsl\sum\test.c:121:12: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
    double y;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\sum\test.c:121:13: note: FIX-IT applied suggested code changes
    double y;
            ^
D:\a\aprg\aprg\gsl\gsl\sum\test.c:223:10: warning: variable 'sum_accel' is not initialized [cppcoreguidelines-init-variables]
  double sum_accel;
         ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\sum\test.c:223:19: note: FIX-IT applied suggested code changes
  double sum_accel;
                  ^
D:\a\aprg\aprg\gsl\gsl\sum\test.c:224:10: warning: variable 'prec' is not initialized [cppcoreguidelines-init-variables]
  double prec;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\sum\test.c:224:14: note: FIX-IT applied suggested code changes
  double prec;
             ^
D:\a\aprg\aprg\gsl\gsl\sum\test.c:240:10: warning: variable 'sum_accel' is not initialized [cppcoreguidelines-init-variables]
  double sum_accel;
         ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\sum\test.c:240:19: note: FIX-IT applied suggested code changes
  double sum_accel;
                  ^
D:\a\aprg\aprg\gsl\gsl\sum\test.c:241:10: warning: variable 'err_est' is not initialized [cppcoreguidelines-init-variables]
  double err_est;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\sum\test.c:241:17: note: FIX-IT applied suggested code changes
  double err_est;
                ^
D:\a\aprg\aprg\gsl\gsl\sum\test.c:242:10: warning: variable 'sd_actual' is not initialized [cppcoreguidelines-init-variables]
  double sd_actual;
         ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\sum\test.c:242:19: note: FIX-IT applied suggested code changes
  double sd_actual;
                  ^
D:\a\aprg\aprg\gsl\gsl\sum\test.c:243:10: warning: variable 'sd_est' is not initialized [cppcoreguidelines-init-variables]
  double sd_est;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\sum\test.c:243:16: note: FIX-IT applied suggested code changes
  double sd_est;
               ^
[286/1003] Building C object gsl/CMakeFiles/integration_test.dir/integration/test.c.obj
D:\a\aprg\aprg\gsl\gsl\integration\test.c:99:3: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
  sprintf(buf, "%s a=%g b=%g alpha=%g beta=%g", desc, a, b, alpha, beta);
  ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:99:3: note: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11
  sprintf(buf, "%s a=%g b=%g alpha=%g beta=%g", desc, a, b, alpha, beta);
  ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:775:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i; struct counter_params p;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:775:10: note: FIX-IT applied suggested code changes
    int i; struct counter_params p;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:853:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i; struct counter_params p;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:853:10: note: FIX-IT applied suggested code changes
    int i; struct counter_params p;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1019:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i; struct counter_params p;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1019:10: note: FIX-IT applied suggested code changes
    int i; struct counter_params p;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1102:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i; struct counter_params p;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1102:10: note: FIX-IT applied suggested code changes
    int i; struct counter_params p;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1181:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i; struct counter_params p;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1181:10: note: FIX-IT applied suggested code changes
    int i; struct counter_params p;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1286:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i; struct counter_params p;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1286:10: note: FIX-IT applied suggested code changes
    int i; struct counter_params p;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1383:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i; struct counter_params p;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1383:10: note: FIX-IT applied suggested code changes
    int i; struct counter_params p;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1482:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i; struct counter_params p;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1482:10: note: FIX-IT applied suggested code changes
    int i; struct counter_params p;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1565:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i; struct counter_params p;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1565:10: note: FIX-IT applied suggested code changes
    int i; struct counter_params p;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1642:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i; struct counter_params p;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1642:10: note: FIX-IT applied suggested code changes
    int i; struct counter_params p;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1720:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i; struct counter_params p;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1720:10: note: FIX-IT applied suggested code changes
    int i; struct counter_params p;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1867:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i; struct counter_params p;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1867:10: note: FIX-IT applied suggested code changes
    int i; struct counter_params p;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1960:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i; struct counter_params p;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:1960:10: note: FIX-IT applied suggested code changes
    int i; struct counter_params p;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2049:5: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
    status = gsl_integration_qaws (&fc, 0.0, 1.0, t, 0.0, 1.0e-7, w->limit,
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2049:5: note: Value stored to 'status' is never read
    status = gsl_integration_qaws (&fc, 0.0, 1.0, t, 0.0, 1.0e-7, w->limit,
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2062:5: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
    status = gsl_integration_qaws (&fc, 0.0, 1.0, t, 0.0, 1.0e-7, w->limit,
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2062:5: note: Value stored to 'status' is never read
    status = gsl_integration_qaws (&fc, 0.0, 1.0, t, 0.0, 1.0e-7, w->limit,
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2075:5: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
    status = gsl_integration_qaws (&fc, 0.0, 1.0, t, 0.0, 1.0e-7, w->limit,
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2075:5: note: Value stored to 'status' is never read
    status = gsl_integration_qaws (&fc, 0.0, 1.0, t, 0.0, 1.0e-7, w->limit,
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2088:5: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
    status = gsl_integration_qaws (&fc, 0.0, 1.0, t, 0.0, 1.0e-7, w->limit,
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2088:5: note: Value stored to 'status' is never read
    status = gsl_integration_qaws (&fc, 0.0, 1.0, t, 0.0, 1.0e-7, w->limit,
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2107:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i; struct counter_params p;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2107:10: note: FIX-IT applied suggested code changes
    int i; struct counter_params p;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2220:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i; struct counter_params p;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2220:10: note: FIX-IT applied suggested code changes
    int i; struct counter_params p;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2299:12: warning: Value stored to 'exp_result' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double exp_result = NAN;
           ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2299:12: note: Value stored to 'exp_result' during its initialization is never read
    double exp_result = NAN;
           ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2370:16: warning: variable 'expected' is not initialized [cppcoreguidelines-init-variables]
        double expected;
               ^
                        = NAN
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2370:24: note: FIX-IT applied suggested code changes
        double expected;
                       ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2371:16: warning: variable 'result' is not initialized [cppcoreguidelines-init-variables]
        double result;
               ^
                      = NAN
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2371:22: note: FIX-IT applied suggested code changes
        double result;
                     ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2414:12: warning: variable 'result' is not initialized [cppcoreguidelines-init-variables]
    double result;
           ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2414:18: note: FIX-IT applied suggested code changes
    double result;
                 ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2415:12: warning: variable 'abserr' is not initialized [cppcoreguidelines-init-variables]
    double abserr;
           ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2415:18: note: FIX-IT applied suggested code changes
    double abserr;
                 ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2461:9: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
    int n;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2461:10: note: FIX-IT applied suggested code changes
    int n;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2462:9: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    int i;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2462:10: note: FIX-IT applied suggested code changes
    int i;
         ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2463:12: warning: variable 'xi' is not initialized [cppcoreguidelines-init-variables]
    double xi;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2463:14: note: FIX-IT applied suggested code changes
    double xi;
             ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2464:12: warning: variable 'wi' is not initialized [cppcoreguidelines-init-variables]
    double wi;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2464:14: note: FIX-IT applied suggested code changes
    double wi;
             ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2550:12: warning: variable 'result' is not initialized [cppcoreguidelines-init-variables]
    double result;
           ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2550:18: note: FIX-IT applied suggested code changes
    double result;
                 ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2551:12: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
    double x;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2551:13: note: FIX-IT applied suggested code changes
    double x;
            ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2552:12: warning: variable 'w' is not initialized [cppcoreguidelines-init-variables]
    double w;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2552:13: note: FIX-IT applied suggested code changes
    double w;
            ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2599:12: warning: variable 'result' is not initialized [cppcoreguidelines-init-variables]
    double result;
           ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2599:18: note: FIX-IT applied suggested code changes
    double result;
                 ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2600:12: warning: variable 'abserr' is not initialized [cppcoreguidelines-init-variables]
    double abserr;
           ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2600:18: note: FIX-IT applied suggested code changes
    double abserr;
                 ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2626:12: warning: Value stored to 'exact' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double exact = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2626:12: note: Value stored to 'exact' during its initialization is never read
    double exact = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2627:12: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
    double a;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2627:13: note: FIX-IT applied suggested code changes
    double a;
            ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2628:12: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
    double b;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2628:13: note: FIX-IT applied suggested code changes
    double b;
            ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2639:5: warning: Variable 'b' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
    for (b = 1.1; b <= 4.0; b += 0.1)
    ^             ~         ~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2639:5: note: Variable 'b' with floating point type 'double' should not be used as a loop counter
    for (b = 1.1; b <= 4.0; b += 0.1)
    ^             ~         ~
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2711:12: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
    size_t n;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2711:13: note: FIX-IT applied suggested code changes
    size_t n;
            ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2712:12: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
    size_t k;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2712:13: note: FIX-IT applied suggested code changes
    size_t k;
            ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2736:12: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
    size_t n;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2736:13: note: FIX-IT applied suggested code changes
    size_t n;
            ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2737:12: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
    size_t k;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2737:13: note: FIX-IT applied suggested code changes
    size_t k;
            ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2743:12: warning: variable 'alpha' is not initialized [cppcoreguidelines-init-variables]
    double alpha;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2743:17: note: FIX-IT applied suggested code changes
    double alpha;
                ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2744:12: warning: variable 'beta' is not initialized [cppcoreguidelines-init-variables]
    double beta;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2744:16: note: FIX-IT applied suggested code changes
    double beta;
               ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2764:12: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
    size_t n;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2764:13: note: FIX-IT applied suggested code changes
    size_t n;
            ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2765:12: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
    size_t k;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2765:13: note: FIX-IT applied suggested code changes
    size_t k;
            ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2789:12: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
    size_t n;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2789:13: note: FIX-IT applied suggested code changes
    size_t n;
            ^
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2790:12: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
    size_t k;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\integration\test.c:2790:13: note: FIX-IT applied suggested code changes
    size_t k;
            ^
[287/1003] Building C object gsl/CMakeFiles/integration_test.dir/integration/tests.c.obj
D:\a\aprg\aprg\gsl\gsl\integration\tests.c:325:10: warning: variable 't2' is not initialized [cppcoreguidelines-init-variables]
  double t2;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\integration\tests.c:325:12: note: FIX-IT applied suggested code changes
  double t2;
           ^
[288/1003] Building C object gsl/CMakeFiles/interpolation_test.dir/interpolation/test.c.obj
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:84:12: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    size_t i;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:84:13: note: FIX-IT applied suggested code changes
    size_t i;
            ^
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:85:12: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
    size_t j;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:85:13: note: FIX-IT applied suggested code changes
    size_t j;
            ^
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:156:7: warning: variable 's1' is not initialized [cppcoreguidelines-init-variables]
  int s1;
      ^
         = 0
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:156:9: note: FIX-IT applied suggested code changes
  int s1;
        ^
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:157:7: warning: variable 's2' is not initialized [cppcoreguidelines-init-variables]
  int s2;
      ^
         = 0
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:157:9: note: FIX-IT applied suggested code changes
  int s2;
        ^
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:158:7: warning: variable 's3' is not initialized [cppcoreguidelines-init-variables]
  int s3;
      ^
         = 0
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:158:9: note: FIX-IT applied suggested code changes
  int s3;
        ^
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:166:17: warning: narrowing conversion from 'unsigned int' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  gsl_test_int (min_size, T->min_size, "gsl_interp_type_min_size on %s", gsl_interp_name(interp));
                ^
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:166:27: warning: narrowing conversion from 'unsigned int' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  gsl_test_int (min_size, T->min_size, "gsl_interp_type_min_size on %s", gsl_interp_name(interp));
                          ^
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:176:14: warning: variable 'diff_y' is not initialized [cppcoreguidelines-init-variables]
      double diff_y;
             ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:176:20: note: FIX-IT applied suggested code changes
      double diff_y;
                   ^
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:177:14: warning: variable 'diff_deriv' is not initialized [cppcoreguidelines-init-variables]
      double diff_deriv;
             ^
                        = NAN
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:177:24: note: FIX-IT applied suggested code changes
      double diff_deriv;
                       ^
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:178:14: warning: variable 'diff_integ' is not initialized [cppcoreguidelines-init-variables]
      double diff_integ;
             ^
                        = NAN
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:178:24: note: FIX-IT applied suggested code changes
      double diff_integ;
                       ^
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:1225:3: warning: Value stored to 'argc' is never read [clang-analyzer-deadcode.DeadStores]
  argc = 0;    /* prevent warnings about unused parameters */
  ^      ~
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:1225:3: note: Value stored to 'argc' is never read
  argc = 0;    /* prevent warnings about unused parameters */
  ^      ~
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:1240:3: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
  status += test_interp2d_main();
  ^         ~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\interpolation\test.c:1240:3: note: Value stored to 'status' is never read
  status += test_interp2d_main();
  ^         ~~~~~~~~~~~~~~~~~~~~
[289/1003] Building C object gsl/CMakeFiles/histogram_test.dir/histogram/test.c.obj
[290/1003] Building C object gsl/CMakeFiles/histogram_test.dir/histogram/test1d.c.obj
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:37:18: warning: variable 'h' is not initialized [cppcoreguidelines-init-variables]
  gsl_histogram *h;
                 ^
                   = NULL
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:37:19: note: FIX-IT applied suggested code changes
  gsl_histogram *h;
                  ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:38:18: warning: variable 'h1' is not initialized [cppcoreguidelines-init-variables]
  gsl_histogram *h1;
                 ^
                    = NULL
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:38:20: note: FIX-IT applied suggested code changes
  gsl_histogram *h1;
                   ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:39:18: warning: variable 'hr' is not initialized [cppcoreguidelines-init-variables]
  gsl_histogram *hr;
                 ^
                    = NULL
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:39:20: note: FIX-IT applied suggested code changes
  gsl_histogram *hr;
                   ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:40:18: warning: variable 'g' is not initialized [cppcoreguidelines-init-variables]
  gsl_histogram *g;
                 ^
                   = NULL
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:40:19: note: FIX-IT applied suggested code changes
  gsl_histogram *g;
                  ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:41:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:41:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:42:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:42:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:65:13: warning: Array access (via field 'range') results in a null pointer dereference [clang-analyzer-core.NullDereference]
        if (hr->range[i] != xr[i])
            ^   ~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:50:13: note: Assuming field 'range' is not equal to null
  gsl_test (h->range == 0, "gsl_histogram_alloc returns valid range pointer");
            ^~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:51:13: note: Assuming field 'bin' is not equal to null
  gsl_test (h->bin == 0, "gsl_histogram_alloc returns valid bin pointer");
            ^~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:52:13: note: Assuming field 'n' is equal to N
  gsl_test (h->n != N, "gsl_histogram_alloc returns valid size");
            ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:57:13: note: Assuming field 'range' is equal to null
  gsl_test (hr->range == 0, "gsl_histogram_calloc_range returns valid range pointer");
            ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:58:13: note: Assuming field 'bin' is not equal to null
  gsl_test (hr->bin == 0, "gsl_histogram_calloc_range returns valid bin pointer");
            ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:59:13: note: Assuming field 'n' is equal to NR
  gsl_test (hr->n != NR, "gsl_histogram_calloc_range returns valid size");
            ^~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:63:5: note: Loop condition is true.  Entering loop body
    for (i = 0; i <= NR; i++)
    ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:65:13: note: Array access (via field 'range') results in a null pointer dereference
        if (hr->range[i] != xr[i])
            ^   ~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:119:41: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        if (gsl_histogram_get (h, i) != i) {
                                        ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:128:30: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      h1->range[i] = 100.0 + i;
                             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:232:19: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        if (x0 != i || x1 != i + 1)
                  ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:232:30: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        if (x0 != i || x1 != i + 1)
                             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:289:19: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      h->bin[i] = i + 27;
                  ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:290:19: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      g->bin[i] = (i + 27) * (i + 1);
                  ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:402:12: warning: variable 'i1' is not initialized [cppcoreguidelines-init-variables]
    size_t i1;
           ^
              = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:402:14: note: FIX-IT applied suggested code changes
    size_t i1;
             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:403:12: warning: variable 'i2' is not initialized [cppcoreguidelines-init-variables]
    size_t i2;
           ^
              = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:403:14: note: FIX-IT applied suggested code changes
    size_t i2;
             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:404:12: warning: variable 'i3' is not initialized [cppcoreguidelines-init-variables]
    size_t i3;
           ^
              = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:404:14: note: FIX-IT applied suggested code changes
    size_t i3;
             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:405:12: warning: variable 'i4' is not initialized [cppcoreguidelines-init-variables]
    size_t i4;
           ^
              = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:405:14: note: FIX-IT applied suggested code changes
    size_t i4;
             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:406:12: warning: Value stored to 'expected' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double expected = NAN;
           ^~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:406:12: note: Value stored to 'expected' during its initialization is never read
    double expected = NAN;
           ^~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:407:9: warning: Value stored to 'status' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    int status = gsl_histogram_find (h, 0.0, &i1);
        ^~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:407:9: note: Value stored to 'status' during its initialization is never read
    int status = gsl_histogram_find (h, 0.0, &i1);
        ^~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:408:5: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
    status = gsl_histogram_find (h, 0.1, &i2);
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:408:5: note: Value stored to 'status' is never read
    status = gsl_histogram_find (h, 0.1, &i2);
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:409:5: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
    status = gsl_histogram_find (h, 0.2, &i3);
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:409:5: note: Value stored to 'status' is never read
    status = gsl_histogram_find (h, 0.2, &i3);
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:446:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:452:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:478:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d.c:484:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/histogram/test1d.c:446:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/histogram/test1d.c:452:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/histogram/test1d.c:478:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/histogram/test1d.c:484:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
4 warnings generated.
[291/1003] Building C object gsl/CMakeFiles/histogram_test.dir/histogram/test2d.c.obj
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:46:20: warning: variable 'h' is not initialized [cppcoreguidelines-init-variables]
  gsl_histogram2d *h;
                   ^
                     = NULL
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:46:21: note: FIX-IT applied suggested code changes
  gsl_histogram2d *h;
                    ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:47:20: warning: variable 'h1' is not initialized [cppcoreguidelines-init-variables]
  gsl_histogram2d *h1;
                   ^
                      = NULL
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:47:22: note: FIX-IT applied suggested code changes
  gsl_histogram2d *h1;
                     ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:48:20: warning: variable 'g' is not initialized [cppcoreguidelines-init-variables]
  gsl_histogram2d *g;
                   ^
                     = NULL
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:48:21: note: FIX-IT applied suggested code changes
  gsl_histogram2d *g;
                    ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:49:20: warning: variable 'hr' is not initialized [cppcoreguidelines-init-variables]
  gsl_histogram2d *hr;
                   ^
                      = NULL
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:49:22: note: FIX-IT applied suggested code changes
  gsl_histogram2d *hr;
                     ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:50:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:50:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:51:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:51:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:52:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:52:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:85:13: warning: Array access (via field 'xrange') results in a null pointer dereference [clang-analyzer-core.NullDereference]
        if (hr->xrange[i] != xr[i])
            ^   ~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:60:13: note: Assuming field 'xrange' is not equal to null
  gsl_test (h->xrange == 0,
            ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:62:13: note: Assuming field 'yrange' is not equal to null
  gsl_test (h->yrange == 0,
            ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:64:13: note: Assuming field 'bin' is not equal to null
  gsl_test (h->bin == 0, "gsl_histogram2d_calloc returns valid bin pointer");
            ^~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:66:13: note: Assuming field 'nx' is equal to M
  gsl_test (h->nx != M, "gsl_histogram2d_calloc returns valid nx");
            ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:67:13: note: Assuming field 'ny' is equal to N
  gsl_test (h->ny != N, "gsl_histogram2d_calloc returns valid ny");
            ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:71:13: note: Assuming field 'xrange' is equal to null
  gsl_test (hr->xrange == 0,
            ^~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:73:13: note: Assuming field 'yrange' is not equal to null
  gsl_test (hr->yrange == 0,
            ^~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:75:13: note: Assuming field 'bin' is not equal to null
  gsl_test (hr->bin == 0,
            ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:78:13: note: Assuming field 'nx' is equal to MR
  gsl_test (hr->nx != MR, "gsl_histogram2d_calloc_range returns valid nx");
            ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:79:13: note: Assuming field 'ny' is equal to NR
  gsl_test (hr->ny != NR, "gsl_histogram2d_calloc_range returns valid ny");
            ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:83:5: note: Loop condition is true.  Entering loop body
    for (i = 0; i <= MR; i++)
    ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:85:13: note: Array access (via field 'xrange') results in a null pointer dereference
        if (hr->xrange[i] != xr[i])
            ^   ~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:193:31: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      h1->xrange[i] = 100.0 + i;
                              ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:198:31: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      h1->yrange[i] = 900.0 + i * i;
                              ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:340:19: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        if (x0 != i || x1 != i + 1)
                  ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:340:30: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        if (x0 != i || x1 != i + 1)
                             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:358:19: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        if (y0 != i || y1 != i + 1)
                  ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:358:30: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        if (y0 != i || y1 != i + 1)
                             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:431:12: warning: variable 'imax' is not initialized [cppcoreguidelines-init-variables]
    size_t imax;
           ^
                = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:431:16: note: FIX-IT applied suggested code changes
    size_t imax;
               ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:432:12: warning: variable 'jmax' is not initialized [cppcoreguidelines-init-variables]
    size_t jmax;
           ^
                = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:432:16: note: FIX-IT applied suggested code changes
    size_t jmax;
               ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:440:12: warning: variable 'imin' is not initialized [cppcoreguidelines-init-variables]
    size_t imin;
           ^
                = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:440:16: note: FIX-IT applied suggested code changes
    size_t imin;
               ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:441:12: warning: variable 'jmin' is not initialized [cppcoreguidelines-init-variables]
    size_t jmin;
           ^
                = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:441:16: note: FIX-IT applied suggested code changes
    size_t jmin;
               ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:449:19: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      h->bin[i] = i + 27;
                  ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:450:19: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      g->bin[i] = (i + 27) * (i + 1);
                  ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:463:12: warning: Value stored to 'xmean' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double xmean = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:463:12: note: Value stored to 'xmean' during its initialization is never read
    double xmean = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:464:12: warning: Value stored to 'ymean' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double ymean = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:464:12: note: Value stored to 'ymean' during its initialization is never read
    double ymean = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:638:12: warning: variable 'i1' is not initialized [cppcoreguidelines-init-variables]
    size_t i1;
           ^
              = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:638:14: note: FIX-IT applied suggested code changes
    size_t i1;
             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:639:12: warning: variable 'i2' is not initialized [cppcoreguidelines-init-variables]
    size_t i2;
           ^
              = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:639:14: note: FIX-IT applied suggested code changes
    size_t i2;
             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:640:12: warning: variable 'i3' is not initialized [cppcoreguidelines-init-variables]
    size_t i3;
           ^
              = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:640:14: note: FIX-IT applied suggested code changes
    size_t i3;
             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:641:12: warning: variable 'i4' is not initialized [cppcoreguidelines-init-variables]
    size_t i4;
           ^
              = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:641:14: note: FIX-IT applied suggested code changes
    size_t i4;
             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:642:12: warning: variable 'j1' is not initialized [cppcoreguidelines-init-variables]
    size_t j1;
           ^
              = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:642:14: note: FIX-IT applied suggested code changes
    size_t j1;
             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:643:12: warning: variable 'j2' is not initialized [cppcoreguidelines-init-variables]
    size_t j2;
           ^
              = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:643:14: note: FIX-IT applied suggested code changes
    size_t j2;
             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:644:12: warning: variable 'j3' is not initialized [cppcoreguidelines-init-variables]
    size_t j3;
           ^
              = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:644:14: note: FIX-IT applied suggested code changes
    size_t j3;
             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:645:12: warning: variable 'j4' is not initialized [cppcoreguidelines-init-variables]
    size_t j4;
           ^
              = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:645:14: note: FIX-IT applied suggested code changes
    size_t j4;
             ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:646:12: warning: Value stored to 'expected' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double expected = NAN;
           ^~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:646:12: note: Value stored to 'expected' during its initialization is never read
    double expected = NAN;
           ^~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:648:5: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
    status = gsl_histogram2d_find (h, 0.0, 3.01, &i1, &j1);
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:648:5: note: Value stored to 'status' is never read
    status = gsl_histogram2d_find (h, 0.0, 3.01, &i1, &j1);
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:649:5: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
    status = gsl_histogram2d_find (h, 0.1, 2.01, &i2, &j2);
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:649:5: note: Value stored to 'status' is never read
    status = gsl_histogram2d_find (h, 0.1, 2.01, &i2, &j2);
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:650:5: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
    status = gsl_histogram2d_find (h, 0.2, 1.01, &i3, &j3);
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:650:5: note: Value stored to 'status' is never read
    status = gsl_histogram2d_find (h, 0.2, 1.01, &i3, &j3);
    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:688:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:694:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:737:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d.c:743:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/histogram/test2d.c:688:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "w");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/histogram/test2d.c:694:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.txt", "r");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/histogram/test2d.c:737:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "wb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/histogram/test2d.c:743:15: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    FILE *f = fopen ("test.dat", "rb");
              ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
4 warnings generated.
[292/1003] Building C object gsl/CMakeFiles/histogram_test.dir/histogram/test1d_resample.c.obj
D:\a\aprg\aprg\gsl\gsl\histogram\test1d_resample.c:63:16: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
        double x;
               ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\histogram\test1d_resample.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d_resample.c:63:17: note: FIX-IT applied suggested code changes
        double x;
                ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d_resample.c:64:16: warning: variable 'xmax' is not initialized [cppcoreguidelines-init-variables]
        double xmax;
               ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\histogram\test1d_resample.c:64:20: note: FIX-IT applied suggested code changes
        double xmax;
                   ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d_resample.c:66:16: warning: Value stored to 'ya' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
        double ya = NAN;
               ^~
D:\a\aprg\aprg\gsl\gsl\histogram\test1d_resample.c:66:16: note: Value stored to 'ya' during its initialization is never read
        double ya = NAN;
               ^~
[293/1003] Building C object gsl/CMakeFiles/histogram_test.dir/histogram/test2d_resample.c.obj
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:32:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:32:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:33:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:33:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:48:29: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          double w = 10.0 * i + j;
                            ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:48:33: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          double w = 10.0 * i + j;
                                ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:50:48: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          gsl_histogram2d_accumulate (h, 0.1 * i, 0.1 * i, w);
                                               ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:50:57: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          gsl_histogram2d_accumulate (h, 0.1 * i, 0.1 * i, w);
                                                        ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:67:16: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
        double x;
               ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:67:17: note: FIX-IT applied suggested code changes
        double x;
                ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:68:16: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
        double y;
               ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:68:17: note: FIX-IT applied suggested code changes
        double y;
                ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:69:9: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
        status = gsl_histogram2d_pdf_sample (p, u, v, &x, &y);
        ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:69:9: note: Value stored to 'status' is never read
        status = gsl_histogram2d_pdf_sample (p, u, v, &x, &y);
        ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:70:9: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
        status = gsl_histogram2d_increment (hh, x, y);
        ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:70:9: note: Value stored to 'status' is never read
        status = gsl_histogram2d_increment (hh, x, y);
        ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:79:20: warning: variable 'k1' is not initialized [cppcoreguidelines-init-variables]
            size_t k1;
                   ^
                      = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:79:22: note: FIX-IT applied suggested code changes
            size_t k1;
                     ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:80:20: warning: variable 'k2' is not initialized [cppcoreguidelines-init-variables]
            size_t k2;
                   ^
                      = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:80:22: note: FIX-IT applied suggested code changes
            size_t k2;
                     ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:81:20: warning: Value stored to 'ya' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
            double ya = NAN;
                   ^~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:81:20: note: Value stored to 'ya' during its initialization is never read
            double ya = NAN;
                   ^~
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:82:20: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
            double x;
                   ^
                     = NAN
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:82:21: note: FIX-IT applied suggested code changes
            double x;
                    ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:83:20: warning: variable 'xmax' is not initialized [cppcoreguidelines-init-variables]
            double xmax;
                   ^
                        = NAN
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:83:24: note: FIX-IT applied suggested code changes
            double xmax;
                       ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:84:20: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
            double y;
                   ^
                     = NAN
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:84:21: note: FIX-IT applied suggested code changes
            double y;
                    ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:85:20: warning: variable 'ymax' is not initialized [cppcoreguidelines-init-variables]
            double ymax;
                   ^
                        = NAN
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_resample.c:85:24: note: FIX-IT applied suggested code changes
            double ymax;
                       ^
[294/1003] Building C object gsl/CMakeFiles/histogram_test.dir/histogram/test1d_trap.c.obj
D:\a\aprg\aprg\gsl\gsl\histogram\test1d_trap.c:38:10: warning: variable 'result' is not initialized [cppcoreguidelines-init-variables]
  double result;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\histogram\test1d_trap.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d_trap.c:38:16: note: FIX-IT applied suggested code changes
  double result;
               ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d_trap.c:39:10: warning: variable 'lower' is not initialized [cppcoreguidelines-init-variables]
  double lower;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\histogram\test1d_trap.c:39:15: note: FIX-IT applied suggested code changes
  double lower;
              ^
D:\a\aprg\aprg\gsl\gsl\histogram\test1d_trap.c:40:10: warning: variable 'upper' is not initialized [cppcoreguidelines-init-variables]
  double upper;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\histogram\test1d_trap.c:40:15: note: FIX-IT applied suggested code changes
  double upper;
              ^
[295/1003] Building C object gsl/CMakeFiles/histogram_test.dir/histogram/test2d_trap.c.obj
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_trap.c:39:10: warning: variable 'result' is not initialized [cppcoreguidelines-init-variables]
  double result;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_trap.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_trap.c:39:16: note: FIX-IT applied suggested code changes
  double result;
               ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_trap.c:40:10: warning: variable 'lower' is not initialized [cppcoreguidelines-init-variables]
  double lower;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_trap.c:40:15: note: FIX-IT applied suggested code changes
  double lower;
              ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_trap.c:41:10: warning: variable 'upper' is not initialized [cppcoreguidelines-init-variables]
  double upper;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_trap.c:41:15: note: FIX-IT applied suggested code changes
  double upper;
              ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_trap.c:42:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_trap.c:42:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_trap.c:43:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\histogram\test2d_trap.c:43:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
[296/1003] Building C object gsl/CMakeFiles/ode-initval_test.dir/ode-initval/test.c.obj
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:145:9: warning: narrowing conversion from 'double' to 'int' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    m = n * 1.3;
        ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:498:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
  DBL_MEMCPY (y, ystart, MAXEQ);
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval/odeiv_util.h:1:32: note: expanded from macro 'DBL_MEMCPY'
#define DBL_MEMCPY(dest,src,n) memcpy((dest),(src),(n)*sizeof(double))
                               ^~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:498:3: note: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11
  DBL_MEMCPY (y, ystart, MAXEQ);
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval/odeiv_util.h:1:32: note: expanded from macro 'DBL_MEMCPY'
#define DBL_MEMCPY(dest,src,n) memcpy((dest),(src),(n)*sizeof(double))
                               ^~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:527:10: warning: Value stored to 'h' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double h = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:527:10: note: Value stored to 'h' during its initialization is never read
  double h = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:530:10: warning: Value stored to 'err_target' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double err_target = NAN;
         ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:530:10: note: Value stored to 'err_target' during its initialization is never read
  double err_target = NAN;
         ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:607:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
      memcpy (y_orig, y, sys->dimension * sizeof(double));
      ^~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:607:7: note: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11
      memcpy (y_orig, y, sys->dimension * sizeof(double));
      ^~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:648:7: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]
      gsl_test_abs (y[i], yfin[i], factor * e->count * err_target,
      ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1259:15: note: Assuming field 'type' is not equal to null
  for (i = 0; p[i].type != 0; i++)
              ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1259:3: note: Loop condition is true.  Entering loop body
  for (i = 0; p[i].type != 0; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1259:15: note: Assuming field 'type' is equal to null
  for (i = 0; p[i].type != 0; i++)
              ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1259:3: note: Loop condition is false. Execution continues on line 1264
  for (i = 0; p[i].type != 0; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1264:20: note: Field 'type' is not equal to null
  for (i = 0; p[i].type != 0; i++)
                   ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1264:3: note: Loop condition is true.  Entering loop body
  for (i = 0; p[i].type != 0; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1266:7: note: Calling 'test_evolve_linear'
      test_evolve_linear (p[i].type, p[i].h, 1e-10);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:930:3: note: Calling 'test_evolve_system'
  test_evolve_system (T, &rhs_func_lin, 0.0, 4.0, h, y, yfin, err,
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:603:3: note: Loop condition is false. Execution continues on line 646
  while (t < t1)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:646:15: note: Assuming 'i' is < field 'dimension'
  for (i = 0; i < sys->dimension; i++)
              ^~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:646:3: note: Loop condition is true.  Entering loop body
  for (i = 0; i < sys->dimension; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:646:35: note: The value 1 is assigned to 'i'
  for (i = 0; i < sys->dimension; i++)
                                  ^~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:646:15: note: Assuming 'i' is < field 'dimension'
  for (i = 0; i < sys->dimension; i++)
              ^~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:646:3: note: Loop condition is true.  Entering loop body
  for (i = 0; i < sys->dimension; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:648:7: note: 1st function call argument is an uninitialized value
      gsl_test_abs (y[i], yfin[i], factor * e->count * err_target,
      ^             ~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:648:7: warning: 2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]
      gsl_test_abs (y[i], yfin[i], factor * e->count * err_target,
      ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1259:15: note: Assuming field 'type' is not equal to null
  for (i = 0; p[i].type != 0; i++)
              ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1259:3: note: Loop condition is true.  Entering loop body
  for (i = 0; p[i].type != 0; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1259:15: note: Assuming field 'type' is equal to null
  for (i = 0; p[i].type != 0; i++)
              ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1259:3: note: Loop condition is false. Execution continues on line 1264
  for (i = 0; p[i].type != 0; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1264:20: note: Field 'type' is not equal to null
  for (i = 0; p[i].type != 0; i++)
                   ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1264:3: note: Loop condition is true.  Entering loop body
  for (i = 0; p[i].type != 0; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1266:7: note: Calling 'test_evolve_linear'
      test_evolve_linear (p[i].type, p[i].h, 1e-10);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:930:3: note: Calling 'test_evolve_system'
  test_evolve_system (T, &rhs_func_lin, 0.0, 4.0, h, y, yfin, err,
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:603:3: note: Loop condition is true.  Entering loop body
  while (t < t1)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:610:11: note: Assuming 's' is equal to GSL_SUCCESS
      if (s != GSL_SUCCESS)
          ^~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:610:7: note: Taking false branch
      if (s != GSL_SUCCESS)
      ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:631:11: note: 'steps' is <= 100000
      if (steps > 100000)
          ^~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:631:7: note: Taking false branch
      if (steps > 100000)
      ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:603:3: note: Loop condition is false. Execution continues on line 646
  while (t < t1)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:646:15: note: Assuming 'i' is < field 'dimension'
  for (i = 0; i < sys->dimension; i++)
              ^~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:646:3: note: Loop condition is true.  Entering loop body
  for (i = 0; i < sys->dimension; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:646:35: note: The value 1 is assigned to 'i'
  for (i = 0; i < sys->dimension; i++)
                                  ^~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:646:15: note: Assuming 'i' is < field 'dimension'
  for (i = 0; i < sys->dimension; i++)
              ^~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:646:3: note: Loop condition is true.  Entering loop body
  for (i = 0; i < sys->dimension; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:648:7: note: 2nd function call argument is an uninitialized value
      gsl_test_abs (y[i], yfin[i], factor * e->count * err_target,
      ^                   ~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:737:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:737:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:738:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:738:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:739:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:739:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:848:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:848:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:849:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:849:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:850:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:850:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:915:4: warning: Access to field 'name' results in a dereference of a null pointer [clang-analyzer-core.NullDereference]
                        T[i]->name, T[j]->name);
                        ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1259:15: note: Assuming field 'type' is equal to null
  for (i = 0; p[i].type != 0; i++)
              ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1259:3: note: Loop condition is false. Execution continues on line 1264
  for (i = 0; p[i].type != 0; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1264:3: note: Loop condition is false. Execution continues on line 1276
  for (i = 0; p[i].type != 0; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1276:3: note: Value assigned to 'gsl_odeiv_step_rk2simp'
  test_compare_vanderpol();
  ^~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1277:3: note: Calling 'test_compare_oregonator'
  test_compare_oregonator();
  ^~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:862:3: note: Assigning value
  steppers[0] = gsl_odeiv_step_rk2simp;
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:870:3: note: Loop condition is true.  Entering loop body
  for (i = 0; i < ns; i++) 
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:870:3: note: Loop condition is true.  Entering loop body
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:870:3: note: Loop condition is false. Execution continues on line 879
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:880:10: note: Assuming pointer value is null
  while (*T != 0)
         ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:880:3: note: Loop condition is false. Execution continues on line 897
  while (*T != 0)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:897:7: note: 'status' is equal to GSL_SUCCESS
  if (status != GSL_SUCCESS)
      ^~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:897:3: note: Taking false branch
  if (status != GSL_SUCCESS)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:906:8: note: The value 0 is assigned to 'i'
  for (i = 0; i < ns; i++) {
       ^~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:906:3: note: Loop condition is true.  Entering loop body
  for (i = 0; i < ns; i++) {
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:907:5: note: Loop condition is true.  Entering loop body
    for (j = i+1; j < ns; j++) {
    ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:908:7: note: Loop condition is true.  Entering loop body
      for (k = 0; k < sd; k++)
      ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:913:6: note: Assuming the condition is false
                        ( GSL_MAX(err_target[i], err_target[j]) ),
                          ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_minmax.h:39:23: note: expanded from macro 'GSL_MAX'
#define GSL_MAX(a,b) ((a) > (b) ? (a) : (b))
                      ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:913:6: note: '?' condition is false
                        ( GSL_MAX(err_target[i], err_target[j]) ),
                          ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_minmax.h:39:23: note: expanded from macro 'GSL_MAX'
#define GSL_MAX(a,b) ((a) > (b) ? (a) : (b))
                      ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:915:4: note: Access to field 'name' results in a dereference of a null pointer
                        T[i]->name, T[j]->name);
                        ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:915:16: warning: Access to field 'name' results in a dereference of a null pointer [clang-analyzer-core.NullDereference]
                        T[i]->name, T[j]->name);
                                    ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1259:15: note: Assuming field 'type' is equal to null
  for (i = 0; p[i].type != 0; i++)
              ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1259:3: note: Loop condition is false. Execution continues on line 1264
  for (i = 0; p[i].type != 0; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1264:3: note: Loop condition is false. Execution continues on line 1276
  for (i = 0; p[i].type != 0; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1276:3: note: Value assigned to 'gsl_odeiv_step_bsimp'
  test_compare_vanderpol();
  ^~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:1277:3: note: Calling 'test_compare_oregonator'
  test_compare_oregonator();
  ^~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:864:3: note: Assigning value
  steppers[1] = gsl_odeiv_step_bsimp;
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:870:3: note: Loop condition is true.  Entering loop body
  for (i = 0; i < ns; i++) 
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:870:3: note: Loop condition is true.  Entering loop body
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:870:3: note: Loop condition is false. Execution continues on line 879
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:880:10: note: Assuming the condition is true
  while (*T != 0)
         ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:880:3: note: Loop condition is true.  Entering loop body
  while (*T != 0)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:887:6: note: Assuming 's' is equal to GSL_SUCCESS
        if (s != GSL_SUCCESS)
            ^~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:887:2: note: Taking false branch
        if (s != GSL_SUCCESS)
        ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:880:10: note: Assuming pointer value is null
  while (*T != 0)
         ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:880:3: note: Loop condition is false. Execution continues on line 897
  while (*T != 0)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:897:7: note: 'status' is equal to GSL_SUCCESS
  if (status != GSL_SUCCESS)
      ^~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:897:3: note: Taking false branch
  if (status != GSL_SUCCESS)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:906:3: note: Loop condition is true.  Entering loop body
  for (i = 0; i < ns; i++) {
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:907:10: note: The value 1 is assigned to 'j'
    for (j = i+1; j < ns; j++) {
         ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:907:5: note: Loop condition is true.  Entering loop body
    for (j = i+1; j < ns; j++) {
    ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:908:7: note: Loop condition is true.  Entering loop body
      for (k = 0; k < sd; k++)
      ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:913:6: note: Assuming the condition is false
                        ( GSL_MAX(err_target[i], err_target[j]) ),
                          ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_minmax.h:39:23: note: expanded from macro 'GSL_MAX'
#define GSL_MAX(a,b) ((a) > (b) ? (a) : (b))
                      ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:913:6: note: '?' condition is false
                        ( GSL_MAX(err_target[i], err_target[j]) ),
                          ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_minmax.h:39:23: note: expanded from macro 'GSL_MAX'
#define GSL_MAX(a,b) ((a) > (b) ? (a) : (b))
                      ^
D:\a\aprg\aprg\gsl\gsl\ode-initval\test.c:915:16: note: Access to field 'name' results in a dereference of a null pointer
                        T[i]->name, T[j]->name);
                                    ^~~~~~~~~~
[297/1003] Building C object gsl/CMakeFiles/ode-initval2_test.dir/ode-initval2/test.c.obj
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:179:11: warning: narrowing conversion from 'double' to 'int' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      m = n * 1.3;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1076:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
  DBL_MEMCPY (y, ystart, MAXEQ);
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2/odeiv_util.h:1:32: note: expanded from macro 'DBL_MEMCPY'
#define DBL_MEMCPY(dest,src,n) memcpy((dest),(src),(n)*sizeof(double))
                               ^~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1076:3: note: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11
  DBL_MEMCPY (y, ystart, MAXEQ);
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2/odeiv_util.h:1:32: note: expanded from macro 'DBL_MEMCPY'
#define DBL_MEMCPY(dest,src,n) memcpy((dest),(src),(n)*sizeof(double))
                               ^~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1106:10: warning: Value stored to 'h' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double h = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1106:10: note: Value stored to 'h' during its initialization is never read
  double h = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1109:10: warning: Value stored to 'err_target' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double err_target = NAN;
         ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1109:10: note: Value stored to 'err_target' during its initialization is never read
  double err_target = NAN;
         ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1189:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
      memcpy (y_orig, y, sys->dimension * sizeof (double));
      ^~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1189:7: note: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11
      memcpy (y_orig, y, sys->dimension * sizeof (double));
      ^~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1240:7: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]
      gsl_test_abs (y[i], yfin[i], factor * d->e->count * err_target,
      ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2513:15: note: Assuming field 'type' is not equal to null
  for (i = 0; p[i].type != 0; i++)
              ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2513:3: note: Loop condition is true.  Entering loop body
  for (i = 0; p[i].type != 0; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2516:7: note: Calling 'test_evolve_linear'
      test_evolve_linear (p[i].type, p[i].h, 1e-10);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1320:3: note: Calling 'test_evolve_system'
  test_evolve_system (T, &rhs_func_lin, 0.0, 4.0, h, y, yfin, err,
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1186:3: note: Loop condition is false. Execution continues on line 1230
  while (t < t1)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1238:15: note: Assuming 'i' is < field 'dimension'
  for (i = 0; i < sys->dimension; i++)
              ^~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1238:3: note: Loop condition is true.  Entering loop body
  for (i = 0; i < sys->dimension; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1238:35: note: The value 1 is assigned to 'i'
  for (i = 0; i < sys->dimension; i++)
                                  ^~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1238:15: note: Assuming 'i' is < field 'dimension'
  for (i = 0; i < sys->dimension; i++)
              ^~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1238:3: note: Loop condition is true.  Entering loop body
  for (i = 0; i < sys->dimension; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1240:7: note: 1st function call argument is an uninitialized value
      gsl_test_abs (y[i], yfin[i], factor * d->e->count * err_target,
      ^             ~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1240:7: warning: 2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]
      gsl_test_abs (y[i], yfin[i], factor * d->e->count * err_target,
      ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2513:15: note: Assuming field 'type' is not equal to null
  for (i = 0; p[i].type != 0; i++)
              ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2513:3: note: Loop condition is true.  Entering loop body
  for (i = 0; p[i].type != 0; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2516:7: note: Calling 'test_evolve_linear'
      test_evolve_linear (p[i].type, p[i].h, 1e-10);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1320:3: note: Calling 'test_evolve_system'
  test_evolve_system (T, &rhs_func_lin, 0.0, 4.0, h, y, yfin, err,
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1186:3: note: Loop condition is true.  Entering loop body
  while (t < t1)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1197:11: note: Assuming 's' is equal to GSL_SUCCESS
      if (s != GSL_SUCCESS)
          ^~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1197:7: note: Taking false branch
      if (s != GSL_SUCCESS)
      ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1219:11: note: 'steps' is <= 100000
      if (steps > 100000)
          ^~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1219:7: note: Taking false branch
      if (steps > 100000)
      ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1186:3: note: Loop condition is false. Execution continues on line 1230
  while (t < t1)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1238:15: note: Assuming 'i' is < field 'dimension'
  for (i = 0; i < sys->dimension; i++)
              ^~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1238:3: note: Loop condition is true.  Entering loop body
  for (i = 0; i < sys->dimension; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1238:35: note: The value 1 is assigned to 'i'
  for (i = 0; i < sys->dimension; i++)
                                  ^~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1238:15: note: Assuming 'i' is < field 'dimension'
  for (i = 0; i < sys->dimension; i++)
              ^~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1238:3: note: Loop condition is true.  Entering loop body
  for (i = 0; i < sys->dimension; i++)
  ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1240:7: note: 2nd function call argument is an uninitialized value
      gsl_test_abs (y[i], yfin[i], factor * d->e->count * err_target,
      ^                   ~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1697:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1697:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1698:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1698:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1699:10: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  size_t p;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1699:11: note: FIX-IT applied suggested code changes
  size_t p;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1829:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1829:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1830:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1830:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1831:10: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  size_t p;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1831:11: note: FIX-IT applied suggested code changes
  size_t p;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1948:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1948:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1949:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1949:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1950:10: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  size_t p;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:1950:11: note: FIX-IT applied suggested code changes
  size_t p;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2134:3: warning: Value stored to 's' is never read [clang-analyzer-deadcode.DeadStores]
  s = gsl_odeiv2_driver_apply (d, &t, t2, y);
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2134:3: note: Value stored to 's' is never read
  s = gsl_odeiv2_driver_apply (d, &t, t2, y);
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2265:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2265:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2266:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2266:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2267:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2267:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2268:10: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  size_t p;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2268:11: note: FIX-IT applied suggested code changes
  size_t p;
          ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2291:31: warning: narrowing conversion from 'double' to 'int' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  int nnfe[MAXNS * MAXNT] = { 0.0 };
                              ^
D:\a\aprg\aprg\gsl\gsl\ode-initval2\test.c:2292:31: warning: narrowing conversion from 'double' to 'int' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  int nnje[MAXNS * MAXNT] = { 0.0 };
                              ^
[298/1003] Building C object gsl/CMakeFiles/roots_test.dir/roots/test.c.obj
D:\a\aprg\aprg\gsl\gsl\roots\test.c:88:3: warning: Value stored to 'F_func5' is never read [clang-analyzer-deadcode.DeadStores]
  F_func5 = create_function (func5) ;
  ^         ~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\roots\test.c:88:3: note: Value stored to 'F_func5' is never read
  F_func5 = create_function (func5) ;
  ^         ~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\roots\test.c:157:10: warning: variable 'r' is not initialized [cppcoreguidelines-init-variables]
  double r;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\roots\test.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\roots\test.c:157:11: note: FIX-IT applied suggested code changes
  double r;
          ^
D:\a\aprg\aprg\gsl\gsl\roots\test.c:158:10: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
  double a;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\roots\test.c:158:11: note: FIX-IT applied suggested code changes
  double a;
          ^
D:\a\aprg\aprg\gsl\gsl\roots\test.c:159:10: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
  double b;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\roots\test.c:159:11: note: FIX-IT applied suggested code changes
  double b;
          ^
D:\a\aprg\aprg\gsl\gsl\roots\test.c:160:10: warning: variable 'x_lower' is not initialized [cppcoreguidelines-init-variables]
  double x_lower;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\roots\test.c:160:17: note: FIX-IT applied suggested code changes
  double x_lower;
                ^
D:\a\aprg\aprg\gsl\gsl\roots\test.c:161:10: warning: variable 'x_upper' is not initialized [cppcoreguidelines-init-variables]
  double x_upper;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\roots\test.c:161:17: note: FIX-IT applied suggested code changes
  double x_upper;
                ^
D:\a\aprg\aprg\gsl\gsl\roots\test.c:222:10: warning: variable 'x_lower' is not initialized [cppcoreguidelines-init-variables]
  double x_lower;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\roots\test.c:222:17: note: FIX-IT applied suggested code changes
  double x_lower;
                ^
D:\a\aprg\aprg\gsl\gsl\roots\test.c:223:10: warning: variable 'x_upper' is not initialized [cppcoreguidelines-init-variables]
  double x_upper;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\roots\test.c:223:17: note: FIX-IT applied suggested code changes
  double x_upper;
                ^
[299/1003] Building C object gsl/CMakeFiles/roots_test.dir/roots/test_funcs.c.obj
D:\a\aprg\aprg\gsl\gsl\roots\test_funcs.c:77:10: warning: Value stored to 'delta' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double delta = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\roots\test_funcs.c:77:10: note: Value stored to 'delta' during its initialization is never read
  double delta = NAN;
         ^~~~~
[300/1003] Building C object gsl/CMakeFiles/multiroots_test.dir/multiroots/test.c.obj
D:\a\aprg\aprg\gsl\gsl\multiroots\test.c:44:10: warning: Value stored to 'f' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test.c:44:10: note: Value stored to 'f' during its initialization is never read
  double f = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test.c:103:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\multiroots\test.c:103:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test.c:130:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\multiroots\test.c:130:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test.c:214:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\multiroots\test.c:214:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
[301/1003] Building C object gsl/CMakeFiles/multiroots_test.dir/multiroots/test_funcs.c.obj
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:522:10: warning: variable 't1' is not initialized [cppcoreguidelines-init-variables]
  double t1;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:522:12: note: FIX-IT applied suggested code changes
  double t1;
           ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:523:10: warning: variable 't2' is not initialized [cppcoreguidelines-init-variables]
  double t2;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:523:12: note: FIX-IT applied suggested code changes
  double t2;
           ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:524:10: warning: variable 'y0' is not initialized [cppcoreguidelines-init-variables]
  double y0;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:524:12: note: FIX-IT applied suggested code changes
  double y0;
           ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:525:10: warning: variable 'y1' is not initialized [cppcoreguidelines-init-variables]
  double y1;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:525:12: note: FIX-IT applied suggested code changes
  double y1;
           ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:526:10: warning: variable 'y2' is not initialized [cppcoreguidelines-init-variables]
  double y2;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:526:12: note: FIX-IT applied suggested code changes
  double y2;
           ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:622:18: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      double t = (i + 1) * h;
                 ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:637:14: warning: variable 'z' is not initialized [cppcoreguidelines-init-variables]
      double z;
             ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:637:15: note: FIX-IT applied suggested code changes
      double z;
              ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:638:19: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      double ti = (i + 1) * h;
                  ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:667:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:667:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:668:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:668:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:680:14: warning: variable 'dz_dxi' is not initialized [cppcoreguidelines-init-variables]
      double dz_dxi;
             ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:680:20: note: FIX-IT applied suggested code changes
      double dz_dxi;
                   ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:681:19: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      double ti = (i + 1) * h;
                  ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:747:28: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      double z = N - sum + (i + 1) * (1 - cos(xi)) - sin(xi);
                           ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:760:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:760:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:761:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:761:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:767:18: warning: Value stored to 'dz' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
          double dz = NAN;
                 ^~
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:767:18: note: Value stored to 'dz' during its initialization is never read
          double dz = NAN;
                 ^~
D:\a\aprg\aprg\gsl\gsl\multiroots\test_funcs.c:772:28: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
            dz = sin(xi) + (i + 1) * sin(xi) - cos(xi);
                           ^
[302/1003] Building C object gsl/CMakeFiles/min_test.dir/min/test.c.obj
D:\a\aprg\aprg\gsl\gsl\min\test.c:98:10: warning: variable 'm' is not initialized [cppcoreguidelines-init-variables]
  double m;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\min\test.c:20:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\min\test.c:98:11: note: FIX-IT applied suggested code changes
  double m;
          ^
D:\a\aprg\aprg\gsl\gsl\min\test.c:99:10: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
  double a;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\min\test.c:99:11: note: FIX-IT applied suggested code changes
  double a;
          ^
D:\a\aprg\aprg\gsl\gsl\min\test.c:100:10: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
  double b;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\min\test.c:100:11: note: FIX-IT applied suggested code changes
  double b;
          ^
D:\a\aprg\aprg\gsl\gsl\min\test.c:101:10: warning: variable 'x_lower' is not initialized [cppcoreguidelines-init-variables]
  double x_lower;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\min\test.c:101:17: note: FIX-IT applied suggested code changes
  double x_lower;
                ^
D:\a\aprg\aprg\gsl\gsl\min\test.c:102:10: warning: variable 'x_upper' is not initialized [cppcoreguidelines-init-variables]
  double x_upper;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\min\test.c:102:17: note: FIX-IT applied suggested code changes
  double x_upper;
                ^
D:\a\aprg\aprg\gsl\gsl\min\test.c:165:10: warning: variable 'x_lower' is not initialized [cppcoreguidelines-init-variables]
  double x_lower;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\min\test.c:165:17: note: FIX-IT applied suggested code changes
  double x_lower;
                ^
D:\a\aprg\aprg\gsl\gsl\min\test.c:166:10: warning: variable 'x_upper' is not initialized [cppcoreguidelines-init-variables]
  double x_upper;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\min\test.c:166:17: note: FIX-IT applied suggested code changes
  double x_upper;
                ^
D:\a\aprg\aprg\gsl\gsl\min\test.c:167:10: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
  double a;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\min\test.c:167:11: note: FIX-IT applied suggested code changes
  double a;
          ^
D:\a\aprg\aprg\gsl\gsl\min\test.c:168:10: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
  double b;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\min\test.c:168:11: note: FIX-IT applied suggested code changes
  double b;
          ^
D:\a\aprg\aprg\gsl\gsl\min\test.c:214:10: warning: variable 'x_lower' is not initialized [cppcoreguidelines-init-variables]
  double x_lower;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\min\test.c:214:17: note: FIX-IT applied suggested code changes
  double x_lower;
                ^
D:\a\aprg\aprg\gsl\gsl\min\test.c:215:10: warning: variable 'x_upper' is not initialized [cppcoreguidelines-init-variables]
  double x_upper;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\min\test.c:215:17: note: FIX-IT applied suggested code changes
  double x_upper;
                ^
D:\a\aprg\aprg\gsl\gsl\min\test.c:216:10: warning: variable 'f_upper' is not initialized [cppcoreguidelines-init-variables]
  double f_upper;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\min\test.c:216:17: note: FIX-IT applied suggested code changes
  double f_upper;
                ^
D:\a\aprg\aprg\gsl\gsl\min\test.c:217:10: warning: variable 'f_lower' is not initialized [cppcoreguidelines-init-variables]
  double f_lower;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\min\test.c:217:17: note: FIX-IT applied suggested code changes
  double f_lower;
                ^
D:\a\aprg\aprg\gsl\gsl\min\test.c:218:10: warning: variable 'f_minimum' is not initialized [cppcoreguidelines-init-variables]
  double f_minimum;
         ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\min\test.c:218:19: note: FIX-IT applied suggested code changes
  double f_minimum;
                  ^
[303/1003] Building C object gsl/CMakeFiles/min_test.dir/min/test_funcs.c.obj
[304/1003] Building C object gsl/CMakeFiles/multimin_test.dir/multimin/test.c.obj
D:\a\aprg\aprg\gsl\gsl\multimin\test.c:115:10: warning: Value stored to 'step_size' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double step_size = NAN;
         ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\multimin\test.c:115:10: note: Value stored to 'step_size' during its initialization is never read
  double step_size = NAN;
         ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\multimin\test.c:176:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\multimin\test.c:176:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\multimin\test.c:203:7: warning: Value stored to 'status' is never read [clang-analyzer-deadcode.DeadStores]
      status = gsl_multimin_fminimizer_iterate(s);
      ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\multimin\test.c:203:7: note: Value stored to 'status' is never read
      status = gsl_multimin_fminimizer_iterate(s);
      ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[305/1003] Building C object gsl/CMakeFiles/multimin_test.dir/multimin/test_funcs.c.obj
[306/1003] Building C object gsl/CMakeFiles/monte_test.dir/monte/test.c.obj
D:\a\aprg\aprg\gsl\gsl\monte\test.c:453:44: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  return 0.5 * pow (M_2_SQRTPI / (2. * a), num_dim) 
                                           ^
[307/1003] Building C object gsl/CMakeFiles/ntuple_test.dir/ntuple/test.c.obj
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:37:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
  memset(&ntuple_row, 0, sizeof(struct data));
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:37:3: note: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11
  memset(&ntuple_row, 0, sizeof(struct data));
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:149:10: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
  double x;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:2:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:149:11: note: FIX-IT applied suggested code changes
  double x;
          ^
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:150:10: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
  double y;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:150:11: note: FIX-IT applied suggested code changes
  double y;
          ^
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:151:10: warning: variable 'z' is not initialized [cppcoreguidelines-init-variables]
  double z;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:151:11: note: FIX-IT applied suggested code changes
  double z;
          ^
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:152:10: warning: variable 'scale' is not initialized [cppcoreguidelines-init-variables]
  double scale;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:152:15: note: FIX-IT applied suggested code changes
  double scale;
              ^
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:156:3: warning: Value stored to 'y' is never read [clang-analyzer-deadcode.DeadStores]
  y = ((struct data *) ntuple_data)->y;
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:156:3: note: Value stored to 'y' is never read
  y = ((struct data *) ntuple_data)->y;
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:157:3: warning: Value stored to 'z' is never read [clang-analyzer-deadcode.DeadStores]
  z = ((struct data *) ntuple_data)->z;
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:157:3: note: Value stored to 'z' is never read
  z = ((struct data *) ntuple_data)->z;
  ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:165:10: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
  double x;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:165:11: note: FIX-IT applied suggested code changes
  double x;
          ^
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:166:10: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
  double y;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:166:11: note: FIX-IT applied suggested code changes
  double y;
          ^
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:167:10: warning: variable 'z' is not initialized [cppcoreguidelines-init-variables]
  double z;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:167:11: note: FIX-IT applied suggested code changes
  double z;
          ^
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:168:10: warning: variable 'scale' is not initialized [cppcoreguidelines-init-variables]
  double scale;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\ntuple\test.c:168:15: note: FIX-IT applied suggested code changes
  double scale;
              ^
[308/1003] Building C object gsl/CMakeFiles/diff_test.dir/diff/test.c.obj
D:\a\aprg\aprg\gsl\gsl\diff\test.c:138:10: warning: variable 'result' is not initialized [cppcoreguidelines-init-variables]
  double result;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\diff\test.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\diff\test.c:138:16: note: FIX-IT applied suggested code changes
  double result;
               ^
D:\a\aprg\aprg\gsl\gsl\diff\test.c:139:10: warning: variable 'abserr' is not initialized [cppcoreguidelines-init-variables]
  double abserr;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\diff\test.c:139:16: note: FIX-IT applied suggested code changes
  double abserr;
               ^
D:\a\aprg\aprg\gsl\gsl\diff\test.c:140:21: warning: 2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]
  double expected = GSL_FN_EVAL (df, x);
                    ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_math.h:131:26: note: expanded from macro 'GSL_FN_EVAL'
#define GSL_FN_EVAL(F,x) (*((F)->function))(x,(F)->params)
                         ^
D:\a\aprg\aprg\gsl\gsl\diff\test.c:182:3: note: Calling 'test'
  test (&gsl_diff_central, &F1, &DF1, 1.0, "exp(x), x=1, central diff");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\diff\test.c:140:21: note: 2nd function call argument is an uninitialized value
  double expected = GSL_FN_EVAL (df, x);
                    ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_math.h:131:26: note: expanded from macro 'GSL_FN_EVAL'
#define GSL_FN_EVAL(F,x) (*((F)->function))(x,(F)->params)
                         ^                    ~~~~~~~~~~~
[309/1003] Building C object gsl/CMakeFiles/deriv_test.dir/deriv/test.c.obj
D:\a\aprg\aprg\gsl\gsl\deriv\test.c:136:10: warning: variable 'result' is not initialized [cppcoreguidelines-init-variables]
  double result;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\deriv\test.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\deriv\test.c:136:16: note: FIX-IT applied suggested code changes
  double result;
               ^
D:\a\aprg\aprg\gsl\gsl\deriv\test.c:137:10: warning: variable 'abserr' is not initialized [cppcoreguidelines-init-variables]
  double abserr;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\deriv\test.c:137:16: note: FIX-IT applied suggested code changes
  double abserr;
               ^
D:\a\aprg\aprg\gsl\gsl\deriv\test.c:138:21: warning: 2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]
  double expected = GSL_FN_EVAL (df, x);
                    ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_math.h:131:26: note: expanded from macro 'GSL_FN_EVAL'
#define GSL_FN_EVAL(F,x) (*((F)->function))(x,(F)->params)
                         ^
D:\a\aprg\aprg\gsl\gsl\deriv\test.c:194:3: note: Calling 'test'
  test (&gsl_deriv_central, &F1, &DF1, 1.0, "exp(x), x=1, central deriv");
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\deriv\test.c:138:21: note: 2nd function call argument is an uninitialized value
  double expected = GSL_FN_EVAL (df, x);
                    ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_math.h:131:26: note: expanded from macro 'GSL_FN_EVAL'
#define GSL_FN_EVAL(F,x) (*((F)->function))(x,(F)->params)
                         ^                    ~~~~~~~~~~~
[310/1003] Building C object gsl/CMakeFiles/cdf_test.dir/cdf/test.c.obj
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:286:10: warning: Value stored to 'sum' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double sum = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:286:10: note: Value stored to 'sum' during its initialization is never read
  double sum = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:288:7: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  int i;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:288:8: note: FIX-IT applied suggested code changes
  int i;
       ^
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:289:7: warning: variable 'min' is not initialized [cppcoreguidelines-init-variables]
  int min;
      ^
          = 0
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:289:10: note: FIX-IT applied suggested code changes
  int min;
         ^
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:290:7: warning: variable 'max' is not initialized [cppcoreguidelines-init-variables]
  int max;
      ^
          = 0
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:290:10: note: FIX-IT applied suggested code changes
  int max;
         ^
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:294:9: warning: narrowing conversion from 'unsigned int' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  min = r.min;
        ^
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:295:9: warning: narrowing conversion from 'unsigned int' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  max = r.max;
        ^
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:313:10: warning: Value stored to 'sum' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double sum = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:313:10: note: Value stored to 'sum' during its initialization is never read
  double sum = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:315:7: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  int i;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:315:8: note: FIX-IT applied suggested code changes
  int i;
       ^
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:316:7: warning: variable 'min' is not initialized [cppcoreguidelines-init-variables]
  int min;
      ^
          = 0
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:316:10: note: FIX-IT applied suggested code changes
  int min;
         ^
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:317:7: warning: variable 'max' is not initialized [cppcoreguidelines-init-variables]
  int max;
      ^
          = 0
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:317:10: note: FIX-IT applied suggested code changes
  int max;
         ^
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:321:9: warning: narrowing conversion from 'unsigned int' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  min = r.min;
        ^
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:322:9: warning: narrowing conversion from 'unsigned int' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  max = r.max;
        ^
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:340:10: warning: Value stored to 'sum' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double sum = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:340:10: note: Value stored to 'sum' during its initialization is never read
  double sum = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:342:7: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  int i;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:342:8: note: FIX-IT applied suggested code changes
  int i;
       ^
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:343:7: warning: variable 'min' is not initialized [cppcoreguidelines-init-variables]
  int min;
      ^
          = 0
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:343:10: note: FIX-IT applied suggested code changes
  int min;
         ^
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:344:7: warning: variable 'max' is not initialized [cppcoreguidelines-init-variables]
  int max;
      ^
          = 0
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:344:10: note: FIX-IT applied suggested code changes
  int max;
         ^
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:348:9: warning: narrowing conversion from 'unsigned int' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  min = r.min;
        ^
D:\a\aprg\aprg\gsl\gsl\cdf\test.c:349:9: warning: narrowing conversion from 'unsigned int' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  max = r.max;
        ^
[311/1003] Building C object gsl/CMakeFiles/wavelet_test.dir/wavelet/test.c.obj
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:37:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:37:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:38:10: warning: variable 'N' is not initialized [cppcoreguidelines-init-variables]
  size_t N;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:38:11: note: FIX-IT applied suggested code changes
  size_t N;
          ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:39:10: warning: variable 'stride' is not initialized [cppcoreguidelines-init-variables]
  size_t stride;
         ^
                = 0
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:39:16: note: FIX-IT applied suggested code changes
  size_t stride;
               ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:40:10: warning: variable 'tda' is not initialized [cppcoreguidelines-init-variables]
  size_t tda;
         ^
             = 0
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:40:13: note: FIX-IT applied suggested code changes
  size_t tda;
            ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:107:15: warning: variable 'v1' is not initialized [cppcoreguidelines-init-variables]
  gsl_vector *v1;
              ^
                 = NULL
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:107:17: note: FIX-IT applied suggested code changes
  gsl_vector *v1;
                ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:108:15: warning: variable 'v2' is not initialized [cppcoreguidelines-init-variables]
  gsl_vector *v2;
              ^
                 = NULL
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:108:17: note: FIX-IT applied suggested code changes
  gsl_vector *v2;
                ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:109:15: warning: variable 'vdelta' is not initialized [cppcoreguidelines-init-variables]
  gsl_vector *vdelta;
              ^
                     = NULL
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:109:21: note: FIX-IT applied suggested code changes
  gsl_vector *vdelta;
                    ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:117:25: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    data[i] = 12345.0 + i;
                        ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:148:12: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
    double x1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:2:1: note: FIX-IT applied suggested code changes
#include <stdio.h>
^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:148:14: note: FIX-IT applied suggested code changes
    double x1;
             ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:149:12: warning: variable 'x2' is not initialized [cppcoreguidelines-init-variables]
    double x2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:149:14: note: FIX-IT applied suggested code changes
    double x2;
             ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:154:32: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    gsl_test (fabs (x2 - x1) > N * 1e-15,
                               ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:169:44: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          status |= (data[i] != (12345.0 + i));
                                           ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:203:25: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    data[i] = 12345.0 + i;
                        ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:249:12: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
    double x1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:249:14: note: FIX-IT applied suggested code changes
    double x1;
             ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:250:12: warning: variable 'x2' is not initialized [cppcoreguidelines-init-variables]
    double x2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:250:14: note: FIX-IT applied suggested code changes
    double x2;
             ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:255:32: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    gsl_test (fabs (x2 - x1) > N * 1e-15,
                               ^
D:\a\aprg\aprg\gsl\gsl\wavelet\test.c:268:54: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
              status |= (data[i*tda+j] != (12345.0 + (i*tda+j)));
                                                     ^
[312/1003] Building C object gsl/CMakeFiles/bspline_test.dir/bspline/test.c.obj
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:33:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:33:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:34:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:34:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:48:34: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      double xi = a + (b - a) * (i / (n - 1.0));
                                 ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:48:39: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      double xi = a + (b - a) * (i / (n - 1.0));
                                      ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:62:30: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      gsl_test_rel(sum, 1.0, order * GSL_DBL_EPSILON,
                             ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:70:34: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      double xi = a + (b - a) * (i / (n - 1.0));
                                 ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:70:39: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      double xi = a + (b - a) * (i / (n - 1.0));
                                      ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:91:10: warning: variable 'order' is not initialized [cppcoreguidelines-init-variables]
  size_t order;
         ^
               = 0
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:91:15: note: FIX-IT applied suggested code changes
  size_t order;
              ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:92:10: warning: variable 'breakpoints' is not initialized [cppcoreguidelines-init-variables]
  size_t breakpoints;
         ^
                     = 0
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:92:21: note: FIX-IT applied suggested code changes
  size_t breakpoints;
                    ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:93:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:93:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:97:3: warning: Value stored to 'argc' is never read [clang-analyzer-deadcode.DeadStores]
  argc = 0;                     /* prevent warnings about unused parameters */
  ^      ~
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:97:3: note: Value stored to 'argc' is never read
  argc = 0;                     /* prevent warnings about unused parameters */
  ^      ~
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:104:30: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          double a = -1.23 * order;
                             ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:105:29: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          double b = 45.6 * order;
                            ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:118:30: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          double a = -1.23 * order;
                             ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:119:29: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          double b = 45.6 * order;
                            ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:124:22: warning: variable 'f' is not initialized [cppcoreguidelines-init-variables]
              double f;
                     ^
                       = NAN
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:27:1: note: FIX-IT applied suggested code changes
^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:124:23: note: FIX-IT applied suggested code changes
              double f;
                      ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:125:22: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
              double x;
                     ^
                       = NAN
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:125:23: note: FIX-IT applied suggested code changes
              double x;
                      ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:126:24: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
              f = sqrt(i / (breakpoints - 1.0));
                       ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:126:29: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
              f = sqrt(i / (breakpoints - 1.0));
                            ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:140:12: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    size_t i;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:140:13: note: FIX-IT applied suggested code changes
    size_t i;
            ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:141:12: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
    size_t j; /* looping */
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:141:13: note: FIX-IT applied suggested code changes
    size_t j; /* looping */
            ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:195:12: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    size_t i;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:195:13: note: FIX-IT applied suggested code changes
    size_t i;
            ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:196:12: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
    size_t j; /* looping */
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:196:13: note: FIX-IT applied suggested code changes
    size_t j; /* looping */
            ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:287:18: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    gsl_test_int(nabscissae, gsl_bspline_ncoeffs(w),
                 ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:287:30: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    gsl_test_int(nabscissae, gsl_bspline_ncoeffs(w),
                             ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:291:78: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        gsl_test_abs(gsl_bspline_greville_abscissa(i, w), abscissae_data[i], 2*k*GSL_DBL_EPSILON,
                                                                             ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:315:18: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    gsl_test_int(nabscissae, gsl_bspline_ncoeffs(w),
                 ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:315:30: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    gsl_test_int(nabscissae, gsl_bspline_ncoeffs(w),
                             ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:319:78: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        gsl_test_abs(gsl_bspline_greville_abscissa(i, w), abscissae_data[i], 2*k*GSL_DBL_EPSILON,
                                                                             ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:344:18: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    gsl_test_int(nabscissae, gsl_bspline_ncoeffs(w),
                 ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:344:30: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    gsl_test_int(nabscissae, gsl_bspline_ncoeffs(w),
                             ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:348:78: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        gsl_test_abs(gsl_bspline_greville_abscissa(i, w), abscissae_data[i], 2*k*GSL_DBL_EPSILON,
                                                                             ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:373:18: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    gsl_test_int(nabscissae, gsl_bspline_ncoeffs(w),
                 ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:373:30: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    gsl_test_int(nabscissae, gsl_bspline_ncoeffs(w),
                             ^
D:\a\aprg\aprg\gsl\gsl\bspline\test.c:377:78: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        gsl_test_abs(gsl_bspline_greville_abscissa(i, w), abscissae_data[i], 2*k*GSL_DBL_EPSILON,
                                                                             ^
[313/1003] Building C object gsl/CMakeFiles/spblas_test.dir/spblas/test.c.obj
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:57:37: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  size_t nnzwanted = (size_t) floor(M * N * GSL_MIN(density, 1.0));
                                    ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:65:18: warning: narrowing conversion from 'double' to 'size_t' (aka 'unsigned long long') [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      size_t i = gsl_rng_uniform(r) * M;
                 ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:65:39: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      size_t i = gsl_rng_uniform(r) * M;
                                      ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:66:18: warning: narrowing conversion from 'double' to 'size_t' (aka 'unsigned long long') [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      size_t j = gsl_rng_uniform(r) * N;
                 ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:66:39: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      size_t j = gsl_rng_uniform(r) * N;
                                      ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:113:17: warning: variable 'B' is not initialized [cppcoreguidelines-init-variables]
  gsl_spmatrix *B;
                ^
                  = NULL
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:113:18: note: FIX-IT applied suggested code changes
  gsl_spmatrix *B;
                 ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:114:17: warning: variable 'C' is not initialized [cppcoreguidelines-init-variables]
  gsl_spmatrix *C;
                ^
                  = NULL
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:114:18: note: FIX-IT applied suggested code changes
  gsl_spmatrix *C;
                 ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:116:15: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
  gsl_vector *x;
              ^
                = NULL
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:116:16: note: FIX-IT applied suggested code changes
  gsl_vector *x;
               ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:117:15: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
  gsl_vector *y;
              ^
                = NULL
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:117:16: note: FIX-IT applied suggested code changes
  gsl_vector *y;
               ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:118:15: warning: variable 'y_gsl' is not initialized [cppcoreguidelines-init-variables]
  gsl_vector *y_gsl;
              ^
                    = NULL
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:118:20: note: FIX-IT applied suggested code changes
  gsl_vector *y_gsl;
                   ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:119:15: warning: variable 'y_sp' is not initialized [cppcoreguidelines-init-variables]
  gsl_vector *y_sp;
              ^
                   = NULL
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:119:19: note: FIX-IT applied suggested code changes
  gsl_vector *y_sp;
                  ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:120:10: warning: variable 'lenX' is not initialized [cppcoreguidelines-init-variables]
  size_t lenX;
         ^
              = 0
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:120:14: note: FIX-IT applied suggested code changes
  size_t lenX;
             ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:121:10: warning: variable 'lenY' is not initialized [cppcoreguidelines-init-variables]
  size_t lenY;
         ^
              = 0
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:121:14: note: FIX-IT applied suggested code changes
  size_t lenY;
             ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:189:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:189:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:190:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:190:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:191:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:191:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:243:10: warning: variable 'm' is not initialized [cppcoreguidelines-init-variables]
  size_t m;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:243:11: note: FIX-IT applied suggested code changes
  size_t m;
          ^
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:244:10: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
  size_t n;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\spblas\test.c:244:11: note: FIX-IT applied suggested code changes
  size_t n;
          ^
[314/1003] Building C object gsl/CMakeFiles/spmatrix_test.dir/spmatrix/test.c.obj
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:36:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:729:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "w");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:36:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:733:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "r");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:36:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:741:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:36:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:758:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "wb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:36:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:762:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "rb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:36:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:770:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:42:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:729:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "w");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:42:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:733:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "r");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:42:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:741:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:42:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:758:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "wb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:42:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:762:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "rb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:42:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:770:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:48:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:729:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "w");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:48:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:733:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "r");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:48:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:741:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:48:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:758:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "wb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:48:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:762:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "rb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:48:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_complex_source.c:770:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:54:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:751:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "w");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:54:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:755:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "r");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:54:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:763:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:54:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:780:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "wb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:54:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:784:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "rb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:54:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:792:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:60:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:751:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "w");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:60:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:755:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "r");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:60:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:763:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:60:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:780:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "wb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:60:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:784:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "rb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:60:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:792:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:66:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:751:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "w");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:66:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:755:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "r");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:66:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:763:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:66:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:780:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "wb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:66:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:784:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "rb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:66:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:792:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:72:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:751:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "w");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:72:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:755:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "r");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:72:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:763:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:72:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:780:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "wb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:72:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:784:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "rb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:72:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:792:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:78:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:751:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "w");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:78:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:755:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "r");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:78:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:763:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:78:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:780:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "wb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:78:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:784:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "rb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:78:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:792:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:84:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:751:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "w");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:84:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:755:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "r");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:84:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:763:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:84:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:780:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "wb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:84:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:784:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "rb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:84:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:792:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:90:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:751:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "w");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:90:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:755:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "r");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:90:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:763:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:90:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:780:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "wb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:90:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:784:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "rb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:90:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:792:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:96:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:751:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "w");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:96:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:755:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "r");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:96:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:763:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:96:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:780:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "wb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:96:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:784:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "rb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:96:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:792:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:102:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:751:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "w");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:102:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:755:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "r");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:102:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:763:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:102:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:780:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "wb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:102:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:784:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "rb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:102:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:792:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:108:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:751:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "w");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:108:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:755:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "r");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:108:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:763:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:108:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:780:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "wb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:108:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:784:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "rb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:108:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:792:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:114:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:751:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "w");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:114:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:755:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "r");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:114:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:763:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:114:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:780:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "wb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:114:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:784:7: warning: 'fopen' is deprecated: This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  f = fopen (filename, "rb");
      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:212:20: note: 'fopen' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/spmatrix/test.c:114:
D:/a/aprg/aprg/gsl/gsl/spmatrix/test_source.c:792:3: warning: 'unlink' is deprecated: The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _unlink. See online help for details. [-Wdeprecated-declarations]
  unlink (filename);
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:385:9: note: 'unlink' has been explicitly marked deprecated here
        _CRT_NONSTDC_DEPRECATE(_unlink)
        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:428:50: note: expanded from macro '_CRT_NONSTDC_DEPRECATE'
        #define _CRT_NONSTDC_DEPRECATE(_NewName) _CRT_DEPRECATE_TEXT(             \
                                                 ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
84 warnings generated.
[315/1003] Building C object gsl/CMakeFiles/splinalg_test.dir/splinalg/test.c.obj
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:58:37: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  size_t nnzwanted = (size_t) floor(M * N * GSL_MIN(density, 1.0));
                                    ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:74:18: warning: narrowing conversion from 'double' to 'size_t' (aka 'unsigned long long') [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      size_t i = gsl_rng_uniform(r) * M;
                 ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:74:39: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      size_t i = gsl_rng_uniform(r) * M;
                                      ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:75:18: warning: narrowing conversion from 'double' to 'size_t' (aka 'unsigned long long') [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      size_t j = gsl_rng_uniform(r) * N;
                 ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:75:39: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      size_t j = gsl_rng_uniform(r) * N;
                                      ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:107:27: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  const double h = 1.0 / (N - 1.0);           /* grid spacing */
                          ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:144:19: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      double xi = (i + 1) * h;
                  ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:167:19: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      double xi = (i + 1) * h;
                  ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:178:12: warning: variable 'normr' is not initialized [cppcoreguidelines-init-variables]
    double normr;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:178:17: note: FIX-IT applied suggested code changes
    double normr;
                ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:179:12: warning: variable 'normb' is not initialized [cppcoreguidelines-init-variables]
    double normb;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:179:17: note: FIX-IT applied suggested code changes
    double normb;
                ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:224:15: warning: variable 'rhs' is not initialized [cppcoreguidelines-init-variables]
  gsl_vector *rhs;
              ^
                  = NULL
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:224:18: note: FIX-IT applied suggested code changes
  gsl_vector *rhs;
                 ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:225:15: warning: variable 'x' is not initialized [cppcoreguidelines-init-variables]
  gsl_vector *x;
              ^
                = NULL
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:225:16: note: FIX-IT applied suggested code changes
  gsl_vector *x;
               ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:227:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:227:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:272:12: warning: variable 'normr' is not initialized [cppcoreguidelines-init-variables]
    double normr;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:272:17: note: FIX-IT applied suggested code changes
    double normr;
                ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:273:12: warning: variable 'normb' is not initialized [cppcoreguidelines-init-variables]
    double normb;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:273:17: note: FIX-IT applied suggested code changes
    double normb;
                ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:324:12: warning: variable 'normr' is not initialized [cppcoreguidelines-init-variables]
    double normr;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:324:17: note: FIX-IT applied suggested code changes
    double normr;
                ^
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:325:12: warning: variable 'normb' is not initialized [cppcoreguidelines-init-variables]
    double normb;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\splinalg\test.c:325:17: note: FIX-IT applied suggested code changes
    double normb;
                ^
[316/1003] Building C object gsl/CMakeFiles/gsl.dir/utils/placeholder.c.obj
[317/1003] Building C object gsl/CMakeFiles/gsl.dir/sys/minmax.c.obj
[318/1003] Building C object gsl/CMakeFiles/gsl.dir/sys/prec.c.obj
[319/1003] Building C object gsl/CMakeFiles/gsl.dir/sys/hypot.c.obj
D:\a\aprg\aprg\gsl\gsl\sys\hypot.c:28:10: warning: variable 'min' is not initialized [cppcoreguidelines-init-variables]
  double min;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\sys\hypot.c:28:13: note: FIX-IT applied suggested code changes
  double min;
            ^
D:\a\aprg\aprg\gsl\gsl\sys\hypot.c:29:10: warning: variable 'max' is not initialized [cppcoreguidelines-init-variables]
  double max;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\sys\hypot.c:29:13: note: FIX-IT applied suggested code changes
  double max;
            ^
[320/1003] Building C object gsl/CMakeFiles/gsl.dir/sys/log1p.c.obj
D:\a\aprg\aprg\gsl\gsl\sys\log1p.c:26:19: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
  volatile double y;
                  ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\sys\log1p.c:26:20: note: FIX-IT applied suggested code changes
  volatile double y;
                   ^
D:\a\aprg\aprg\gsl\gsl\sys\log1p.c:27:19: warning: variable 'z' is not initialized [cppcoreguidelines-init-variables]
  volatile double z;
                  ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\sys\log1p.c:27:20: note: FIX-IT applied suggested code changes
  volatile double z;
                   ^
[321/1003] Building C object gsl/CMakeFiles/gsl.dir/sys/expm1.c.obj
[322/1003] Building C object gsl/CMakeFiles/gsl.dir/sys/coerce.c.obj
D:\a\aprg\aprg\gsl\gsl\sys\coerce.c:27:19: warning: Value stored to 'y' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  volatile double y = NAN;
                  ^
D:\a\aprg\aprg\gsl\gsl\sys\coerce.c:27:19: note: Value stored to 'y' during its initialization is never read
  volatile double y = NAN;
                  ^
D:\a\aprg\aprg\gsl\gsl\sys\coerce.c:35:18: warning: Value stored to 'y' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  volatile float y = NAN;
                 ^
D:\a\aprg\aprg\gsl\gsl\sys\coerce.c:35:18: note: Value stored to 'y' during its initialization is never read
  volatile float y = NAN;
                 ^
D:\a\aprg\aprg\gsl\gsl\sys\coerce.c:45:24: warning: Value stored to 'y' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  volatile long double y = NAN;
                       ^
D:\a\aprg\aprg\gsl\gsl\sys\coerce.c:45:24: note: Value stored to 'y' during its initialization is never read
  volatile long double y = NAN;
                       ^
[323/1003] Building C object gsl/CMakeFiles/gsl.dir/sys/invhyp.c.obj
D:\a\aprg\aprg\gsl\gsl\sys\invhyp.c:36:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if (x > 1)
  ^~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\sys\invhyp.c:36:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\sys\invhyp.c:65:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if (a > GSL_SQRT_DBL_EPSILON)
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\sys\invhyp.c:65:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\sys\invhyp.c:90:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if (a >= 0.5)
  ^~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\sys\invhyp.c:90:3: note: FIX-IT applied suggested code changes
[324/1003] Building C object gsl/CMakeFiles/gsl.dir/sys/pow_int.c.obj
[325/1003] Building C object gsl/CMakeFiles/gsl.dir/sys/infnan.c.obj
D:\a\aprg\aprg\gsl\gsl\sys\infnan.c:64:30: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  } if (fpc == _FPCLASS_NINF)
                             ^
                              {
D:\a\aprg\aprg\gsl\gsl\sys\infnan.c:64:30: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\sys\infnan.c:66:3: note: FIX-IT applied suggested code changes
  else 
  ^
D:\a\aprg\aprg\gsl\gsl\sys\infnan.c:66:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else 
  ^~~~~
D:\a\aprg\aprg\gsl\gsl\sys\infnan.c:66:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\sys\infnan.c:66:7: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  else 
      ^
note: this fix will not be applied because it overlaps with another fix
[326/1003] Building C object gsl/CMakeFiles/gsl.dir/sys/fdiv.c.obj
[327/1003] Building C object gsl/CMakeFiles/gsl.dir/sys/fcmp.c.obj
D:\a\aprg\aprg\gsl\gsl\sys\fcmp.c:33:10: warning: variable 'delta' is not initialized [cppcoreguidelines-init-variables]
  double delta;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\sys\fcmp.c:33:15: note: FIX-IT applied suggested code changes
  double delta;
              ^
D:\a\aprg\aprg\gsl\gsl\sys\fcmp.c:34:10: warning: variable 'difference' is not initialized [cppcoreguidelines-init-variables]
  double difference;
         ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\sys\fcmp.c:34:20: note: FIX-IT applied suggested code changes
  double difference;
                   ^
D:\a\aprg\aprg\gsl\gsl\sys\fcmp.c:58:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else                          /* -delta <= difference <= delta */
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\sys\fcmp.c:58:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\sys\fcmp.c:59:5: note: FIX-IT applied suggested code changes
    {
    ^
[328/1003] Building C object gsl/CMakeFiles/gsl.dir/sys/ldfrexp.c.obj
D:\a\aprg\aprg\gsl\gsl\sys\ldfrexp.c:38:12: warning: variable 'p2' is not initialized [cppcoreguidelines-init-variables]
    double p2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\sys\ldfrexp.c:38:14: note: FIX-IT applied suggested code changes
    double p2;
             ^
D:\a\aprg\aprg\gsl\gsl\sys\ldfrexp.c:69:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if (fabs (x) >= 0.5 && fabs (x) < 1)     /* Handle the common case */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\sys\ldfrexp.c:69:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\sys\ldfrexp.c:78:14: warning: variable 'f' is not initialized [cppcoreguidelines-init-variables]
      double f;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\sys\ldfrexp.c:81:28: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
      if (ei < DBL_MIN_EXP)
                           ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\sys\ldfrexp.c:84:29: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
      if (ei > -DBL_MIN_EXP)
                            ^
note: this fix will not be applied because it overlaps with another fix
[329/1003] Building C object gsl/CMakeFiles/gsl.dir/test/results.c.obj
D:\a\aprg\aprg\gsl\gsl\test\results.c:47:20: warning: 'getenv' is deprecated: This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
  const char * p = getenv("GSL_TEST_VERBOSE");
                   ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h:1183:20: note: 'getenv' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(_dupenv_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\test\results.c:450:15: warning: use of logical '&&' with constant operand [clang-diagnostic-constant-logical-operand]
  if (verbose && 0) {             /* FIXME: turned it off, this annoys me */
              ^  ~
D:\a\aprg\aprg\gsl\gsl\test\results.c:450:15: note: use '&' for a bitwise operation
  if (verbose && 0) {             /* FIXME: turned it off, this annoys me */
              ^~
              &
D:\a\aprg\aprg\gsl\gsl\test\results.c:450:15: note: remove constant to silence this warning
  if (verbose && 0) {             /* FIXME: turned it off, this annoys me */
             ~^~~~
D:/a/aprg/aprg/gsl/gsl/test/results.c:47:20: warning: 'getenv' is deprecated: This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  const char * p = getenv("GSL_TEST_VERBOSE");
                   ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h:1183:20: note: 'getenv' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(_dupenv_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/test/results.c:450:15: warning: use of logical '&&' with constant operand [-Wconstant-logical-operand]
  if (verbose && 0) {             /* FIXME: turned it off, this annoys me */
              ^  ~
D:/a/aprg/aprg/gsl/gsl/test/results.c:450:15: note: use '&' for a bitwise operation
  if (verbose && 0) {             /* FIXME: turned it off, this annoys me */
              ^~
              &
D:/a/aprg/aprg/gsl/gsl/test/results.c:450:15: note: remove constant to silence this warning
  if (verbose && 0) {             /* FIXME: turned it off, this annoys me */
             ~^~~~
2 warnings generated.
[330/1003] Building C object gsl/CMakeFiles/gsl.dir/err/error.c.obj
D:\a\aprg\aprg\gsl\gsl\err\error.c:73:3: warning: Value stored to 'line' is never read [clang-analyzer-deadcode.DeadStores]
  line = 0;
  ^      ~
D:\a\aprg\aprg\gsl\gsl\err\error.c:73:3: note: Value stored to 'line' is never read
  line = 0;
  ^      ~
D:\a\aprg\aprg\gsl\gsl\err\error.c:74:3: warning: Value stored to 'gsl_errno' is never read [clang-analyzer-deadcode.DeadStores]
  gsl_errno = 0;
  ^           ~
D:\a\aprg\aprg\gsl\gsl\err\error.c:74:3: note: Value stored to 'gsl_errno' is never read
  gsl_errno = 0;
  ^           ~
[331/1003] Building C object gsl/CMakeFiles/gsl.dir/err/stream.c.obj
[332/1003] Building C object gsl/CMakeFiles/gsl.dir/err/message.c.obj
[333/1003] Building C object gsl/CMakeFiles/gsl.dir/err/strerror.c.obj
[334/1003] Building C object gsl/CMakeFiles/gsl.dir/bst/avl.c.obj
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:102:13: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  avl_node *p;
            ^
              = NULL
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:102:14: note: FIX-IT applied suggested code changes
  avl_node *p;
             ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:103:13: warning: variable 'q' is not initialized [cppcoreguidelines-init-variables]
  avl_node *q;
            ^
              = NULL
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:103:14: note: FIX-IT applied suggested code changes
  avl_node *q;
             ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:138:13: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
  avl_node *y;
            ^
              = NULL
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:138:14: note: FIX-IT applied suggested code changes
  avl_node *y;
             ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:139:13: warning: variable 'z' is not initialized [cppcoreguidelines-init-variables]
  avl_node *z; /* top node to update balance factor, and parent */
            ^
              = NULL
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:139:14: note: FIX-IT applied suggested code changes
  avl_node *z; /* top node to update balance factor, and parent */
             ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:140:13: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  avl_node *p;
            ^
              = NULL
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:140:14: note: FIX-IT applied suggested code changes
  avl_node *p;
             ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:141:13: warning: variable 'q' is not initialized [cppcoreguidelines-init-variables]
  avl_node *q; /* iterator, and parent */
            ^
              = NULL
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:141:14: note: FIX-IT applied suggested code changes
  avl_node *q; /* iterator, and parent */
             ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:204:28: warning: Array access (via field 'avl_link') results in a null pointer dereference [clang-analyzer-core.NullDereference]
          x->avl_link[1] = w->avl_link[0];
                           ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:761:7: note: Calling 'avl_probe'
  p = avl_probe (item, table);
      ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:152:22: note: Assuming 'p' is not equal to NULL
  for (q = z, p = y; p != NULL; q = p, p = p->avl_link[dir])
                     ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:152:3: note: Loop condition is true.  Entering loop body
  for (q = z, p = y; p != NULL; q = p, p = p->avl_link[dir])
  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:156:11: note: Assuming 'cmp' is not equal to 0
      if (cmp == 0) {
          ^~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:156:7: note: Taking false branch
      if (cmp == 0) {
      ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:160:11: note: Assuming field 'avl_balance' is not equal to 0
      if (p->avl_balance != 0) {
          ^~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:160:7: note: Taking true branch
      if (p->avl_balance != 0) {
      ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:164:23: note: Assuming 'cmp' is <= 0
      da[k++] = dir = cmp > 0;
                      ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:152:22: note: Assuming 'p' is equal to NULL
  for (q = z, p = y; p != NULL; q = p, p = p->avl_link[dir])
                     ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:152:3: note: Loop condition is false. Execution continues on line 168
  for (q = z, p = y; p != NULL; q = p, p = p->avl_link[dir])
  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:169:7: note: Assuming 'n' is not equal to NULL
  if (n == NULL) {
      ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:169:3: note: Taking false branch
  if (n == NULL) {
  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:176:20: note: Storing null pointer value
  n->avl_link[0] = n->avl_link[1] = NULL;
                   ^~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:179:7: note: 'y' is not equal to NULL
  if (y == NULL) {
      ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:179:3: note: Taking false branch
  if (y == NULL) {
  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:183:22: note: Assuming 'p' is equal to 'n'
  for (p = y, k = 0; p != n; p = p->avl_link[da[k]], k++) {
                     ^~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:183:3: note: Loop condition is false. Execution continues on line 191
  for (p = y, k = 0; p != n; p = p->avl_link[da[k]], k++) {
  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:191:7: note: Assuming the condition is true
  if (y->avl_balance == -2)
      ^~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:191:3: note: Taking true branch
  if (y->avl_balance == -2)
  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:194:7: note: Taking false branch
      if (x->avl_balance == -1)
      ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:203:11: note: Null pointer value stored to 'w'
          w = x->avl_link[1];
          ^~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:204:28: note: Array access (via field 'avl_link') results in a null pointer dereference
          x->avl_link[1] = w->avl_link[0];
                           ^  ~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:231:28: warning: Array access (via field 'avl_link') results in a null pointer dereference [clang-analyzer-core.NullDereference]
          x->avl_link[0] = w->avl_link[1];
                           ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:761:7: note: Calling 'avl_probe'
  p = avl_probe (item, table);
      ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:152:22: note: Assuming 'p' is not equal to NULL
  for (q = z, p = y; p != NULL; q = p, p = p->avl_link[dir])
                     ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:152:3: note: Loop condition is true.  Entering loop body
  for (q = z, p = y; p != NULL; q = p, p = p->avl_link[dir])
  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:156:11: note: Assuming 'cmp' is not equal to 0
      if (cmp == 0) {
          ^~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:156:7: note: Taking false branch
      if (cmp == 0) {
      ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:160:11: note: Assuming field 'avl_balance' is not equal to 0
      if (p->avl_balance != 0) {
          ^~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:160:7: note: Taking true branch
      if (p->avl_balance != 0) {
      ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:164:23: note: Assuming 'cmp' is > 0
      da[k++] = dir = cmp > 0;
                      ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:152:22: note: Assuming 'p' is equal to NULL
  for (q = z, p = y; p != NULL; q = p, p = p->avl_link[dir])
                     ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:152:3: note: Loop condition is false. Execution continues on line 168
  for (q = z, p = y; p != NULL; q = p, p = p->avl_link[dir])
  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:169:7: note: Assuming 'n' is not equal to NULL
  if (n == NULL) {
      ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:169:3: note: Taking false branch
  if (n == NULL) {
  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:176:3: note: Storing null pointer value
  n->avl_link[0] = n->avl_link[1] = NULL;
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:179:7: note: 'y' is not equal to NULL
  if (y == NULL) {
      ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:179:3: note: Taking false branch
  if (y == NULL) {
  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:183:22: note: Assuming 'p' is equal to 'n'
  for (p = y, k = 0; p != n; p = p->avl_link[da[k]], k++) {
                     ^~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:183:3: note: Loop condition is false. Execution continues on line 191
  for (p = y, k = 0; p != n; p = p->avl_link[da[k]], k++) {
  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:191:7: note: Assuming the condition is false
  if (y->avl_balance == -2)
      ^~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:191:3: note: Taking false branch
  if (y->avl_balance == -2)
  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:218:12: note: Assuming the condition is true
  else if (y->avl_balance == +2)
           ^~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:218:8: note: Taking true branch
  else if (y->avl_balance == +2)
       ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:221:7: note: Taking false branch
      if (x->avl_balance == +1)
      ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:230:11: note: Null pointer value stored to 'w'
          w = x->avl_link[0];
          ^~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:231:28: note: Array access (via field 'avl_link') results in a null pointer dereference
          x->avl_link[0] = w->avl_link[1];
                           ^  ~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:391:29: warning: variable 'w' is not initialized [cppcoreguidelines-init-variables]
                  avl_node *w;
                            ^
                              = NULL
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:391:30: note: FIX-IT applied suggested code changes
                  avl_node *w;
                             ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:397:44: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
                  if (w->avl_balance == +1)
                                           ^
                                            {
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:397:44: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:399:19: note: FIX-IT applied suggested code changes
                  else if (w->avl_balance == 0)
                  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:399:48: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
                  else if (w->avl_balance == 0)
                                               ^
                                                {
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:399:48: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:401:19: note: FIX-IT applied suggested code changes
                  else /* |w->avl_balance == -1| */
                  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:401:23: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
                  else /* |w->avl_balance == -1| */
                      ^
                       {
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:401:23: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:402:61: note: FIX-IT applied suggested code changes
                    x->avl_balance = +1, y->avl_balance = 0;
                                                            ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:417:19: warning: do not use 'else' after 'break' [llvm-else-after-return,readability-else-after-return]
                  else
                  ^~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:417:19: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:417:23: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
                  else
                      ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:432:29: warning: variable 'w' is not initialized [cppcoreguidelines-init-variables]
                  avl_node *w;
                            ^
                              = NULL
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:432:30: note: FIX-IT applied suggested code changes
                  avl_node *w;
                             ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:438:44: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
                  if (w->avl_balance == -1)
                                           ^
                                            {
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:438:44: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:440:19: note: FIX-IT applied suggested code changes
                  else if (w->avl_balance == 0)
                  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:440:48: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
                  else if (w->avl_balance == 0)
                                               ^
                                                {
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:440:48: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:442:19: note: FIX-IT applied suggested code changes
                  else /* |w->avl_balance == +1| */
                  ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:442:23: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
                  else /* |w->avl_balance == +1| */
                      ^
                       {
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:442:23: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:443:61: note: FIX-IT applied suggested code changes
                    x->avl_balance = -1, y->avl_balance = 0;
                                                            ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:458:19: warning: do not use 'else' after 'break' [llvm-else-after-return,readability-else-after-return]
                  else
                  ^~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:458:19: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:458:23: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
                  else
                      ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:709:13: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  avl_node *p;
            ^
              = NULL
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:709:14: note: FIX-IT applied suggested code changes
  avl_node *p;
             ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:710:13: warning: variable 'q' is not initialized [cppcoreguidelines-init-variables]
  avl_node *q;
            ^
              = NULL
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:710:14: note: FIX-IT applied suggested code changes
  avl_node *q;
             ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:795:11: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
          memcpy (trav->avl_stack, (const void *) src->avl_stack,
          ^~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:795:11: note: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11
          memcpy (trav->avl_stack, (const void *) src->avl_stack,
          ^~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:847:17: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
      avl_node *y;
                ^
                  = NULL
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:847:18: note: FIX-IT applied suggested code changes
      avl_node *y;
                 ^
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:912:17: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
      avl_node *y;
                ^
                  = NULL
D:\a\aprg\aprg\gsl\gsl\bst\avl.c:912:18: note: FIX-IT applied suggested code changes
      avl_node *y;
                 ^
[335/1003] Building C object gsl/CMakeFiles/gsl.dir/bst/bst.c.obj
[336/1003] Building C object gsl/CMakeFiles/gsl.dir/bst/rb.c.obj
D:\a\aprg\aprg\gsl\gsl\bst\rb.c:98:12: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  rb_node *p;
           ^
             = NULL
D:\a\aprg\aprg\gsl\gsl\bst\rb.c:98:13: note: FIX-IT applied suggested code changes
  rb_node *p;
            ^
D:\a\aprg\aprg\gsl\gsl\bst\rb.c:99:12: warning: variable 'q' is not initialized [cppcoreguidelines-init-variables]
  rb_node *q;
           ^
             = NULL
D:\a\aprg\aprg\gsl\gsl\bst\rb.c:99:13: note: FIX-IT applied suggested code changes
  rb_node *q;
            ^
D:\a\aprg\aprg\gsl\gsl\bst\rb.c:334:21: warning: variable 't' is not initialized [cppcoreguidelines-init-variables]
      enum rb_color t;
                    ^
D:\a\aprg\aprg\gsl\gsl\bst\rb.c:596:12: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  rb_node *p;
           ^
             = NULL
D:\a\aprg\aprg\gsl\gsl\bst\rb.c:596:13: note: FIX-IT applied suggested code changes
  rb_node *p;
            ^
D:\a\aprg\aprg\gsl\gsl\bst\rb.c:597:12: warning: variable 'q' is not initialized [cppcoreguidelines-init-variables]
  rb_node *q;
           ^
             = NULL
D:\a\aprg\aprg\gsl\gsl\bst\rb.c:597:13: note: FIX-IT applied suggested code changes
  rb_node *q;
            ^
D:\a\aprg\aprg\gsl\gsl\bst\rb.c:674:11: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
          memcpy (trav->rb_stack, (const void *) src->rb_stack,
          ^~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\rb.c:674:11: note: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11
          memcpy (trav->rb_stack, (const void *) src->rb_stack,
          ^~~~~~
D:\a\aprg\aprg\gsl\gsl\bst\rb.c:723:16: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
      rb_node *y;
               ^
                 = NULL
D:\a\aprg\aprg\gsl\gsl\bst\rb.c:723:17: note: FIX-IT applied suggested code changes
      rb_node *y;
                ^
D:\a\aprg\aprg\gsl\gsl\bst\rb.c:785:16: warning: variable 'y' is not initialized [cppcoreguidelines-init-variables]
      rb_node *y;
               ^
                 = NULL
D:\a\aprg\aprg\gsl\gsl\bst\rb.c:785:17: note: FIX-IT applied suggested code changes
      rb_node *y;
                ^
[337/1003] Building C object gsl/CMakeFiles/gsl.dir/bst/trav.c.obj
[338/1003] Building C object gsl/CMakeFiles/gsl.dir/complex/math.c.obj
D:\a\aprg\aprg\gsl\gsl\complex\math.c:100:10: warning: variable 'max' is not initialized [cppcoreguidelines-init-variables]
  double max;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\complex\math.c:100:13: note: FIX-IT applied suggested code changes
  double max;
            ^
D:\a\aprg\aprg\gsl\gsl\complex\math.c:101:10: warning: variable 'u' is not initialized [cppcoreguidelines-init-variables]
  double u;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\complex\math.c:101:11: note: FIX-IT applied suggested code changes
  double u;
          ^
D:\a\aprg\aprg\gsl\gsl\complex\math.c:292:14: warning: Value stored to 'w' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double w = NAN;
             ^
D:\a\aprg\aprg\gsl\gsl\complex\math.c:292:14: note: Value stored to 'w' during its initialization is never read
      double w = NAN;
             ^
D:\a\aprg\aprg\gsl\gsl\complex\math.c:561:14: warning: variable 'real' is not initialized [cppcoreguidelines-init-variables]
      double real;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\complex\math.c:561:18: note: FIX-IT applied suggested code changes
      double real;
                 ^
D:\a\aprg\aprg\gsl\gsl\complex\math.c:562:14: warning: variable 'imag' is not initialized [cppcoreguidelines-init-variables]
      double imag;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\complex\math.c:562:18: note: FIX-IT applied suggested code changes
      double imag;
                 ^
D:\a\aprg\aprg\gsl\gsl\complex\math.c:588:18: warning: Value stored to 'Am1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
          double Am1 = NAN;
                 ^~~
D:\a\aprg\aprg\gsl\gsl\complex\math.c:588:18: note: Value stored to 'Am1' during its initialization is never read
          double Am1 = NAN;
                 ^~~
D:\a\aprg\aprg\gsl\gsl\complex\math.c:657:14: warning: variable 'real' is not initialized [cppcoreguidelines-init-variables]
      double real;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\complex\math.c:657:18: note: FIX-IT applied suggested code changes
      double real;
                 ^
D:\a\aprg\aprg\gsl\gsl\complex\math.c:658:14: warning: variable 'imag' is not initialized [cppcoreguidelines-init-variables]
      double imag;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\complex\math.c:658:18: note: FIX-IT applied suggested code changes
      double imag;
                 ^
D:\a\aprg\aprg\gsl\gsl\complex\math.c:684:18: warning: Value stored to 'Am1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
          double Am1 = NAN;
                 ^~~
D:\a\aprg\aprg\gsl\gsl\complex\math.c:684:18: note: Value stored to 'Am1' during its initialization is never read
          double Am1 = NAN;
                 ^~~
D:\a\aprg\aprg\gsl\gsl\complex\math.c:751:14: warning: Value stored to 'imag' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double imag = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\complex\math.c:751:14: note: Value stored to 'imag' during its initialization is never read
      double imag = NAN;
             ^~~~
[339/1003] Building C object gsl/CMakeFiles/gsl.dir/complex/inline.c.obj
[340/1003] Building C object gsl/CMakeFiles/gsl.dir/cheb/deriv.c.obj
D:\a\aprg\aprg\gsl\gsl\cheb\deriv.c:50:27: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    deriv->c[n-2] = 2.0 *(n-1.0) * f->c[n-1];
                          ^
D:\a\aprg\aprg\gsl\gsl\cheb\deriv.c:53:45: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      deriv->c[i-3] = deriv->c[i-1] + 2.0 *(i-2.0) * f->c[i-2];
                                            ^
[341/1003] Building C object gsl/CMakeFiles/gsl.dir/cheb/eval.c.obj
D:\a\aprg\aprg\gsl\gsl\cheb\eval.c:196:10: warning: variable 'result' is not initialized [cppcoreguidelines-init-variables]
  double result;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\cheb\eval.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\cheb\eval.c:196:16: note: FIX-IT applied suggested code changes
  double result;
               ^
D:\a\aprg\aprg\gsl\gsl\cheb\eval.c:197:10: warning: variable 'abserr' is not initialized [cppcoreguidelines-init-variables]
  double abserr;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\cheb\eval.c:197:16: note: FIX-IT applied suggested code changes
  double abserr;
               ^
[342/1003] Building C object gsl/CMakeFiles/gsl.dir/cheb/init.c.obj
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:44:5: warning: Potential leak of memory pointed to by 'cs' [clang-analyzer-unix.Malloc]
    GSL_ERROR_VAL("failed to allocate cheb coefficients", GSL_ENOMEM, 0);
    ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:114:8: note: expanded from macro 'GSL_ERROR_VAL'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:32:46: note: Memory is allocated
  gsl_cheb_series * cs = (gsl_cheb_series *) malloc(sizeof(gsl_cheb_series));
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:34:6: note: Assuming 'cs' is not equal to null
  if(cs == 0) {
     ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:34:3: note: Taking false branch
  if(cs == 0) {
  ^
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:43:6: note: Assuming field 'c' is equal to null
  if(cs->c == 0) {
     ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:43:3: note: Taking true branch
  if(cs->c == 0) {
  ^
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:44:5: note: Potential leak of memory pointed to by 'cs'
    GSL_ERROR_VAL("failed to allocate cheb coefficients", GSL_ENOMEM, 0);
    ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:114:8: note: expanded from macro 'GSL_ERROR_VAL'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:70:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:70:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:71:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:71:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:83:23: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    double fac = 2.0/(cs->order +1.0);
                      ^
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:86:30: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      double y = cos(M_PI * (k+0.5)/(cs->order+1));
                             ^
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:86:37: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      double y = cos(M_PI * (k+0.5)/(cs->order+1));
                                    ^
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:93:36: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        sum += cs->f[k]*cos(M_PI * j*(k+0.5)/(cs->order+1));
                                   ^
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:93:39: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        sum += cs->f[k]*cos(M_PI * j*(k+0.5)/(cs->order+1));
                                      ^
D:\a\aprg\aprg\gsl\gsl\cheb\init.c:93:46: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        sum += cs->f[k]*cos(M_PI * j*(k+0.5)/(cs->order+1));
                                             ^
[343/1003] Building C object gsl/CMakeFiles/gsl.dir/cheb/integ.c.obj
D:\a\aprg\aprg\gsl\gsl\cheb\integ.c:59:38: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    integ->c[n-1] = con * f->c[n-2]/(n-1.0);
                                     ^
[344/1003] Building C object gsl/CMakeFiles/gsl.dir/block/init.c.obj
[345/1003] Building C object gsl/CMakeFiles/gsl.dir/block/file.c.obj
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:16:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:83:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:16:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:159:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:23:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:83:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:23:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:159:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:37:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:83:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:37:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:159:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:44:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:83:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:44:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:159:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:51:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:83:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:51:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:159:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:58:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:83:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:58:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:159:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:65:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:83:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:65:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:159:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:72:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:83:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:72:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:159:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:79:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:83:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:79:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:159:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:86:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:83:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:86:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:159:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:93:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:83:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:93:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:159:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:100:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:83:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
In file included from D:/a/aprg/aprg/gsl/gsl/block/file.c:100:
D:/a/aprg/aprg/gsl/gsl/block/fprintf_source.c:159:24: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
          int status = fscanf (stream, IN_FORMAT, &tmp) ;
                       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
24 warnings generated.
[346/1003] Building C object gsl/CMakeFiles/gsl.dir/block/block.c.obj
[347/1003] Building C object gsl/CMakeFiles/gsl.dir/vector/init.c.obj
[348/1003] Building C object gsl/CMakeFiles/gsl.dir/vector/file.c.obj
[349/1003] Building C object gsl/CMakeFiles/gsl.dir/vector/vector.c.obj
[350/1003] Building C object gsl/CMakeFiles/gsl.dir/vector/copy.c.obj
[351/1003] Building C object gsl/CMakeFiles/gsl.dir/vector/swap.c.obj
[352/1003] Building C object gsl/CMakeFiles/gsl.dir/vector/prop.c.obj
[353/1003] Building C object gsl/CMakeFiles/gsl.dir/vector/minmax.c.obj
[354/1003] Building C object gsl/CMakeFiles/gsl.dir/vector/oper.c.obj
[355/1003] Building C object gsl/CMakeFiles/gsl.dir/vector/reim.c.obj
[356/1003] Building C object gsl/CMakeFiles/gsl.dir/vector/subvector.c.obj
[357/1003] Building C object gsl/CMakeFiles/gsl.dir/vector/view.c.obj
[358/1003] Building C object gsl/CMakeFiles/gsl.dir/matrix/init.c.obj
[359/1003] Building C object gsl/CMakeFiles/gsl.dir/matrix/matrix.c.obj
[360/1003] Building C object gsl/CMakeFiles/gsl.dir/matrix/file.c.obj
[361/1003] Building C object gsl/CMakeFiles/gsl.dir/matrix/rowcol.c.obj
[362/1003] Building C object gsl/CMakeFiles/gsl.dir/matrix/swap.c.obj
[363/1003] Building C object gsl/CMakeFiles/gsl.dir/matrix/copy.c.obj
[364/1003] Building C object gsl/CMakeFiles/gsl.dir/matrix/minmax.c.obj
[365/1003] Building C object gsl/CMakeFiles/gsl.dir/matrix/prop.c.obj
[366/1003] Building C object gsl/CMakeFiles/gsl.dir/matrix/oper.c.obj
[367/1003] Building C object gsl/CMakeFiles/gsl.dir/matrix/getset.c.obj
[368/1003] Building C object gsl/CMakeFiles/gsl.dir/matrix/view.c.obj
[369/1003] Building C object gsl/CMakeFiles/gsl.dir/matrix/submatrix.c.obj
[370/1003] Building C object gsl/CMakeFiles/gsl.dir/permutation/init.c.obj
[371/1003] Building C object gsl/CMakeFiles/gsl.dir/permutation/file.c.obj
D:\a\aprg\aprg\gsl\gsl\permutation\file.c:101:20: warning: Call to function 'fscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
      int status = fscanf (stream, IN_FORMAT, &j);  
                   ^~~~~~
D:\a\aprg\aprg\gsl\gsl\permutation\file.c:101:20: note: Call to function 'fscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fscanf_s' in case of C11
      int status = fscanf (stream, IN_FORMAT, &j);  
                   ^~~~~~
D:\a\aprg\aprg\gsl\gsl\permutation\file.c:101:20: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
      int status = fscanf (stream, IN_FORMAT, &j);  
                   ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/permutation/file.c:101:20: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
      int status = fscanf (stream, IN_FORMAT, &j);  
                   ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
1 warning generated.
[372/1003] Building C object gsl/CMakeFiles/gsl.dir/permutation/permutation.c.obj
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:67:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:67:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:68:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j ;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:68:11: note: FIX-IT applied suggested code changes
  size_t j ;
          ^
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:133:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:133:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:134:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:134:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:135:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:135:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:186:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:186:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:187:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:187:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:188:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\permutation.c:188:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
[373/1003] Building C object gsl/CMakeFiles/gsl.dir/permutation/permute.c.obj
[374/1003] Building C object gsl/CMakeFiles/gsl.dir/permutation/canonical.c.obj
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:34:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:34:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:35:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:35:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:36:10: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
  size_t s;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:36:11: note: FIX-IT applied suggested code changes
  size_t s;
          ^
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:91:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:91:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:92:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:92:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:93:10: warning: variable 'kk' is not initialized [cppcoreguidelines-init-variables]
  size_t kk;
         ^
            = 0
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:93:12: note: FIX-IT applied suggested code changes
  size_t kk;
           ^
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:94:10: warning: variable 'first' is not initialized [cppcoreguidelines-init-variables]
  size_t first;
         ^
               = 0
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:94:15: note: FIX-IT applied suggested code changes
  size_t first;
              ^
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:140:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:140:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:141:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:141:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:161:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:161:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:162:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\permutation\canonical.c:162:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
[375/1003] Building C object gsl/CMakeFiles/gsl.dir/permutation/inline.c.obj
[376/1003] Building C object gsl/CMakeFiles/gsl.dir/combination/init.c.obj
[377/1003] Building C object gsl/CMakeFiles/gsl.dir/combination/file.c.obj
D:\a\aprg\aprg\gsl\gsl\combination\file.c:102:20: warning: Call to function 'fscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
      int status = fscanf (stream, IN_FORMAT, &j);  
                   ^~~~~~
D:\a\aprg\aprg\gsl\gsl\combination\file.c:102:20: note: Call to function 'fscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fscanf_s' in case of C11
      int status = fscanf (stream, IN_FORMAT, &j);  
                   ^~~~~~
D:\a\aprg\aprg\gsl\gsl\combination\file.c:102:20: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
      int status = fscanf (stream, IN_FORMAT, &j);  
                   ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/combination/file.c:102:20: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
      int status = fscanf (stream, IN_FORMAT, &j);  
                   ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
1 warning generated.
[378/1003] Building C object gsl/CMakeFiles/gsl.dir/combination/combination.c.obj
D:\a\aprg\aprg\gsl\gsl\combination\combination.c:49:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\combination\combination.c:49:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\combination\combination.c:50:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j ;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\combination\combination.c:50:11: note: FIX-IT applied suggested code changes
  size_t j ;
          ^
[379/1003] Building C object gsl/CMakeFiles/gsl.dir/combination/inline.c.obj
[380/1003] Building C object gsl/CMakeFiles/gsl.dir/multiset/init.c.obj
[381/1003] Building C object gsl/CMakeFiles/gsl.dir/multiset/file.c.obj
D:\a\aprg\aprg\gsl\gsl\multiset\file.c:104:20: warning: Call to function 'fscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
      int status = fscanf (stream, IN_FORMAT, &j);
                   ^~~~~~
D:\a\aprg\aprg\gsl\gsl\multiset\file.c:104:20: note: Call to function 'fscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'fscanf_s' in case of C11
      int status = fscanf (stream, IN_FORMAT, &j);
                   ^~~~~~
D:\a\aprg\aprg\gsl\gsl\multiset\file.c:104:20: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
      int status = fscanf (stream, IN_FORMAT, &j);
                   ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/multiset/file.c:104:20: warning: 'fscanf' is deprecated: This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
      int status = fscanf (stream, IN_FORMAT, &j);
                   ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h:1198:20: note: 'fscanf' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
1 warning generated.
[382/1003] Building C object gsl/CMakeFiles/gsl.dir/multiset/multiset.c.obj
D:\a\aprg\aprg\gsl\gsl\multiset\multiset.c:51:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\multiset\multiset.c:51:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\multiset\multiset.c:52:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j ;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\multiset\multiset.c:52:11: note: FIX-IT applied suggested code changes
  size_t j ;
          ^
[383/1003] Building C object gsl/CMakeFiles/gsl.dir/multiset/inline.c.obj
[384/1003] Building C object gsl/CMakeFiles/gsl.dir/sort/sort.c.obj
[385/1003] Building C object gsl/CMakeFiles/gsl.dir/sort/sortind.c.obj
D:\a\aprg\aprg\gsl\gsl\sort\sortind.c:61:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\sort\sortind.c:61:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\sort\sortind.c:62:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\sort\sortind.c:62:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
D:\a\aprg\aprg\gsl\gsl\sort\sortind.c:63:10: warning: variable 'N' is not initialized [cppcoreguidelines-init-variables]
  size_t N;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\sort\sortind.c:63:11: note: FIX-IT applied suggested code changes
  size_t N;
          ^
[386/1003] Building C object gsl/CMakeFiles/gsl.dir/sort/sortvec.c.obj
[387/1003] Building C object gsl/CMakeFiles/gsl.dir/sort/sortvecind.c.obj
[388/1003] Building C object gsl/CMakeFiles/gsl.dir/sort/subset.c.obj
[389/1003] Building C object gsl/CMakeFiles/gsl.dir/sort/subsetind.c.obj
[390/1003] Building C object gsl/CMakeFiles/gsl.dir/ieee-utils/print.c.obj
[391/1003] Building C object gsl/CMakeFiles/gsl.dir/ieee-utils/make_rep.c.obj
D:\a\aprg\aprg\gsl\gsl\ieee-utils\make_rep.c:49:7: warning: variable 'e' is not initialized [cppcoreguidelines-init-variables]
  int e;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\ieee-utils\make_rep.c:49:8: note: FIX-IT applied suggested code changes
  int e;
       ^
D:\a\aprg\aprg\gsl\gsl\ieee-utils\make_rep.c:50:7: warning: variable 'non_zero' is not initialized [cppcoreguidelines-init-variables]
  int non_zero;
      ^
               = 0
D:\a\aprg\aprg\gsl\gsl\ieee-utils\make_rep.c:50:15: note: FIX-IT applied suggested code changes
  int non_zero;
              ^
D:\a\aprg\aprg\gsl\gsl\ieee-utils\make_rep.c:95:7: warning: variable 'e' is not initialized [cppcoreguidelines-init-variables]
  int e;
      ^
        = 0
D:\a\aprg\aprg\gsl\gsl\ieee-utils\make_rep.c:95:8: note: FIX-IT applied suggested code changes
  int e;
       ^
D:\a\aprg\aprg\gsl\gsl\ieee-utils\make_rep.c:96:7: warning: variable 'non_zero' is not initialized [cppcoreguidelines-init-variables]
  int non_zero;
      ^
               = 0
D:\a\aprg\aprg\gsl\gsl\ieee-utils\make_rep.c:96:15: note: FIX-IT applied suggested code changes
  int non_zero;
              ^
D:\a\aprg\aprg\gsl\gsl\ieee-utils\make_rep.c:186:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if (exponent == 0)
  ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\ieee-utils\make_rep.c:186:3: note: FIX-IT applied suggested code changes
[392/1003] Building C object gsl/CMakeFiles/gsl.dir/ieee-utils/env.c.obj
D:\a\aprg\aprg\gsl\gsl\ieee-utils\env.c:28:20: warning: 'getenv' is deprecated: This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
  const char * p = getenv("GSL_IEEE_MODE") ;
                   ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h:1183:20: note: 'getenv' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(_dupenv_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/gsl/gsl/ieee-utils/env.c:28:20: warning: 'getenv' is deprecated: This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  const char * p = getenv("GSL_IEEE_MODE") ;
                   ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h:1183:20: note: 'getenv' has been explicitly marked deprecated here
    _Check_return_ _CRT_INSECURE_DEPRECATE(_dupenv_s)
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
1 warning generated.
[393/1003] Building C object gsl/CMakeFiles/gsl.dir/ieee-utils/fp.c.obj
[394/1003] Building C object gsl/CMakeFiles/gsl.dir/ieee-utils/read.c.obj
D:\a\aprg\aprg\gsl\gsl\ieee-utils\read.c:51:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcpy (start, description) ;
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\ieee-utils\read.c:51:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
  strcpy (start, description) ;
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\ieee-utils\read.c:51:3: warning: 'strcpy' is deprecated: This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
  strcpy (start, description) ;
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:130:1: note: 'strcpy' has been explicitly marked deprecated here
__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:\a\aprg\aprg\gsl\gsl\ieee-utils\read.c:61:9: warning: variable 'new_precision' is not initialized [cppcoreguidelines-init-variables]
    int new_precision;
        ^
                      = 0
D:\a\aprg\aprg\gsl\gsl\ieee-utils\read.c:61:22: note: FIX-IT applied suggested code changes
    int new_precision;
                     ^
D:\a\aprg\aprg\gsl\gsl\ieee-utils\read.c:62:9: warning: variable 'new_rounding' is not initialized [cppcoreguidelines-init-variables]
    int new_rounding;
        ^
                     = 0
D:\a\aprg\aprg\gsl\gsl\ieee-utils\read.c:62:21: note: FIX-IT applied suggested code changes
    int new_rounding;
                    ^
D:\a\aprg\aprg\gsl\gsl\ieee-utils\read.c:63:9: warning: variable 'new_exception' is not initialized [cppcoreguidelines-init-variables]
    int new_exception ;
        ^
                      = 0
D:\a\aprg\aprg\gsl\gsl\ieee-utils\read.c:63:22: note: FIX-IT applied suggested code changes
    int new_exception ;
                     ^
D:/a/aprg/aprg/gsl/gsl/ieee-utils/read.c:51:3: warning: 'strcpy' is deprecated: This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
  strcpy (start, description) ;
  ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h:130:1: note: 'strcpy' has been explicitly marked deprecated here
__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1(
^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:835:5: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1'
    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX(_ReturnType, _ReturnPolicy, _DeclSpec, _FuncName, _FuncName##_s, _DstType, _SalAttributeDst, _DstType, _Dst, _TType1, _TArg1)
    ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:1894:17: note: expanded from macro '__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_EX'
                _CRT_INSECURE_DEPRECATE(_SecureFuncName) _DeclSpec _ReturnType __cdecl _FuncName(_SalAttributeDst _DstType *_Dst, _TType1 _TArg1);
                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
1 warning generated.
[395/1003] Building C object gsl/CMakeFiles/gsl.dir/blas/blas.c.obj
[396/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/cod.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:85:11: warning: variable 'status' is not initialized [cppcoreguidelines-init-variables]
      int status;
          ^
                 = 0
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:85:17: note: FIX-IT applied suggested code changes
      int status;
                ^
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:86:11: warning: variable 'signum' is not initialized [cppcoreguidelines-init-variables]
      int signum;
          ^
                 = 0
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:86:17: note: FIX-IT applied suggested code changes
      int signum;
                ^
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:489:18: warning: Value stored to 'tauk' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
          double tauk = NAN;
                 ^~~~
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:489:18: note: Value stored to 'tauk' during its initialization is never read
          double tauk = NAN;
                 ^~~~
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:511:10: warning: variable 'beta' is not initialized [cppcoreguidelines-init-variables]
  double beta;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:511:14: note: FIX-IT applied suggested code changes
  double beta;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:512:10: warning: variable 'tau' is not initialized [cppcoreguidelines-init-variables]
  double tau;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:512:13: note: FIX-IT applied suggested code changes
  double tau;
            ^
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:570:7: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
      double d1, d;
      ^~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:570:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:570:14: warning: variable 'd1' is not initialized [cppcoreguidelines-init-variables]
      double d1, d;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:570:18: warning: variable 'd' is not initialized [cppcoreguidelines-init-variables]
      double d1, d;
                 ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:712:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:712:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:713:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:713:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:714:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:714:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:748:18: warning: variable 'sine' is not initialized [cppcoreguidelines-init-variables]
          double sine;
                 ^
                      = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:748:22: note: FIX-IT applied suggested code changes
          double sine;
                     ^
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:749:18: warning: variable 'cosine' is not initialized [cppcoreguidelines-init-variables]
          double cosine;
                 ^
                        = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\cod.c:749:24: note: FIX-IT applied suggested code changes
          double cosine;
                       ^
[397/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/condest.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:79:14: warning: variable 'gamma' is not initialized [cppcoreguidelines-init-variables]
      double gamma;
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:79:19: note: FIX-IT applied suggested code changes
      double gamma;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:80:14: warning: variable 'gamma_old' is not initialized [cppcoreguidelines-init-variables]
      double gamma_old;
             ^
                       = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:80:23: note: FIX-IT applied suggested code changes
      double gamma_old;
                      ^
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:81:14: warning: variable 'temp' is not initialized [cppcoreguidelines-init-variables]
      double temp;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:81:18: note: FIX-IT applied suggested code changes
      double temp;
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:82:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:82:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:83:14: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
      size_t k;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:83:15: note: FIX-IT applied suggested code changes
      size_t k;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:139:45: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          double term = 1.0 + (double) i / (N - 1.0);
                                            ^
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:147:55: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      temp = 2.0 * gsl_blas_dasum(&x.vector) / (3.0 * N);
                                                      ^
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:212:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:212:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:213:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\condest.c:213:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
[398/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/invtri.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\invtri.c:94:22: warning: Value stored to 'aii' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
              double aii = NAN;
                     ^~~
D:\a\aprg\aprg\gsl\gsl\linalg\invtri.c:94:22: note: Value stored to 'aii' during its initialization is never read
              double aii = NAN;
                     ^~~
D:\a\aprg\aprg\gsl\gsl\linalg\invtri.c:123:22: warning: Value stored to 'ajj' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
              double ajj = NAN;
                     ^~~
D:\a\aprg\aprg\gsl\gsl\linalg\invtri.c:123:22: note: Value stored to 'ajj' during its initialization is never read
              double ajj = NAN;
                     ^~~
[399/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/invtri_complex.c.obj
[400/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/multiply.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:38:14: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
      double a;
             ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:23:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:38:15: note: FIX-IT applied suggested code changes
      double a;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:39:14: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
      double b;
             ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:39:15: note: FIX-IT applied suggested code changes
      double b;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:40:14: warning: Value stored to 'temp' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double temp = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:40:14: note: Value stored to 'temp' during its initialization is never read
      double temp = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:41:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:41:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:42:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:42:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:43:14: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
      size_t k;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:43:15: note: FIX-IT applied suggested code changes
      size_t k;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:85:43: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
      if (modA & GSL_LINALG_MOD_TRANSPOSE)
                                          ^
                                           {
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:85:43: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:86:38: note: FIX-IT applied suggested code changes
        SWAP_SIZE_T (dim1_A, dim2_A);
                                     ^
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:87:43: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
      if (modB & GSL_LINALG_MOD_TRANSPOSE)
                                          ^
                                           {
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:87:43: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:88:38: note: FIX-IT applied suggested code changes
        SWAP_SIZE_T (dim1_B, dim2_B);
                                     ^
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:96:11: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
          double a, b;
          ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:96:11: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:96:18: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
          double a, b;
                 ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:96:21: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
          double a, b;
                    ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:97:18: warning: variable 'temp' is not initialized [cppcoreguidelines-init-variables]
          double temp;
                 ^
                      = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:97:22: note: FIX-IT applied suggested code changes
          double temp;
                     ^
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:98:11: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
          size_t i, j, k;
          ^~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:98:11: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:98:18: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
          size_t i, j, k;
                 ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:98:21: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
          size_t i, j, k;
                    ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:98:24: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
          size_t i, j, k;
                       ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:99:11: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
          size_t a1, a2, b1, b2;
          ^~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:99:11: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:99:18: warning: variable 'a1' is not initialized [cppcoreguidelines-init-variables]
          size_t a1, a2, b1, b2;
                 ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:99:22: warning: variable 'a2' is not initialized [cppcoreguidelines-init-variables]
          size_t a1, a2, b1, b2;
                     ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:99:26: warning: variable 'b1' is not initialized [cppcoreguidelines-init-variables]
          size_t a1, a2, b1, b2;
                         ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:99:30: warning: variable 'b2' is not initialized [cppcoreguidelines-init-variables]
          size_t a1, a2, b1, b2;
                             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:109:55: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
                  if (modA & GSL_LINALG_MOD_TRANSPOSE)
                                                      ^
                                                       {
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:109:55: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:110:42: note: FIX-IT applied suggested code changes
                    SWAP_SIZE_T (a1, a2);
                                         ^
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:111:55: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
                  if (modB & GSL_LINALG_MOD_TRANSPOSE)
                                                      ^
                                                       {
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:111:55: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:112:42: note: FIX-IT applied suggested code changes
                    SWAP_SIZE_T (b1, b2);
                                         ^
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:124:59: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
                      if (modA & GSL_LINALG_MOD_TRANSPOSE)
                                                          ^
                                                           {
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:124:59: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:125:46: note: FIX-IT applied suggested code changes
                        SWAP_SIZE_T (a1, a2);
                                             ^
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:126:59: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
                      if (modB & GSL_LINALG_MOD_TRANSPOSE)
                                                          ^
                                                           {
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:126:59: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\multiply.c:127:46: note: FIX-IT applied suggested code changes
                        SWAP_SIZE_T (b1, b2);
                                             ^
[401/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/exponential.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\exponential.c:73:10: warning: variable 'min' is not initialized [cppcoreguidelines-init-variables]
  double min;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\exponential.c:27:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\linalg\exponential.c:73:13: note: FIX-IT applied suggested code changes
  double min;
            ^
D:\a\aprg\aprg\gsl\gsl\linalg\exponential.c:74:10: warning: variable 'max' is not initialized [cppcoreguidelines-init-variables]
  double max;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\exponential.c:74:13: note: FIX-IT applied suggested code changes
  double max;
            ^
D:\a\aprg\aprg\gsl\gsl\linalg\exponential.c:87:21: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  } if(norm_A < 0.1) return mvl_tab[mode_prec][1];
                    ^
                     {
D:\a\aprg\aprg\gsl\gsl\linalg\exponential.c:87:21: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\exponential.c:88:3: note: FIX-IT applied suggested code changes
  else if(norm_A < 1.0) return mvl_tab[mode_prec][2];
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\exponential.c:88:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if(norm_A < 1.0) return mvl_tab[mode_prec][2];
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\exponential.c:88:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\exponential.c:88:24: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  else if(norm_A < 1.0) return mvl_tab[mode_prec][2];
                       ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\exponential.c:89:25: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  else if(norm_A < 10.0) return mvl_tab[mode_prec][3];
                        ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\exponential.c:90:26: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  else if(norm_A < 100.0) return mvl_tab[mode_prec][4];
                         ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\exponential.c:91:27: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  else if(norm_A < 1000.0) return mvl_tab[mode_prec][5];
                          ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\exponential.c:101:25: warning: narrowing conversion from 'unsigned int' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    const int extra_i = (unsigned int) ceil(extra);
                        ^
[402/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/tridiag.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:54:7: warning: Potential leak of memory pointed to by 'alpha' [clang-analyzer-unix.Malloc]
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:478:6: note: Assuming 'diag->size' is equal to 'rhs->size'
  if(diag->size != rhs->size)
     ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:478:3: note: Taking false branch
  if(diag->size != rhs->size)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:482:12: note: Assuming the condition is false
  else if (offdiag->size != rhs->size-1)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:482:8: note: Taking false branch
  else if (offdiag->size != rhs->size-1)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:486:12: note: Assuming 'solution->size' is equal to 'rhs->size'
  else if (solution->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:486:8: note: Taking false branch
  else if (solution->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:492:14: note: Calling 'solve_tridiag'
      return solve_tridiag(diag->data, diag->stride,
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:48:30: note: Memory is allocated
  double *alpha = (double *) malloc (N * sizeof (double));
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:52:7: note: Assuming 'gamma' is equal to null
  if (gamma == 0 || alpha == 0 || c == 0 || z == 0)
      ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:52:18: note: Left side of '||' is true
  if (gamma == 0 || alpha == 0 || c == 0 || z == 0)
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:54:7: note: Potential leak of memory pointed to by 'alpha'
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:54:7: warning: Potential leak of memory pointed to by 'c' [clang-analyzer-unix.Malloc]
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:478:6: note: Assuming 'diag->size' is equal to 'rhs->size'
  if(diag->size != rhs->size)
     ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:478:3: note: Taking false branch
  if(diag->size != rhs->size)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:482:12: note: Assuming the condition is false
  else if (offdiag->size != rhs->size-1)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:482:8: note: Taking false branch
  else if (offdiag->size != rhs->size-1)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:486:12: note: Assuming 'solution->size' is equal to 'rhs->size'
  else if (solution->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:486:8: note: Taking false branch
  else if (solution->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:492:14: note: Calling 'solve_tridiag'
      return solve_tridiag(diag->data, diag->stride,
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:49:26: note: Memory is allocated
  double *c = (double *) malloc (N * sizeof (double));
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:52:7: note: Assuming 'gamma' is equal to null
  if (gamma == 0 || alpha == 0 || c == 0 || z == 0)
      ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:52:18: note: Left side of '||' is true
  if (gamma == 0 || alpha == 0 || c == 0 || z == 0)
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:54:7: note: Potential leak of memory pointed to by 'c'
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:54:7: warning: Potential leak of memory pointed to by 'gamma' [clang-analyzer-unix.Malloc]
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:478:6: note: Assuming 'diag->size' is equal to 'rhs->size'
  if(diag->size != rhs->size)
     ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:478:3: note: Taking false branch
  if(diag->size != rhs->size)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:482:12: note: Assuming the condition is false
  else if (offdiag->size != rhs->size-1)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:482:8: note: Taking false branch
  else if (offdiag->size != rhs->size-1)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:486:12: note: Assuming 'solution->size' is equal to 'rhs->size'
  else if (solution->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:486:8: note: Taking false branch
  else if (solution->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:492:14: note: Calling 'solve_tridiag'
      return solve_tridiag(diag->data, diag->stride,
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:47:30: note: Memory is allocated
  double *gamma = (double *) malloc (N * sizeof (double));
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:52:7: note: Assuming 'gamma' is not equal to null
  if (gamma == 0 || alpha == 0 || c == 0 || z == 0)
      ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:52:7: note: Left side of '||' is false
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:52:21: note: Assuming 'alpha' is equal to null
  if (gamma == 0 || alpha == 0 || c == 0 || z == 0)
                    ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:52:32: note: Left side of '||' is true
  if (gamma == 0 || alpha == 0 || c == 0 || z == 0)
                               ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:54:7: note: Potential leak of memory pointed to by 'gamma'
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:54:7: warning: Potential leak of memory pointed to by 'z' [clang-analyzer-unix.Malloc]
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:478:6: note: Assuming 'diag->size' is equal to 'rhs->size'
  if(diag->size != rhs->size)
     ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:478:3: note: Taking false branch
  if(diag->size != rhs->size)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:482:12: note: Assuming the condition is false
  else if (offdiag->size != rhs->size-1)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:482:8: note: Taking false branch
  else if (offdiag->size != rhs->size-1)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:486:12: note: Assuming 'solution->size' is equal to 'rhs->size'
  else if (solution->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:486:8: note: Taking false branch
  else if (solution->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:492:14: note: Calling 'solve_tridiag'
      return solve_tridiag(diag->data, diag->stride,
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:50:26: note: Memory is allocated
  double *z = (double *) malloc (N * sizeof (double));
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:52:7: note: Assuming 'gamma' is equal to null
  if (gamma == 0 || alpha == 0 || c == 0 || z == 0)
      ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:52:18: note: Left side of '||' is true
  if (gamma == 0 || alpha == 0 || c == 0 || z == 0)
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:54:7: note: Potential leak of memory pointed to by 'z'
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:58:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:58:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:59:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:59:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:152:7: warning: Potential leak of memory pointed to by 'alpha' [clang-analyzer-unix.Malloc]
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:509:6: note: Assuming 'diag->size' is equal to 'rhs->size'
  if(diag->size != rhs->size)
     ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:509:3: note: Taking false branch
  if(diag->size != rhs->size)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:513:12: note: Assuming the condition is false
  else if (abovediag->size != rhs->size-1)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:513:8: note: Taking false branch
  else if (abovediag->size != rhs->size-1)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:517:12: note: Assuming the condition is false
  else if (belowdiag->size != rhs->size-1)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:517:8: note: Taking false branch
  else if (belowdiag->size != rhs->size-1)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:521:12: note: Assuming 'solution->size' is equal to 'rhs->size'
  else if (solution->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:521:8: note: Taking false branch
  else if (solution->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:527:14: note: Calling 'solve_tridiag_nonsym'
      return solve_tridiag_nonsym(diag->data, diag->stride,
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:147:30: note: Memory is allocated
  double *alpha = (double *) malloc (N * sizeof (double));
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:150:7: note: Assuming 'alpha' is not equal to null
  if (alpha == 0 || z == 0)
      ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:150:7: note: Left side of '||' is false
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:150:21: note: Assuming 'z' is equal to null
  if (alpha == 0 || z == 0)
                    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:150:3: note: Taking true branch
  if (alpha == 0 || z == 0)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:152:7: note: Potential leak of memory pointed to by 'alpha'
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:152:7: warning: Potential leak of memory pointed to by 'z' [clang-analyzer-unix.Malloc]
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:509:6: note: Assuming 'diag->size' is equal to 'rhs->size'
  if(diag->size != rhs->size)
     ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:509:3: note: Taking false branch
  if(diag->size != rhs->size)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:513:12: note: Assuming the condition is false
  else if (abovediag->size != rhs->size-1)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:513:8: note: Taking false branch
  else if (abovediag->size != rhs->size-1)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:517:12: note: Assuming the condition is false
  else if (belowdiag->size != rhs->size-1)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:517:8: note: Taking false branch
  else if (belowdiag->size != rhs->size-1)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:521:12: note: Assuming 'solution->size' is equal to 'rhs->size'
  else if (solution->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:521:8: note: Taking false branch
  else if (solution->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:527:14: note: Calling 'solve_tridiag_nonsym'
      return solve_tridiag_nonsym(diag->data, diag->stride,
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:148:26: note: Memory is allocated
  double *z = (double *) malloc (N * sizeof (double));
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:150:7: note: Assuming 'alpha' is equal to null
  if (alpha == 0 || z == 0)
      ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:150:18: note: Left side of '||' is true
  if (alpha == 0 || z == 0)
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:152:7: note: Potential leak of memory pointed to by 'z'
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:156:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:156:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:157:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:157:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:234:7: warning: Potential leak of memory pointed to by 'alpha' [clang-analyzer-unix.Malloc]
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:544:6: note: Assuming 'diag->size' is equal to 'rhs->size'
  if(diag->size != rhs->size)
     ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:544:3: note: Taking false branch
  if(diag->size != rhs->size)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:548:12: note: Assuming 'offdiag->size' is equal to 'rhs->size'
  else if (offdiag->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:548:8: note: Taking false branch
  else if (offdiag->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:552:12: note: Assuming 'solution->size' is equal to 'rhs->size'
  else if (solution->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:552:8: note: Taking false branch
  else if (solution->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:556:12: note: Assuming field 'size' is >= 3
  else if (diag->size < 3)
           ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:556:8: note: Taking false branch
  else if (diag->size < 3)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:562:14: note: Calling 'solve_cyc_tridiag'
      return solve_cyc_tridiag(diag->data, diag->stride,
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:228:31: note: Memory is allocated
  double * alpha = (double *) malloc (N * sizeof (double));
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:232:7: note: Assuming 'delta' is equal to null
  if (delta == 0 || gamma == 0 || alpha == 0 || c == 0 || z == 0)
      ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:232:18: note: Left side of '||' is true
  if (delta == 0 || gamma == 0 || alpha == 0 || c == 0 || z == 0)
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:234:7: note: Potential leak of memory pointed to by 'alpha'
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:234:7: warning: Potential leak of memory pointed to by 'c' [clang-analyzer-unix.Malloc]
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:544:6: note: Assuming 'diag->size' is equal to 'rhs->size'
  if(diag->size != rhs->size)
     ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:544:3: note: Taking false branch
  if(diag->size != rhs->size)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:548:12: note: Assuming 'offdiag->size' is equal to 'rhs->size'
  else if (offdiag->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:548:8: note: Taking false branch
  else if (offdiag->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:552:12: note: Assuming 'solution->size' is equal to 'rhs->size'
  else if (solution->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:552:8: note: Taking false branch
  else if (solution->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:556:12: note: Assuming field 'size' is >= 3
  else if (diag->size < 3)
           ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:556:8: note: Taking false branch
  else if (diag->size < 3)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:562:14: note: Calling 'solve_cyc_tridiag'
      return solve_cyc_tridiag(diag->data, diag->stride,
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:229:27: note: Memory is allocated
  double * c = (double *) malloc (N * sizeof (double));
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:232:7: note: Assuming 'delta' is equal to null
  if (delta == 0 || gamma == 0 || alpha == 0 || c == 0 || z == 0)
      ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:232:18: note: Left side of '||' is true
  if (delta == 0 || gamma == 0 || alpha == 0 || c == 0 || z == 0)
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:234:7: note: Potential leak of memory pointed to by 'c'
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:234:7: warning: Potential leak of memory pointed to by 'delta' [clang-analyzer-unix.Malloc]
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:544:6: note: Assuming 'diag->size' is equal to 'rhs->size'
  if(diag->size != rhs->size)
     ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:544:3: note: Taking false branch
  if(diag->size != rhs->size)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:548:12: note: Assuming 'offdiag->size' is equal to 'rhs->size'
  else if (offdiag->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:548:8: note: Taking false branch
  else if (offdiag->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:552:12: note: Assuming 'solution->size' is equal to 'rhs->size'
  else if (solution->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:552:8: note: Taking false branch
  else if (solution->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:556:12: note: Assuming field 'size' is >= 3
  else if (diag->size < 3)
           ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:556:8: note: Taking false branch
  else if (diag->size < 3)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:562:14: note: Calling 'solve_cyc_tridiag'
      return solve_cyc_tridiag(diag->data, diag->stride,
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:226:31: note: Memory is allocated
  double * delta = (double *) malloc (N * sizeof (double));
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:232:7: note: Assuming 'delta' is not equal to null
  if (delta == 0 || gamma == 0 || alpha == 0 || c == 0 || z == 0)
      ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:232:7: note: Left side of '||' is false
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:232:21: note: Assuming 'gamma' is equal to null
  if (delta == 0 || gamma == 0 || alpha == 0 || c == 0 || z == 0)
                    ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:232:32: note: Left side of '||' is true
  if (delta == 0 || gamma == 0 || alpha == 0 || c == 0 || z == 0)
                               ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:234:7: note: Potential leak of memory pointed to by 'delta'
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:234:7: warning: Potential leak of memory pointed to by 'gamma' [clang-analyzer-unix.Malloc]
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:544:6: note: Assuming 'diag->size' is equal to 'rhs->size'
  if(diag->size != rhs->size)
     ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:544:3: note: Taking false branch
  if(diag->size != rhs->size)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:548:12: note: Assuming 'offdiag->size' is equal to 'rhs->size'
  else if (offdiag->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:548:8: note: Taking false branch
  else if (offdiag->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:552:12: note: Assuming 'solution->size' is equal to 'rhs->size'
  else if (solution->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:552:8: note: Taking false branch
  else if (solution->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:556:12: note: Assuming field 'size' is >= 3
  else if (diag->size < 3)
           ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:556:8: note: Taking false branch
  else if (diag->size < 3)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:562:14: note: Calling 'solve_cyc_tridiag'
      return solve_cyc_tridiag(diag->data, diag->stride,
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:227:31: note: Memory is allocated
  double * gamma = (double *) malloc (N * sizeof (double));
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:232:7: note: Assuming 'delta' is equal to null
  if (delta == 0 || gamma == 0 || alpha == 0 || c == 0 || z == 0)
      ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:232:18: note: Left side of '||' is true
  if (delta == 0 || gamma == 0 || alpha == 0 || c == 0 || z == 0)
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:234:7: note: Potential leak of memory pointed to by 'gamma'
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:234:7: warning: Potential leak of memory pointed to by 'z' [clang-analyzer-unix.Malloc]
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:544:6: note: Assuming 'diag->size' is equal to 'rhs->size'
  if(diag->size != rhs->size)
     ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:544:3: note: Taking false branch
  if(diag->size != rhs->size)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:548:12: note: Assuming 'offdiag->size' is equal to 'rhs->size'
  else if (offdiag->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:548:8: note: Taking false branch
  else if (offdiag->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:552:12: note: Assuming 'solution->size' is equal to 'rhs->size'
  else if (solution->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:552:8: note: Taking false branch
  else if (solution->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:556:12: note: Assuming field 'size' is >= 3
  else if (diag->size < 3)
           ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:556:8: note: Taking false branch
  else if (diag->size < 3)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:562:14: note: Calling 'solve_cyc_tridiag'
      return solve_cyc_tridiag(diag->data, diag->stride,
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:230:27: note: Memory is allocated
  double * z = (double *) malloc (N * sizeof (double));
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:232:7: note: Assuming 'delta' is equal to null
  if (delta == 0 || gamma == 0 || alpha == 0 || c == 0 || z == 0)
      ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:232:18: note: Left side of '||' is true
  if (delta == 0 || gamma == 0 || alpha == 0 || c == 0 || z == 0)
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:234:7: note: Potential leak of memory pointed to by 'z'
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:238:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:238:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:239:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:239:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:363:7: warning: Potential leak of memory pointed to by 'alpha' [clang-analyzer-unix.Malloc]
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:578:6: note: Assuming 'diag->size' is equal to 'rhs->size'
  if(diag->size != rhs->size)
     ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:578:3: note: Taking false branch
  if(diag->size != rhs->size)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:582:12: note: Assuming 'abovediag->size' is equal to 'rhs->size'
  else if (abovediag->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:582:8: note: Taking false branch
  else if (abovediag->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:586:12: note: Assuming 'belowdiag->size' is equal to 'rhs->size'
  else if (belowdiag->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:586:8: note: Taking false branch
  else if (belowdiag->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:590:12: note: Assuming 'solution->size' is equal to 'rhs->size'
  else if (solution->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:590:8: note: Taking false branch
  else if (solution->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:594:12: note: Assuming field 'size' is >= 3
  else if (diag->size < 3)
           ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:594:8: note: Taking false branch
  else if (diag->size < 3)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:600:14: note: Calling 'solve_cyc_tridiag_nonsym'
      return solve_cyc_tridiag_nonsym(diag->data, diag->stride,
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:356:30: note: Memory is allocated
  double *alpha = (double *) malloc (N * sizeof (double));
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:361:7: note: Assuming 'alpha' is not equal to null
  if (alpha == 0 || zb == 0 || zu == 0 || w == 0)
      ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:361:7: note: Left side of '||' is false
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:361:21: note: Assuming 'zb' is equal to null
  if (alpha == 0 || zb == 0 || zu == 0 || w == 0)
                    ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:361:29: note: Left side of '||' is true
  if (alpha == 0 || zb == 0 || zu == 0 || w == 0)
                            ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:363:7: note: Potential leak of memory pointed to by 'alpha'
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:363:7: warning: Potential leak of memory pointed to by 'w' [clang-analyzer-unix.Malloc]
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:578:6: note: Assuming 'diag->size' is equal to 'rhs->size'
  if(diag->size != rhs->size)
     ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:578:3: note: Taking false branch
  if(diag->size != rhs->size)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:582:12: note: Assuming 'abovediag->size' is equal to 'rhs->size'
  else if (abovediag->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:582:8: note: Taking false branch
  else if (abovediag->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:586:12: note: Assuming 'belowdiag->size' is equal to 'rhs->size'
  else if (belowdiag->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:586:8: note: Taking false branch
  else if (belowdiag->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:590:12: note: Assuming 'solution->size' is equal to 'rhs->size'
  else if (solution->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:590:8: note: Taking false branch
  else if (solution->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:594:12: note: Assuming field 'size' is >= 3
  else if (diag->size < 3)
           ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:594:8: note: Taking false branch
  else if (diag->size < 3)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:600:14: note: Calling 'solve_cyc_tridiag_nonsym'
      return solve_cyc_tridiag_nonsym(diag->data, diag->stride,
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:359:26: note: Memory is allocated
  double *w = (double *) malloc (N * sizeof (double));
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:361:7: note: Assuming 'alpha' is equal to null
  if (alpha == 0 || zb == 0 || zu == 0 || w == 0)
      ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:361:18: note: Left side of '||' is true
  if (alpha == 0 || zb == 0 || zu == 0 || w == 0)
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:363:7: note: Potential leak of memory pointed to by 'w'
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:363:7: warning: Potential leak of memory pointed to by 'zb' [clang-analyzer-unix.Malloc]
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:578:6: note: Assuming 'diag->size' is equal to 'rhs->size'
  if(diag->size != rhs->size)
     ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:578:3: note: Taking false branch
  if(diag->size != rhs->size)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:582:12: note: Assuming 'abovediag->size' is equal to 'rhs->size'
  else if (abovediag->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:582:8: note: Taking false branch
  else if (abovediag->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:586:12: note: Assuming 'belowdiag->size' is equal to 'rhs->size'
  else if (belowdiag->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:586:8: note: Taking false branch
  else if (belowdiag->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:590:12: note: Assuming 'solution->size' is equal to 'rhs->size'
  else if (solution->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:590:8: note: Taking false branch
  else if (solution->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:594:12: note: Assuming field 'size' is >= 3
  else if (diag->size < 3)
           ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:594:8: note: Taking false branch
  else if (diag->size < 3)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:600:14: note: Calling 'solve_cyc_tridiag_nonsym'
      return solve_cyc_tridiag_nonsym(diag->data, diag->stride,
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:357:27: note: Memory is allocated
  double *zb = (double *) malloc (N * sizeof (double));
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:361:7: note: Assuming 'alpha' is equal to null
  if (alpha == 0 || zb == 0 || zu == 0 || w == 0)
      ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:361:18: note: Left side of '||' is true
  if (alpha == 0 || zb == 0 || zu == 0 || w == 0)
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:363:7: note: Potential leak of memory pointed to by 'zb'
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:363:7: warning: Potential leak of memory pointed to by 'zu' [clang-analyzer-unix.Malloc]
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:578:6: note: Assuming 'diag->size' is equal to 'rhs->size'
  if(diag->size != rhs->size)
     ^~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:578:3: note: Taking false branch
  if(diag->size != rhs->size)
  ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:582:12: note: Assuming 'abovediag->size' is equal to 'rhs->size'
  else if (abovediag->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:582:8: note: Taking false branch
  else if (abovediag->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:586:12: note: Assuming 'belowdiag->size' is equal to 'rhs->size'
  else if (belowdiag->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:586:8: note: Taking false branch
  else if (belowdiag->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:590:12: note: Assuming 'solution->size' is equal to 'rhs->size'
  else if (solution->size != rhs->size)
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:590:8: note: Taking false branch
  else if (solution->size != rhs->size)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:594:12: note: Assuming field 'size' is >= 3
  else if (diag->size < 3)
           ^~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:594:8: note: Taking false branch
  else if (diag->size < 3)
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:600:14: note: Calling 'solve_cyc_tridiag_nonsym'
      return solve_cyc_tridiag_nonsym(diag->data, diag->stride,
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:358:27: note: Memory is allocated
  double *zu = (double *) malloc (N * sizeof (double));
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:361:7: note: Assuming 'alpha' is equal to null
  if (alpha == 0 || zb == 0 || zu == 0 || w == 0)
      ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:361:18: note: Left side of '||' is true
  if (alpha == 0 || zb == 0 || zu == 0 || w == 0)
                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:363:7: note: Potential leak of memory pointed to by 'zu'
      GSL_ERROR("failed to allocate working space", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:106:8: note: expanded from macro 'GSL_ERROR'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:367:14: warning: Value stored to 'beta' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double beta = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:367:14: note: Value stored to 'beta' during its initialization is never read
      double beta = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:422:16: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
        size_t i;
               ^
                 = 0
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:422:17: note: FIX-IT applied suggested code changes
        size_t i;
                ^
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:423:16: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
        size_t j;
               ^
                 = 0
D:\a\aprg\aprg\gsl\gsl\linalg\tridiag.c:423:17: note: FIX-IT applied suggested code changes
        size_t j;
                ^
[403/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/lu.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\lu.c:141:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\lu.c:141:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\lu.c:142:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\lu.c:142:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\lu.c:493:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\lu.c:493:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\lu.c:510:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\lu.c:510:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\lu.c:526:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\lu.c:526:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\lu.c:552:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\lu.c:552:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
[404/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/lu_band.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\lu_band.c:183:56: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                  (int) N, (int) (lb + ub), LUB->data, LUB->tda,
                                                       ^
D:\a\aprg\aprg\gsl\gsl\linalg\lu_band.c:184:28: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                  x->data, x->stride);
                           ^
[405/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/luc.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\luc.c:144:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\luc.c:144:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\luc.c:145:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\luc.c:145:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\luc.c:508:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\luc.c:508:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\luc.c:526:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\luc.c:526:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\luc.c:544:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\luc.c:544:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\luc.c:573:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\luc.c:573:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
[406/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/hh.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\hh.c:76:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\hh.c:76:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\hh.c:77:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\hh.c:77:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\hh.c:78:14: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
      size_t k;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\hh.c:78:15: note: FIX-IT applied suggested code changes
      size_t k;
              ^
[407/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/ql.c.obj
[408/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/qr.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:72:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:72:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:516:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:516:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:517:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:517:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:580:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:580:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:581:14: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
      size_t k;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:581:15: note: FIX-IT applied suggested code changes
      size_t k;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:582:14: warning: Value stored to 'w0' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double w0 = NAN;
             ^~
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:582:14: note: Value stored to 'w0' during its initialization is never read
      double w0 = NAN;
             ^~
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:593:18: warning: variable 'c' is not initialized [cppcoreguidelines-init-variables]
          double c;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:593:19: note: FIX-IT applied suggested code changes
          double c;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:594:18: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
          double s;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:594:19: note: FIX-IT applied suggested code changes
          double s;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:619:18: warning: variable 'c' is not initialized [cppcoreguidelines-init-variables]
          double c;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:619:19: note: FIX-IT applied suggested code changes
          double c;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:620:18: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
          double s;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:620:19: note: FIX-IT applied suggested code changes
          double s;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:648:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else
  ^~~~
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:648:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\qr.c:649:5: note: FIX-IT applied suggested code changes
    {
    ^
[409/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/qr_band.c.obj
[410/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/qrc.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\qrc.c:312:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\qrc.c:312:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\qrc.c:313:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\qrc.c:313:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
[411/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/qrpt.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:108:18: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
          size_t j;
                 ^
                   = 0
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:108:19: note: FIX-IT applied suggested code changes
          size_t j;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:404:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else
  ^~~~
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:404:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:405:5: note: FIX-IT applied suggested code changes
    {
    ^
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:525:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:525:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:526:14: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
      size_t k;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:526:15: note: FIX-IT applied suggested code changes
      size_t k;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:527:14: warning: Value stored to 'w0' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double w0 = NAN;
             ^~
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:527:14: note: Value stored to 'w0' during its initialization is never read
      double w0 = NAN;
             ^~
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:538:18: warning: variable 'c' is not initialized [cppcoreguidelines-init-variables]
          double c;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:538:19: note: FIX-IT applied suggested code changes
          double c;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:539:18: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
          double s;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:539:19: note: FIX-IT applied suggested code changes
          double s;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:565:18: warning: variable 'c' is not initialized [cppcoreguidelines-init-variables]
          double c;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:565:19: note: FIX-IT applied suggested code changes
          double c;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:566:18: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
          double s;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:566:19: note: FIX-IT applied suggested code changes
          double s;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:598:10: warning: Value stored to 'eps' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double eps = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:598:10: note: Value stored to 'eps' during its initialization is never read
  double eps = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:604:14: warning: variable 'min' is not initialized [cppcoreguidelines-init-variables]
      double min;
             ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:604:17: note: FIX-IT applied suggested code changes
      double min;
                ^
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:605:14: warning: variable 'max' is not initialized [cppcoreguidelines-init-variables]
      double max;
             ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:605:17: note: FIX-IT applied suggested code changes
      double max;
                ^
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:606:14: warning: variable 'absmax' is not initialized [cppcoreguidelines-init-variables]
      double absmax;
             ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:606:20: note: FIX-IT applied suggested code changes
      double absmax;
                   ^
D:\a\aprg\aprg\gsl\gsl\linalg\qrpt.c:613:20: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      eps = 20.0 * (M + N) * pow(2.0, (double) ee) * GSL_DBL_EPSILON;
                   ^
[412/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/qr_ud.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ud.c:482:10: warning: variable 'alpha' is not initialized [cppcoreguidelines-init-variables]
  double alpha;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ud.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ud.c:482:15: note: FIX-IT applied suggested code changes
  double alpha;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ud.c:483:10: warning: variable 'beta' is not initialized [cppcoreguidelines-init-variables]
  double beta;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ud.c:483:14: note: FIX-IT applied suggested code changes
  double beta;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ud.c:484:10: warning: variable 'tau' is not initialized [cppcoreguidelines-init-variables]
  double tau ;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ud.c:484:13: note: FIX-IT applied suggested code changes
  double tau ;
            ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ud.c:550:10: warning: variable 'alpha' is not initialized [cppcoreguidelines-init-variables]
  double alpha;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ud.c:550:15: note: FIX-IT applied suggested code changes
  double alpha;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ud.c:551:10: warning: variable 'beta' is not initialized [cppcoreguidelines-init-variables]
  double beta;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ud.c:551:14: note: FIX-IT applied suggested code changes
  double beta;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ud.c:552:10: warning: variable 'tau' is not initialized [cppcoreguidelines-init-variables]
  double tau ;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ud.c:552:13: note: FIX-IT applied suggested code changes
  double tau ;
            ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ud.c:555:10: warning: Value stored to 'xnorm' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double xnorm = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ud.c:555:10: note: Value stored to 'xnorm' during its initialization is never read
  double xnorm = NAN;
         ^~~~~
[413/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/qr_ur.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ur.c:217:10: warning: variable 'alpha' is not initialized [cppcoreguidelines-init-variables]
  double alpha;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ur.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ur.c:217:15: note: FIX-IT applied suggested code changes
  double alpha;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ur.c:218:10: warning: variable 'beta' is not initialized [cppcoreguidelines-init-variables]
  double beta;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ur.c:218:14: note: FIX-IT applied suggested code changes
  double beta;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ur.c:219:10: warning: variable 'tau' is not initialized [cppcoreguidelines-init-variables]
  double tau ;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr_ur.c:219:13: note: FIX-IT applied suggested code changes
  double tau ;
            ^
[414/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/qr_uu.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\qr_uu.c:367:10: warning: variable 'alpha' is not initialized [cppcoreguidelines-init-variables]
  double alpha;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr_uu.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_uu.c:367:15: note: FIX-IT applied suggested code changes
  double alpha;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_uu.c:368:10: warning: variable 'beta' is not initialized [cppcoreguidelines-init-variables]
  double beta;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr_uu.c:368:14: note: FIX-IT applied suggested code changes
  double beta;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_uu.c:369:10: warning: variable 'tau' is not initialized [cppcoreguidelines-init-variables]
  double tau ;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr_uu.c:369:13: note: FIX-IT applied suggested code changes
  double tau ;
            ^
[415/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/qr_uz.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\qr_uz.c:251:10: warning: variable 'alpha' is not initialized [cppcoreguidelines-init-variables]
  double alpha;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr_uz.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_uz.c:251:15: note: FIX-IT applied suggested code changes
  double alpha;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_uz.c:252:10: warning: variable 'beta' is not initialized [cppcoreguidelines-init-variables]
  double beta;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr_uz.c:252:14: note: FIX-IT applied suggested code changes
  double beta;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\qr_uz.c:253:10: warning: variable 'tau' is not initialized [cppcoreguidelines-init-variables]
  double tau ;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\qr_uz.c:253:13: note: FIX-IT applied suggested code changes
  double tau ;
            ^
[416/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/rqr.c.obj
[417/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/rqrc.c.obj
[418/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/lq.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:418:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:418:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:419:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:419:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:420:14: warning: variable 'l_border' is not initialized [cppcoreguidelines-init-variables]
      size_t l_border;
             ^
                      = 0
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:420:22: note: FIX-IT applied suggested code changes
      size_t l_border;
                     ^
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:486:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:486:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:487:14: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
      size_t k;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:487:15: note: FIX-IT applied suggested code changes
      size_t k;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:488:14: warning: Value stored to 'w0' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double w0 = NAN;
             ^~
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:488:14: note: Value stored to 'w0' during its initialization is never read
      double w0 = NAN;
             ^~
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:499:18: warning: variable 'c' is not initialized [cppcoreguidelines-init-variables]
          double c;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:499:19: note: FIX-IT applied suggested code changes
          double c;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:500:18: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
          double s;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:500:19: note: FIX-IT applied suggested code changes
          double s;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:525:18: warning: variable 'c' is not initialized [cppcoreguidelines-init-variables]
          double c;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:525:19: note: FIX-IT applied suggested code changes
          double c;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:526:18: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
          double s;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:526:19: note: FIX-IT applied suggested code changes
          double s;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:554:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else
  ^~~~
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:554:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\lq.c:555:5: note: FIX-IT applied suggested code changes
    {
    ^
[419/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/ptlq.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:114:18: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
          size_t j;
                 ^
                   = 0
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:114:19: note: FIX-IT applied suggested code changes
          size_t j;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:322:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else
  ^~~~
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:322:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:323:5: note: FIX-IT applied suggested code changes
    {
    ^
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:436:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else
  ^~~~
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:436:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:437:5: note: FIX-IT applied suggested code changes
    {
    ^
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:438:7: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
      size_t j, k;
      ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:438:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j, k;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:438:17: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
      size_t j, k;
                ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:441:14: warning: variable 'w0' is not initialized [cppcoreguidelines-init-variables]
      double w0;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:452:11: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
          double c, s;
          ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:452:18: warning: variable 'c' is not initialized [cppcoreguidelines-init-variables]
          double c, s;
                 ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:452:21: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
          double c, s;
                    ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:478:11: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
          double c, s;
          ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:478:18: warning: variable 'c' is not initialized [cppcoreguidelines-init-variables]
          double c, s;
                 ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\ptlq.c:478:21: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
          double c, s;
                    ^
note: this fix will not be applied because it overlaps with another fix
[420/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/svd.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:53:10: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
  size_t a;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:53:11: note: FIX-IT applied suggested code changes
  size_t a;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:54:10: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
  size_t b;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:54:11: note: FIX-IT applied suggested code changes
  size_t b;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:55:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:55:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:56:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:56:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:57:10: warning: variable 'iter' is not initialized [cppcoreguidelines-init-variables]
  size_t iter;
         ^
              = 0
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:57:14: note: FIX-IT applied suggested code changes
  size_t iter;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:285:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:285:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:286:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:286:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:571:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:571:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:572:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:572:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:573:14: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
      size_t k;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:573:15: note: FIX-IT applied suggested code changes
      size_t k;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:578:22: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      int sweepmax = 5*N;
                     ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:580:26: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      double tolerance = 10 * M * GSL_DBL_EPSILON;
                         ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:603:19: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          count = N * (N - 1) / 2;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:613:26: warning: variable 'cosine' is not initialized [cppcoreguidelines-init-variables]
                  double cosine;
                         ^
                                = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:613:32: note: FIX-IT applied suggested code changes
                  double cosine;
                               ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:614:26: warning: variable 'sine' is not initialized [cppcoreguidelines-init-variables]
                  double sine;
                         ^
                              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:614:30: note: FIX-IT applied suggested code changes
                  double sine;
                             ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:615:26: warning: Value stored to 'v' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
                  double v = NAN;
                         ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:615:26: note: Value stored to 'v' during its initialization is never read
                  double v = NAN;
                         ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:616:26: warning: variable 'abserr_a' is not initialized [cppcoreguidelines-init-variables]
                  double abserr_a;
                         ^
                                  = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:616:34: note: FIX-IT applied suggested code changes
                  double abserr_a;
                                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:617:26: warning: variable 'abserr_b' is not initialized [cppcoreguidelines-init-variables]
                  double abserr_b;
                         ^
                                  = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:617:34: note: FIX-IT applied suggested code changes
                  double abserr_b;
                                 ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:618:23: warning: variable 'sorted' is not initialized [cppcoreguidelines-init-variables]
                  int sorted;
                      ^
                             = 0
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:618:29: note: FIX-IT applied suggested code changes
                  int sorted;
                            ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:619:23: warning: variable 'orthog' is not initialized [cppcoreguidelines-init-variables]
                  int orthog;
                      ^
                             = 0
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:619:29: note: FIX-IT applied suggested code changes
                  int orthog;
                            ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:620:23: warning: variable 'noisya' is not initialized [cppcoreguidelines-init-variables]
                  int noisya;
                      ^
                             = 0
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:620:29: note: FIX-IT applied suggested code changes
                  int noisya;
                            ^
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:621:23: warning: variable 'noisyb' is not initialized [cppcoreguidelines-init-variables]
                  int noisyb;
                      ^
                             = 0
D:\a\aprg\aprg\gsl\gsl\linalg\svd.c:621:29: note: FIX-IT applied suggested code changes
                  int noisyb;
                            ^
[421/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/householder.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:63:7: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
      double alpha, beta, tau ;
      ^~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:63:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:63:14: warning: variable 'alpha' is not initialized [cppcoreguidelines-init-variables]
      double alpha, beta, tau ;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:63:21: warning: variable 'beta' is not initialized [cppcoreguidelines-init-variables]
      double alpha, beta, tau ;
                    ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:63:27: warning: variable 'tau' is not initialized [cppcoreguidelines-init-variables]
      double alpha, beta, tau ;
                          ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:129:7: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
      double beta, tau;
      ^~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:129:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:129:14: warning: variable 'beta' is not initialized [cppcoreguidelines-init-variables]
      double beta, tau;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:129:20: warning: variable 'tau' is not initialized [cppcoreguidelines-init-variables]
      double beta, tau;
                   ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:194:12: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    size_t i;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:194:13: note: FIX-IT applied suggested code changes
    size_t i;
            ^
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:195:12: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
    size_t j;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:195:13: note: FIX-IT applied suggested code changes
    size_t j;
            ^
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:266:12: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    size_t i;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:266:13: note: FIX-IT applied suggested code changes
    size_t i;
            ^
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:267:12: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
    size_t j;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:267:13: note: FIX-IT applied suggested code changes
    size_t j;
            ^
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:314:12: warning: variable 'd1' is not initialized [cppcoreguidelines-init-variables]
    double d1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:314:14: note: FIX-IT applied suggested code changes
    double d1;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:315:12: warning: variable 'd' is not initialized [cppcoreguidelines-init-variables]
    double d;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:315:13: note: FIX-IT applied suggested code changes
    double d;
            ^
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:418:14: warning: Value stored to 'v0' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double v0 = NAN;
             ^~
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:418:14: note: Value stored to 'v0' during its initialization is never read
      double v0 = NAN;
             ^~
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:449:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:449:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:450:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:450:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:495:12: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    size_t i;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:495:13: note: FIX-IT applied suggested code changes
    size_t i;
            ^
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:496:12: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
    size_t j;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\linalg\householder.c:496:13: note: FIX-IT applied suggested code changes
    size_t j;
            ^
[422/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/householdercomplex.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\householdercomplex.c:85:14: warning: variable 'beta_r' is not initialized [cppcoreguidelines-init-variables]
      double beta_r;
             ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\householdercomplex.c:39:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\linalg\householdercomplex.c:85:20: note: FIX-IT applied suggested code changes
      double beta_r;
                   ^
D:\a\aprg\aprg\gsl\gsl\linalg\householdercomplex.c:241:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\householdercomplex.c:241:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\householdercomplex.c:242:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\householdercomplex.c:242:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\householdercomplex.c:294:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\householdercomplex.c:294:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\householdercomplex.c:295:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\householdercomplex.c:295:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
[423/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/hessenberg.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\hessenberg.c:93:14: warning: Value stored to 'tau_i' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double tau_i = NAN;       /* beta in algorithm 7.4.2 */
             ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\hessenberg.c:93:14: note: Value stored to 'tau_i' during its initialization is never read
      double tau_i = NAN;       /* beta in algorithm 7.4.2 */
             ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\hessenberg.c:230:14: warning: Value stored to 'tau_j' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double tau_j = NAN;       /* householder coefficient */
             ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\hessenberg.c:230:14: note: Value stored to 'tau_j' during its initialization is never read
      double tau_j = NAN;       /* householder coefficient */
             ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\hessenberg.c:285:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\hessenberg.c:285:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\hessenberg.c:286:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\hessenberg.c:286:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\hessenberg.c:383:14: warning: Value stored to 'tau_i' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double tau_i = NAN;       /* beta in algorithm 7.4.2 */
             ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\hessenberg.c:383:14: note: Value stored to 'tau_i' during its initialization is never read
      double tau_i = NAN;       /* beta in algorithm 7.4.2 */
             ^~~~~
[424/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/hesstri.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\hesstri.c:72:14: warning: variable 'cs' is not initialized [cppcoreguidelines-init-variables]
      double cs;
             ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\hesstri.c:20:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\linalg\hesstri.c:72:16: note: FIX-IT applied suggested code changes
      double cs;
               ^
D:\a\aprg\aprg\gsl\gsl\linalg\hesstri.c:73:14: warning: variable 'sn' is not initialized [cppcoreguidelines-init-variables]
      double sn;          /* rotation parameters */
             ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\hesstri.c:73:16: note: FIX-IT applied suggested code changes
      double sn;          /* rotation parameters */
               ^
D:\a\aprg\aprg\gsl\gsl\linalg\hesstri.c:74:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\hesstri.c:74:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\hesstri.c:75:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;            /* looping */
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\hesstri.c:75:15: note: FIX-IT applied suggested code changes
      size_t j;            /* looping */
              ^
[425/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/cholesky.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky.c:261:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky.c:261:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky.c:262:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky.c:262:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky.c:379:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky.c:379:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky.c:380:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky.c:380:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky.c:559:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky.c:559:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky.c:560:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky.c:560:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky.c:647:18: warning: Value stored to 'ajj' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
          double ajj = NAN;
                 ^~~
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky.c:647:18: note: Value stored to 'ajj' during its initialization is never read
          double ajj = NAN;
                 ^~~
[426/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/choleskyc.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\choleskyc.c:153:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\choleskyc.c:153:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\choleskyc.c:154:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\choleskyc.c:154:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\choleskyc.c:226:14: warning: Value stored to 'ajj' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double ajj = NAN;
             ^~~
D:\a\aprg\aprg\gsl\gsl\linalg\choleskyc.c:226:14: note: Value stored to 'ajj' during its initialization is never read
      double ajj = NAN;
             ^~~
[427/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/mcholesky.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:93:14: warning: Value stored to 'beta' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double beta = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:93:14: note: Value stored to 'beta' during its initialization is never read
      double beta = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:97:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:97:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:98:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:98:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:132:28: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          double nu = sqrt(N*N - 1.0);
                           ^
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:140:18: warning: variable 'ajj' is not initialized [cppcoreguidelines-init-variables]
          double ajj;
                 ^
                     = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:140:21: note: FIX-IT applied suggested code changes
          double ajj;
                    ^
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:141:18: warning: variable 'thetaj' is not initialized [cppcoreguidelines-init-variables]
          double thetaj;
                 ^
                        = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:141:24: note: FIX-IT applied suggested code changes
          double thetaj;
                       ^
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:142:18: warning: variable 'u' is not initialized [cppcoreguidelines-init-variables]
          double u;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:142:19: note: FIX-IT applied suggested code changes
          double u;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:143:18: warning: variable 'alpha' is not initialized [cppcoreguidelines-init-variables]
          double alpha;
                 ^
                       = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:143:23: note: FIX-IT applied suggested code changes
          double alpha;
                      ^
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:144:18: warning: variable 'alphainv' is not initialized [cppcoreguidelines-init-variables]
          double alphainv;
                 ^
                          = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\mcholesky.c:144:26: note: FIX-IT applied suggested code changes
          double alphainv;
                         ^
[428/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/pcholesky.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\pcholesky.c:509:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\pcholesky.c:509:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\pcholesky.c:510:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\pcholesky.c:510:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\pcholesky.c:515:14: warning: Value stored to 'Ajj' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double Ajj = NAN;
             ^~~
D:\a\aprg\aprg\gsl\gsl\linalg\pcholesky.c:515:14: note: Value stored to 'Ajj' during its initialization is never read
      double Ajj = NAN;
             ^~~
[429/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/cholesky_band.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:168:72: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                  (int) LLT->size1, (int) (LLT->size2 - 1), LLT->data, LLT->tda,
                                                                       ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:169:28: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                  x->data, x->stride);
                           ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:173:72: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                  (int) LLT->size1, (int) (LLT->size2 - 1), LLT->data, LLT->tda,
                                                                       ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:174:28: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                  x->data, x->stride);
                           ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:318:14: warning: Value stored to 'Anorm' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double Anorm = NAN;    /* ||A||_1 */
             ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:318:14: note: Value stored to 'Anorm' during its initialization is never read
      double Anorm = NAN;    /* ||A||_1 */
             ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:433:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:433:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:434:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:434:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:458:10: warning: Value stored to 'value' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double value = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:458:10: note: Value stored to 'value' during its initialization is never read
  double value = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:477:18: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
          size_t k;
                 ^
                   = 0
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:477:19: note: FIX-IT applied suggested code changes
          size_t k;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:478:18: warning: variable 'l' is not initialized [cppcoreguidelines-init-variables]
          size_t l;
                 ^
                   = 0
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:478:19: note: FIX-IT applied suggested code changes
          size_t l;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:507:68: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
              (int) LLT->size1, (int) (LLT->size2 - 1), LLT->data, LLT->tda,
                                                                   ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:508:24: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
              x->data, x->stride);
                       ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:512:68: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
              (int) LLT->size1, (int) (LLT->size2 - 1), LLT->data, LLT->tda,
                                                                   ^
D:\a\aprg\aprg\gsl\gsl\linalg\cholesky_band.c:513:24: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
              x->data, x->stride);
                       ^
[430/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/ldlt.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt.c:63:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt.c:63:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt.c:64:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt.c:64:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt.c:65:14: warning: variable 'a00' is not initialized [cppcoreguidelines-init-variables]
      double a00;
             ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt.c:30:1: note: FIX-IT applied suggested code changes
^
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt.c:65:17: note: FIX-IT applied suggested code changes
      double a00;
                ^
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt.c:66:14: warning: variable 'anorm' is not initialized [cppcoreguidelines-init-variables]
      double anorm;
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt.c:66:19: note: FIX-IT applied suggested code changes
      double anorm;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt.c:208:14: warning: Value stored to 'Anorm' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double Anorm = NAN;    /* ||A||_1 */
             ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt.c:208:14: note: Value stored to 'Anorm' during its initialization is never read
      double Anorm = NAN;    /* ||A||_1 */
             ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt.c:245:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt.c:245:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt.c:246:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt.c:246:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
[431/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/ldlt_band.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:85:14: warning: Value stored to 'Anorm' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double Anorm = NAN;
             ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:85:14: note: Value stored to 'Anorm' during its initialization is never read
      double Anorm = NAN;
             ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:171:75: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                  (int) LDLT->size1, (int) (LDLT->size2 - 1), LDLT->data, LDLT->tda,
                                                                          ^
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:172:28: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                  x->data, x->stride);
                           ^
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:179:75: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                  (int) LDLT->size1, (int) (LDLT->size2 - 1), LDLT->data, LDLT->tda,
                                                                          ^
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:180:28: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                  x->data, x->stride);
                           ^
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:254:14: warning: Value stored to 'Anorm' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double Anorm = NAN;    /* ||A||_1 */
             ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:254:14: note: Value stored to 'Anorm' during its initialization is never read
      double Anorm = NAN;    /* ||A||_1 */
             ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:294:10: warning: Value stored to 'value' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double value = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:294:10: note: Value stored to 'value' during its initialization is never read
  double value = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:313:18: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
          size_t k;
                 ^
                   = 0
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:313:19: note: FIX-IT applied suggested code changes
          size_t k;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:314:18: warning: variable 'l' is not initialized [cppcoreguidelines-init-variables]
          size_t l;
                 ^
                   = 0
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:314:19: note: FIX-IT applied suggested code changes
          size_t l;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:344:71: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
              (int) LDLT->size1, (int) (LDLT->size2 - 1), LDLT->data, LDLT->tda,
                                                                      ^
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:345:24: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
              x->data, x->stride);
                       ^
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:352:71: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
              (int) LDLT->size1, (int) (LDLT->size2 - 1), LDLT->data, LDLT->tda,
                                                                      ^
D:\a\aprg\aprg\gsl\gsl\linalg\ldlt_band.c:353:24: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
              x->data, x->stride);
                       ^
[432/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/symmtd.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\symmtd.c:101:24: warning: variable 'xv' is not initialized [cppcoreguidelines-init-variables]
                double xv;
                       ^
                          = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\symmtd.c:56:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\linalg\symmtd.c:101:26: note: FIX-IT applied suggested code changes
                double xv;
                         ^
D:\a\aprg\aprg\gsl\gsl\linalg\symmtd.c:102:24: warning: variable 'alpha' is not initialized [cppcoreguidelines-init-variables]
                double alpha;
                       ^
                             = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\symmtd.c:102:29: note: FIX-IT applied suggested code changes
                double alpha;
                            ^
[433/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/hermtd.c.obj
[434/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/bidiag.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\bidiag.c:188:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\bidiag.c:188:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\bidiag.c:189:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\bidiag.c:189:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\bidiag.c:273:14: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
      size_t i;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\bidiag.c:273:15: note: FIX-IT applied suggested code changes
      size_t i;
              ^
D:\a\aprg\aprg\gsl\gsl\linalg\bidiag.c:274:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\linalg\bidiag.c:274:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
[435/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/balance.c.obj
[436/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/balancemat.c.obj
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:58:14: warning: variable 'row_norm' is not initialized [cppcoreguidelines-init-variables]
      double row_norm;
             ^
                      = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:36:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:58:22: note: FIX-IT applied suggested code changes
      double row_norm;
                     ^
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:59:14: warning: variable 'col_norm' is not initialized [cppcoreguidelines-init-variables]
      double col_norm;
             ^
                      = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:59:22: note: FIX-IT applied suggested code changes
      double col_norm;
                     ^
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:70:18: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
          size_t i;
                 ^
                   = 0
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:70:19: note: FIX-IT applied suggested code changes
          size_t i;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:71:18: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
          size_t j;
                 ^
                   = 0
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:71:19: note: FIX-IT applied suggested code changes
          size_t j;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:72:18: warning: variable 'g' is not initialized [cppcoreguidelines-init-variables]
          double g;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:72:19: note: FIX-IT applied suggested code changes
          double g;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:73:18: warning: variable 'f' is not initialized [cppcoreguidelines-init-variables]
          double f;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:73:19: note: FIX-IT applied suggested code changes
          double f;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:74:18: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
          double s;
                 ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:74:19: note: FIX-IT applied suggested code changes
          double s;
                  ^
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:176:14: warning: Value stored to 's' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double s = NAN;
             ^
D:\a\aprg\aprg\gsl\gsl\linalg\balancemat.c:176:14: note: Value stored to 's' during its initialization is never read
      double s = NAN;
             ^
[437/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/inline.c.obj
[438/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/trimult.c.obj
[439/1003] Building C object gsl/CMakeFiles/gsl.dir/linalg/trimult_complex.c.obj
[440/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/jacobi.c.obj
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:39:14: warning: variable 't' is not initialized [cppcoreguidelines-init-variables]
      double t;
             ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:39:15: note: FIX-IT applied suggested code changes
      double t;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:40:14: warning: variable 'c1' is not initialized [cppcoreguidelines-init-variables]
      double c1;
             ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:40:16: note: FIX-IT applied suggested code changes
      double c1;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:104:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:104:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:105:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:105:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:151:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:151:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:152:10: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  size_t p;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:152:11: note: FIX-IT applied suggested code changes
  size_t p;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:153:10: warning: variable 'q' is not initialized [cppcoreguidelines-init-variables]
  size_t q;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:153:11: note: FIX-IT applied suggested code changes
  size_t q;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:156:10: warning: variable 'red' is not initialized [cppcoreguidelines-init-variables]
  double red;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:156:13: note: FIX-IT applied suggested code changes
  double red;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:187:22: warning: variable 'c' is not initialized [cppcoreguidelines-init-variables]
              double c;
                     ^
                       = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:187:23: note: FIX-IT applied suggested code changes
              double c;
                      ^
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:188:22: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
              double s;
                     ^
                       = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:188:23: note: FIX-IT applied suggested code changes
              double s;
                      ^
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:234:12: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
    size_t i;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:234:13: note: FIX-IT applied suggested code changes
    size_t i;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:235:12: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
    size_t j;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:235:13: note: FIX-IT applied suggested code changes
    size_t j;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:236:12: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
    size_t k;
           ^
             = 0
D:\a\aprg\aprg\gsl\gsl\eigen\jacobi.c:236:13: note: FIX-IT applied suggested code changes
    size_t k;
            ^
[441/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/symm.c.obj
D:\a\aprg\aprg\gsl\gsl\eigen\symm.c:60:7: warning: Potential leak of memory pointed to by 'w' [clang-analyzer-unix.Malloc]
      GSL_ERROR_NULL ("failed to allocate space for diagonal", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:129:43: note: expanded from macro 'GSL_ERROR_NULL'
#define GSL_ERROR_NULL(reason, gsl_errno) GSL_ERROR_VAL(reason, gsl_errno, 0)
                                          ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:114:8: note: expanded from macro 'GSL_ERROR_VAL'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\eigen\symm.c:42:7: note: Assuming 'n' is not equal to 0
  if (n == 0)
      ^~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\symm.c:42:3: note: Taking false branch
  if (n == 0)
  ^
D:\a\aprg\aprg\gsl\gsl\eigen\symm.c:49:8: note: Memory is allocated
       malloc (sizeof (gsl_eigen_symm_workspace)));
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\symm.c:51:7: note: Assuming 'w' is not equal to null
  if (w == 0)
      ^~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\symm.c:51:3: note: Taking false branch
  if (w == 0)
  ^
D:\a\aprg\aprg\gsl\gsl\eigen\symm.c:58:7: note: Assuming field 'd' is equal to null
  if (w->d == 0)
      ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\symm.c:58:3: note: Taking true branch
  if (w->d == 0)
  ^
D:\a\aprg\aprg\gsl\gsl\eigen\symm.c:60:7: note: Potential leak of memory pointed to by 'w'
      GSL_ERROR_NULL ("failed to allocate space for diagonal", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:129:43: note: expanded from macro 'GSL_ERROR_NULL'
#define GSL_ERROR_NULL(reason, gsl_errno) GSL_ERROR_VAL(reason, gsl_errno, 0)
                                          ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:114:8: note: expanded from macro 'GSL_ERROR_VAL'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\eigen\symm.c:107:14: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
      size_t a;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\eigen\symm.c:107:15: note: FIX-IT applied suggested code changes
      size_t a;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\symm.c:108:14: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
      size_t b;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\eigen\symm.c:108:15: note: FIX-IT applied suggested code changes
      size_t b;
              ^
[442/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/symmv.c.obj
D:\a\aprg\aprg\gsl\gsl\eigen\symmv.c:58:7: warning: Potential leak of memory pointed to by 'w' [clang-analyzer-unix.Malloc]
      GSL_ERROR_NULL ("failed to allocate space for diagonal", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:129:43: note: expanded from macro 'GSL_ERROR_NULL'
#define GSL_ERROR_NULL(reason, gsl_errno) GSL_ERROR_VAL(reason, gsl_errno, 0)
                                          ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:114:8: note: expanded from macro 'GSL_ERROR_VAL'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\eigen\symmv.c:42:7: note: Assuming 'n' is not equal to 0
  if (n == 0)
      ^~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\symmv.c:42:3: note: Taking false branch
  if (n == 0)
  ^
D:\a\aprg\aprg\gsl\gsl\eigen\symmv.c:47:37: note: Memory is allocated
  w= ((gsl_eigen_symmv_workspace *) malloc (sizeof(gsl_eigen_symmv_workspace)));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\symmv.c:49:7: note: Assuming 'w' is not equal to null
  if (w == 0)
      ^~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\symmv.c:49:3: note: Taking false branch
  if (w == 0)
  ^
D:\a\aprg\aprg\gsl\gsl\eigen\symmv.c:56:7: note: Assuming field 'd' is equal to null
  if (w->d == 0)
      ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\symmv.c:56:3: note: Taking true branch
  if (w->d == 0)
  ^
D:\a\aprg\aprg\gsl\gsl\eigen\symmv.c:58:7: note: Potential leak of memory pointed to by 'w'
      GSL_ERROR_NULL ("failed to allocate space for diagonal", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:129:43: note: expanded from macro 'GSL_ERROR_NULL'
#define GSL_ERROR_NULL(reason, gsl_errno) GSL_ERROR_VAL(reason, gsl_errno, 0)
                                          ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:114:8: note: expanded from macro 'GSL_ERROR_VAL'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\eigen\symmv.c:120:14: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
      size_t a;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\eigen\symmv.c:120:15: note: FIX-IT applied suggested code changes
      size_t a;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\symmv.c:121:14: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
      size_t b;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\eigen\symmv.c:121:15: note: FIX-IT applied suggested code changes
      size_t b;
              ^
[443/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/nonsymm.c.obj
[444/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/nonsymmv.c.obj
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:341:39: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  const double smlnum = GSL_DBL_MIN * N / GSL_DBL_EPSILON;
                                      ^
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:344:10: warning: variable 'iu' is not initialized [cppcoreguidelines-init-variables]
  size_t iu;
         ^
            = 0
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:344:12: note: FIX-IT applied suggested code changes
  size_t iu;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:346:10: warning: variable 'ju' is not initialized [cppcoreguidelines-init-variables]
         ju;
         ^
            = 0
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:346:12: note: FIX-IT applied suggested code changes
         ju;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:347:10: warning: variable 'ii' is not initialized [cppcoreguidelines-init-variables]
  size_t ii;
         ^
            = 0
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:347:12: note: FIX-IT applied suggested code changes
  size_t ii;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:349:10: warning: variable 'lambda_re' is not initialized [cppcoreguidelines-init-variables]
  double lambda_re;
         ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:21:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:349:19: note: FIX-IT applied suggested code changes
  double lambda_re;
                  ^
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:351:10: warning: variable 'lambda_im' is not initialized [cppcoreguidelines-init-variables]
         lambda_im;   /* Im(lambda) */
         ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:351:19: note: FIX-IT applied suggested code changes
         lambda_im;   /* Im(lambda) */
                  ^
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:369:10: warning: Value stored to 'smin' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double smin = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:369:10: note: Value stored to 'smin' during its initialization is never read
  double smin = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:413:15: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
          int k;
              ^
                = 0
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:413:16: note: FIX-IT applied suggested code changes
          int k;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:414:15: warning: variable 'l' is not initialized [cppcoreguidelines-init-variables]
          int l;
              ^
                = 0
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:414:16: note: FIX-IT applied suggested code changes
          int l;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:456:26: warning: Value stored to 'x' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
                  double x = NAN;
                         ^
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:456:26: note: Value stored to 'x' during its initialization is never read
                  double x = NAN;
                         ^
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:516:26: warning: variable 'x11' is not initialized [cppcoreguidelines-init-variables]
                  double x11;
                         ^
                             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:516:29: note: FIX-IT applied suggested code changes
                  double x11;
                            ^
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:517:26: warning: variable 'x21' is not initialized [cppcoreguidelines-init-variables]
                  double x21;
                         ^
                             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:517:29: note: FIX-IT applied suggested code changes
                  double x21;
                            ^
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:548:30: warning: Value stored to 'beta' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
                      double beta = NAN;
                             ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:548:30: note: Value stored to 'beta' during its initialization is never read
                      double beta = NAN;
                             ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:822:30: warning: Value stored to 'beta' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
                      double beta = NAN;
                             ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:822:30: note: Value stored to 'beta' during its initialization is never read
                      double beta = NAN;
                             ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:989:10: warning: Value stored to 'scale' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double scale = NAN; /* scaling factor */
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\nonsymmv.c:989:10: note: Value stored to 'scale' during its initialization is never read
  double scale = NAN; /* scaling factor */
         ^~~~~
[445/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/herm.c.obj
D:\a\aprg\aprg\gsl\gsl\eigen\herm.c:57:7: warning: Potential leak of memory pointed to by 'w' [clang-analyzer-unix.Malloc]
      GSL_ERROR_NULL ("failed to allocate space for diagonal", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:129:43: note: expanded from macro 'GSL_ERROR_NULL'
#define GSL_ERROR_NULL(reason, gsl_errno) GSL_ERROR_VAL(reason, gsl_errno, 0)
                                          ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:114:8: note: expanded from macro 'GSL_ERROR_VAL'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\eigen\herm.c:41:7: note: Assuming 'n' is not equal to 0
  if (n == 0)
      ^~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\herm.c:41:3: note: Taking false branch
  if (n == 0)
  ^
D:\a\aprg\aprg\gsl\gsl\eigen\herm.c:46:36: note: Memory is allocated
  w = (gsl_eigen_herm_workspace *) malloc (sizeof(gsl_eigen_herm_workspace));
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\herm.c:48:7: note: Assuming 'w' is not equal to null
  if (w == 0)
      ^~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\herm.c:48:3: note: Taking false branch
  if (w == 0)
  ^
D:\a\aprg\aprg\gsl\gsl\eigen\herm.c:55:7: note: Assuming field 'd' is equal to null
  if (w->d == 0)
      ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\herm.c:55:3: note: Taking true branch
  if (w->d == 0)
  ^
D:\a\aprg\aprg\gsl\gsl\eigen\herm.c:57:7: note: Potential leak of memory pointed to by 'w'
      GSL_ERROR_NULL ("failed to allocate space for diagonal", GSL_ENOMEM);
      ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:129:43: note: expanded from macro 'GSL_ERROR_NULL'
#define GSL_ERROR_NULL(reason, gsl_errno) GSL_ERROR_VAL(reason, gsl_errno, 0)
                                          ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:114:8: note: expanded from macro 'GSL_ERROR_VAL'
       gsl_error (reason, __FILE__, __LINE__, gsl_errno) ; \
       ^
D:\a\aprg\aprg\gsl\gsl\eigen\herm.c:107:14: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
      size_t a;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\eigen\herm.c:107:15: note: FIX-IT applied suggested code changes
      size_t a;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\herm.c:108:14: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
      size_t b;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\eigen\herm.c:108:15: note: FIX-IT applied suggested code changes
      size_t b;
              ^
[446/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/hermv.c.obj
D:\a\aprg\aprg\gsl\gsl\eigen\hermv.c:144:14: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
      size_t a;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\eigen\hermv.c:144:15: note: FIX-IT applied suggested code changes
      size_t a;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\hermv.c:145:14: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
      size_t b;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\eigen\hermv.c:145:15: note: FIX-IT applied suggested code changes
      size_t b;
              ^
[447/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/gensymm.c.obj
D:\a\aprg\aprg\gsl\gsl\eigen\gensymm.c:207:10: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
  double a;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gensymm.c:20:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\eigen\gensymm.c:207:11: note: FIX-IT applied suggested code changes
  double a;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\gensymm.c:208:10: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
  double b;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gensymm.c:208:11: note: FIX-IT applied suggested code changes
  double b;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\gensymm.c:209:10: warning: variable 'c' is not initialized [cppcoreguidelines-init-variables]
  double c;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gensymm.c:209:11: note: FIX-IT applied suggested code changes
  double c;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\gensymm.c:290:11: warning: variable 'status' is not initialized [cppcoreguidelines-init-variables]
      int status;
          ^
                 = 0
D:\a\aprg\aprg\gsl\gsl\eigen\gensymm.c:290:17: note: FIX-IT applied suggested code changes
      int status;
                ^
D:\a\aprg\aprg\gsl\gsl\eigen\gensymm.c:304:18: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
      if (status)
                 ^
                  {
D:\a\aprg\aprg\gsl\gsl\eigen\gensymm.c:304:18: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\eigen\gensymm.c:305:23: note: FIX-IT applied suggested code changes
        return status;
                      ^
D:\a\aprg\aprg\gsl\gsl\eigen\gensymm.c:324:18: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
      if (status)
                 ^
                  {
D:\a\aprg\aprg\gsl\gsl\eigen\gensymm.c:324:18: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\eigen\gensymm.c:325:23: note: FIX-IT applied suggested code changes
        return status;
                      ^
[448/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/gensymmv.c.obj
[449/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/genherm.c.obj
D:\a\aprg\aprg\gsl\gsl\eigen\genherm.c:209:10: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
  double a;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genherm.c:20:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\eigen\genherm.c:209:11: note: FIX-IT applied suggested code changes
  double a;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\genherm.c:210:10: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
  double b;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genherm.c:210:11: note: FIX-IT applied suggested code changes
  double b;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\genherm.c:303:11: warning: variable 'status' is not initialized [cppcoreguidelines-init-variables]
      int status;
          ^
                 = 0
D:\a\aprg\aprg\gsl\gsl\eigen\genherm.c:303:17: note: FIX-IT applied suggested code changes
      int status;
                ^
D:\a\aprg\aprg\gsl\gsl\eigen\genherm.c:319:18: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
      if (status)
                 ^
                  {
D:\a\aprg\aprg\gsl\gsl\eigen\genherm.c:319:18: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\eigen\genherm.c:320:23: note: FIX-IT applied suggested code changes
        return status;
                      ^
D:\a\aprg\aprg\gsl\gsl\eigen\genherm.c:339:18: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
      if (status)
                 ^
                  {
D:\a\aprg\aprg\gsl\gsl\eigen\genherm.c:339:18: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\eigen\genherm.c:340:23: note: FIX-IT applied suggested code changes
        return status;
                      ^
[450/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/genhermv.c.obj
[451/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/gen.c.obj
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:236:14: warning: variable 'anorm' is not initialized [cppcoreguidelines-init-variables]
      double anorm;
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:20:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:236:19: note: FIX-IT applied suggested code changes
      double anorm;
                  ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:237:14: warning: variable 'bnorm' is not initialized [cppcoreguidelines-init-variables]
      double bnorm;
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:237:19: note: FIX-IT applied suggested code changes
      double bnorm;
                  ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:363:10: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
  double a;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:363:11: note: FIX-IT applied suggested code changes
  double a;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:364:10: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
  double b;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:364:11: note: FIX-IT applied suggested code changes
  double b;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:430:30: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
              if (q != N - 1)
                             ^
                              {
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:430:30: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:431:64: note: FIX-IT applied suggested code changes
                gen_tri_chase_zero(&h.matrix, &r.matrix, q, w);
                                                               ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:609:10: warning: variable 'wr1' is not initialized [cppcoreguidelines-init-variables]
  double wr1;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:609:13: note: FIX-IT applied suggested code changes
  double wr1;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:610:10: warning: variable 'wr2' is not initialized [cppcoreguidelines-init-variables]
  double wr2;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:610:13: note: FIX-IT applied suggested code changes
  double wr2;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:611:10: warning: variable 'wi' is not initialized [cppcoreguidelines-init-variables]
  double wi;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:611:12: note: FIX-IT applied suggested code changes
  double wi;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:612:10: warning: variable 'scale1' is not initialized [cppcoreguidelines-init-variables]
  double scale1;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:612:16: note: FIX-IT applied suggested code changes
  double scale1;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:613:10: warning: variable 'scale2' is not initialized [cppcoreguidelines-init-variables]
  double scale2;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:613:16: note: FIX-IT applied suggested code changes
  double scale2;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:614:10: warning: variable 'scale' is not initialized [cppcoreguidelines-init-variables]
  double scale;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:614:15: note: FIX-IT applied suggested code changes
  double scale;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:615:10: warning: variable 'cs' is not initialized [cppcoreguidelines-init-variables]
  double cs;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:615:12: note: FIX-IT applied suggested code changes
  double cs;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:616:10: warning: variable 'sn' is not initialized [cppcoreguidelines-init-variables]
  double sn;          /* givens rotation */
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:616:12: note: FIX-IT applied suggested code changes
  double sn;          /* givens rotation */
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:617:10: warning: variable 'temp' is not initialized [cppcoreguidelines-init-variables]
  double temp;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:617:14: note: FIX-IT applied suggested code changes
  double temp;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:619:10: warning: variable 'temp2' is not initialized [cppcoreguidelines-init-variables]
         temp2;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:619:15: note: FIX-IT applied suggested code changes
         temp2;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:634:26: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      if ((GSL_DBL_MIN * w->max_iterations) *
                         ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:642:43: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        w->eshift += 1.0 / (GSL_DBL_MIN * w->max_iterations);
                                          ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:646:26: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
          (GSL_DBL_MIN * w->max_iterations) *
                         ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:841:10: warning: Value stored to 'tau' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double tau = NAN;             /* householder coefficient */
         ^~~
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:841:10: note: Value stored to 'tau' during its initialization is never read
  double tau = NAN;             /* householder coefficient */
         ^~~
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:845:10: warning: Value stored to 'tmp' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double tmp = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:845:10: note: Value stored to 'tmp' during its initialization is never read
  double tmp = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:846:10: warning: variable 'q' is not initialized [cppcoreguidelines-init-variables]
  size_t q;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:846:11: note: FIX-IT applied suggested code changes
  size_t q;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:847:10: warning: variable 'r' is not initialized [cppcoreguidelines-init-variables]
  size_t r;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:847:11: note: FIX-IT applied suggested code changes
  size_t r;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:849:10: warning: Value stored to 'scale' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double scale = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:849:10: note: Value stored to 'scale' during its initialization is never read
  double scale = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:850:10: warning: variable 'AB11' is not initialized [cppcoreguidelines-init-variables]
  double AB11;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:850:14: note: FIX-IT applied suggested code changes
  double AB11;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:852:10: warning: variable 'AB22' is not initialized [cppcoreguidelines-init-variables]
         AB22;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:852:14: note: FIX-IT applied suggested code changes
         AB22;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:853:10: warning: variable 'ABNN' is not initialized [cppcoreguidelines-init-variables]
  double ABNN;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:853:14: note: FIX-IT applied suggested code changes
  double ABNN;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:854:10: warning: variable 'ABMM' is not initialized [cppcoreguidelines-init-variables]
  double ABMM;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:854:14: note: FIX-IT applied suggested code changes
  double ABMM;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:855:10: warning: variable 'AMNBNN' is not initialized [cppcoreguidelines-init-variables]
  double AMNBNN;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:855:16: note: FIX-IT applied suggested code changes
  double AMNBNN;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:856:10: warning: variable 'ANMBMM' is not initialized [cppcoreguidelines-init-variables]
  double ANMBMM;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:856:16: note: FIX-IT applied suggested code changes
  double ANMBMM;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:857:10: warning: variable 'A21B11' is not initialized [cppcoreguidelines-init-variables]
  double A21B11;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:857:16: note: FIX-IT applied suggested code changes
  double A21B11;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:858:10: warning: variable 'A12B22' is not initialized [cppcoreguidelines-init-variables]
  double A12B22;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:858:16: note: FIX-IT applied suggested code changes
  double A12B22;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:859:10: warning: variable 'A32B22' is not initialized [cppcoreguidelines-init-variables]
  double A32B22;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:859:16: note: FIX-IT applied suggested code changes
  double A32B22;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:860:10: warning: variable 'B12B22' is not initialized [cppcoreguidelines-init-variables]
  double B12B22;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:860:16: note: FIX-IT applied suggested code changes
  double B12B22;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:861:10: warning: variable 'BMNBNN' is not initialized [cppcoreguidelines-init-variables]
  double BMNBNN;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:861:16: note: FIX-IT applied suggested code changes
  double BMNBNN;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1253:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1253:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1255:10: warning: variable 'cs' is not initialized [cppcoreguidelines-init-variables]
  double cs;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1255:12: note: FIX-IT applied suggested code changes
  double cs;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1256:10: warning: variable 'sn' is not initialized [cppcoreguidelines-init-variables]
  double sn;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1256:12: note: FIX-IT applied suggested code changes
  double sn;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1324:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1324:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1326:10: warning: variable 'cs' is not initialized [cppcoreguidelines-init-variables]
  double cs;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1326:12: note: FIX-IT applied suggested code changes
  double cs;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1327:10: warning: variable 'sn' is not initialized [cppcoreguidelines-init-variables]
  double sn;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1327:12: note: FIX-IT applied suggested code changes
  double sn;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1433:10: warning: variable 'cs' is not initialized [cppcoreguidelines-init-variables]
  double cs;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1433:12: note: FIX-IT applied suggested code changes
  double cs;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1434:10: warning: variable 'sn' is not initialized [cppcoreguidelines-init-variables]
  double sn;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1434:12: note: FIX-IT applied suggested code changes
  double sn;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1556:7: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
      else if (pass1 && pass2)  /* case D */
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1556:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1675:10: warning: variable 'B11' is not initialized [cppcoreguidelines-init-variables]
  double B11;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1675:13: note: FIX-IT applied suggested code changes
  double B11;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1676:10: warning: variable 'B22' is not initialized [cppcoreguidelines-init-variables]
  double B22;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1676:13: note: FIX-IT applied suggested code changes
  double B22;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1678:10: warning: Value stored to 'det' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double det = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1678:10: note: Value stored to 'det' during its initialization is never read
  double det = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1679:10: warning: variable 'cr' is not initialized [cppcoreguidelines-init-variables]
  double cr;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1679:12: note: FIX-IT applied suggested code changes
  double cr;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1680:10: warning: variable 'sr' is not initialized [cppcoreguidelines-init-variables]
  double sr;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1680:12: note: FIX-IT applied suggested code changes
  double sr;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1681:10: warning: variable 'cl' is not initialized [cppcoreguidelines-init-variables]
  double cl;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1681:12: note: FIX-IT applied suggested code changes
  double cl;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1682:10: warning: variable 'sl' is not initialized [cppcoreguidelines-init-variables]
  double sl;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1682:12: note: FIX-IT applied suggested code changes
  double sl;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1878:10: warning: variable 'wr1' is not initialized [cppcoreguidelines-init-variables]
  double wr1;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1878:13: note: FIX-IT applied suggested code changes
  double wr1;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1879:10: warning: variable 'wr2' is not initialized [cppcoreguidelines-init-variables]
  double wr2;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1879:13: note: FIX-IT applied suggested code changes
  double wr2;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1880:10: warning: variable 'wi' is not initialized [cppcoreguidelines-init-variables]
  double wi;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1880:12: note: FIX-IT applied suggested code changes
  double wi;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1881:10: warning: variable 'scale1' is not initialized [cppcoreguidelines-init-variables]
  double scale1;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1881:16: note: FIX-IT applied suggested code changes
  double scale1;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1882:10: warning: variable 'scale2' is not initialized [cppcoreguidelines-init-variables]
  double scale2;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1882:16: note: FIX-IT applied suggested code changes
  double scale2;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1883:10: warning: Value stored to 's1inv' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double s1inv = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1883:10: note: Value stored to 's1inv' during its initialization is never read
  double s1inv = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1884:10: warning: variable 'A11' is not initialized [cppcoreguidelines-init-variables]
  double A11;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1884:13: note: FIX-IT applied suggested code changes
  double A11;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1885:10: warning: variable 'A12' is not initialized [cppcoreguidelines-init-variables]
  double A12;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1885:13: note: FIX-IT applied suggested code changes
  double A12;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1886:10: warning: variable 'A21' is not initialized [cppcoreguidelines-init-variables]
  double A21;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1886:13: note: FIX-IT applied suggested code changes
  double A21;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1887:10: warning: variable 'A22' is not initialized [cppcoreguidelines-init-variables]
  double A22;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1887:13: note: FIX-IT applied suggested code changes
  double A22;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1888:10: warning: variable 'B11' is not initialized [cppcoreguidelines-init-variables]
  double B11;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1888:13: note: FIX-IT applied suggested code changes
  double B11;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1889:10: warning: variable 'B22' is not initialized [cppcoreguidelines-init-variables]
  double B22;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1889:13: note: FIX-IT applied suggested code changes
  double B22;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1890:10: warning: variable 'c11r' is not initialized [cppcoreguidelines-init-variables]
  double c11r;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1890:14: note: FIX-IT applied suggested code changes
  double c11r;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1891:10: warning: variable 'c11i' is not initialized [cppcoreguidelines-init-variables]
  double c11i;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1891:14: note: FIX-IT applied suggested code changes
  double c11i;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1892:10: warning: variable 'c12' is not initialized [cppcoreguidelines-init-variables]
  double c12;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1892:13: note: FIX-IT applied suggested code changes
  double c12;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1893:10: warning: variable 'c21' is not initialized [cppcoreguidelines-init-variables]
  double c21;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1893:13: note: FIX-IT applied suggested code changes
  double c21;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1894:10: warning: variable 'c22r' is not initialized [cppcoreguidelines-init-variables]
  double c22r;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1894:14: note: FIX-IT applied suggested code changes
  double c22r;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1895:10: warning: variable 'c22i' is not initialized [cppcoreguidelines-init-variables]
  double c22i;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1895:14: note: FIX-IT applied suggested code changes
  double c22i;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1896:10: warning: variable 'cz' is not initialized [cppcoreguidelines-init-variables]
  double cz;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1896:12: note: FIX-IT applied suggested code changes
  double cz;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1897:10: warning: variable 'cq' is not initialized [cppcoreguidelines-init-variables]
  double cq;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1897:12: note: FIX-IT applied suggested code changes
  double cq;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1898:10: warning: variable 'szr' is not initialized [cppcoreguidelines-init-variables]
  double szr;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1898:13: note: FIX-IT applied suggested code changes
  double szr;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1899:10: warning: variable 'szi' is not initialized [cppcoreguidelines-init-variables]
  double szi;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1899:13: note: FIX-IT applied suggested code changes
  double szi;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1900:10: warning: variable 'sqr' is not initialized [cppcoreguidelines-init-variables]
  double sqr;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1900:13: note: FIX-IT applied suggested code changes
  double sqr;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1901:10: warning: variable 'sqi' is not initialized [cppcoreguidelines-init-variables]
  double sqi;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1901:13: note: FIX-IT applied suggested code changes
  double sqi;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1902:10: warning: variable 'a1r' is not initialized [cppcoreguidelines-init-variables]
  double a1r;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1902:13: note: FIX-IT applied suggested code changes
  double a1r;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1903:10: warning: variable 'a1i' is not initialized [cppcoreguidelines-init-variables]
  double a1i;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1903:13: note: FIX-IT applied suggested code changes
  double a1i;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1904:10: warning: variable 'a2r' is not initialized [cppcoreguidelines-init-variables]
  double a2r;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1904:13: note: FIX-IT applied suggested code changes
  double a2r;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1905:10: warning: variable 'a2i' is not initialized [cppcoreguidelines-init-variables]
  double a2i;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1905:13: note: FIX-IT applied suggested code changes
  double a2i;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1906:10: warning: variable 'b1r' is not initialized [cppcoreguidelines-init-variables]
  double b1r;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1906:13: note: FIX-IT applied suggested code changes
  double b1r;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1907:10: warning: variable 'b1i' is not initialized [cppcoreguidelines-init-variables]
  double b1i;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1907:13: note: FIX-IT applied suggested code changes
  double b1i;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1908:10: warning: variable 'b1a' is not initialized [cppcoreguidelines-init-variables]
  double b1a;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1908:13: note: FIX-IT applied suggested code changes
  double b1a;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1909:10: warning: variable 'b2r' is not initialized [cppcoreguidelines-init-variables]
  double b2r;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1909:13: note: FIX-IT applied suggested code changes
  double b2r;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1910:10: warning: variable 'b2i' is not initialized [cppcoreguidelines-init-variables]
  double b2i;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1910:13: note: FIX-IT applied suggested code changes
  double b2i;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1911:10: warning: variable 'b2a' is not initialized [cppcoreguidelines-init-variables]
  double b2a;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1911:13: note: FIX-IT applied suggested code changes
  double b2a;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1912:10: warning: variable 'alphar' is not initialized [cppcoreguidelines-init-variables]
  double alphar;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1912:16: note: FIX-IT applied suggested code changes
  double alphar;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1913:10: warning: variable 'alphai' is not initialized [cppcoreguidelines-init-variables]
  double alphai;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1913:16: note: FIX-IT applied suggested code changes
  double alphai;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1914:10: warning: variable 't1' is not initialized [cppcoreguidelines-init-variables]
  double t1;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1914:12: note: FIX-IT applied suggested code changes
  double t1;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1915:10: warning: variable 'an' is not initialized [cppcoreguidelines-init-variables]
  double an;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1915:12: note: FIX-IT applied suggested code changes
  double an;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1916:10: warning: variable 'bn' is not initialized [cppcoreguidelines-init-variables]
  double bn;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1916:12: note: FIX-IT applied suggested code changes
  double bn;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1917:10: warning: variable 'tempr' is not initialized [cppcoreguidelines-init-variables]
  double tempr;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1917:15: note: FIX-IT applied suggested code changes
  double tempr;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1918:10: warning: variable 'tempi' is not initialized [cppcoreguidelines-init-variables]
  double tempi;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1918:15: note: FIX-IT applied suggested code changes
  double tempi;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1919:10: warning: variable 'wabs' is not initialized [cppcoreguidelines-init-variables]
  double wabs;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:1919:14: note: FIX-IT applied suggested code changes
  double wabs;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:2119:10: warning: Value stored to 'ratio' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double ratio = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:2119:10: note: Value stored to 'ratio' during its initialization is never read
  double ratio = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:2138:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:2138:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:2139:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\gen.c:2139:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
[452/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/genv.c.obj
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:328:38: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  const double small = GSL_DBL_MIN * N / GSL_DBL_EPSILON;
                                     ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:330:46: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  const double bignum = 1.0 / (GSL_DBL_MIN * N);
                                             ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:331:10: warning: variable 'i' is not initialized [cppcoreguidelines-init-variables]
  size_t i;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:331:11: note: FIX-IT applied suggested code changes
  size_t i;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:332:10: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
  size_t j;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:332:11: note: FIX-IT applied suggested code changes
  size_t j;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:333:10: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
  size_t k;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:333:11: note: FIX-IT applied suggested code changes
  size_t k;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:334:10: warning: variable 'end' is not initialized [cppcoreguidelines-init-variables]
  size_t end;
         ^
             = 0
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:334:13: note: FIX-IT applied suggested code changes
  size_t end;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:336:10: warning: variable 'anorm' is not initialized [cppcoreguidelines-init-variables]
  double anorm;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:20:1: note: FIX-IT applied suggested code changes
#include <stdlib.h>
^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:336:15: note: FIX-IT applied suggested code changes
  double anorm;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:337:10: warning: variable 'bnorm' is not initialized [cppcoreguidelines-init-variables]
  double bnorm;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:337:15: note: FIX-IT applied suggested code changes
  double bnorm;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:338:10: warning: variable 'temp' is not initialized [cppcoreguidelines-init-variables]
  double temp;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:338:14: note: FIX-IT applied suggested code changes
  double temp;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:339:10: warning: variable 'temp2' is not initialized [cppcoreguidelines-init-variables]
  double temp2;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:339:15: note: FIX-IT applied suggested code changes
  double temp2;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:340:10: warning: variable 'temp2r' is not initialized [cppcoreguidelines-init-variables]
  double temp2r;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:340:16: note: FIX-IT applied suggested code changes
  double temp2r;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:341:10: warning: variable 'temp2i' is not initialized [cppcoreguidelines-init-variables]
  double temp2i;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:341:16: note: FIX-IT applied suggested code changes
  double temp2i;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:342:10: warning: variable 'ascale' is not initialized [cppcoreguidelines-init-variables]
  double ascale;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:342:16: note: FIX-IT applied suggested code changes
  double ascale;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:343:10: warning: variable 'bscale' is not initialized [cppcoreguidelines-init-variables]
  double bscale;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:343:16: note: FIX-IT applied suggested code changes
  double bscale;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:344:10: warning: variable 'salfar' is not initialized [cppcoreguidelines-init-variables]
  double salfar;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:344:16: note: FIX-IT applied suggested code changes
  double salfar;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:345:10: warning: variable 'sbeta' is not initialized [cppcoreguidelines-init-variables]
  double sbeta;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:345:15: note: FIX-IT applied suggested code changes
  double sbeta;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:346:10: warning: variable 'acoef' is not initialized [cppcoreguidelines-init-variables]
  double acoef;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:346:15: note: FIX-IT applied suggested code changes
  double acoef;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:347:10: warning: variable 'bcoefr' is not initialized [cppcoreguidelines-init-variables]
  double bcoefr;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:347:16: note: FIX-IT applied suggested code changes
  double bcoefr;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:348:10: warning: variable 'bcoefi' is not initialized [cppcoreguidelines-init-variables]
  double bcoefi;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:348:16: note: FIX-IT applied suggested code changes
  double bcoefi;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:349:10: warning: variable 'acoefa' is not initialized [cppcoreguidelines-init-variables]
  double acoefa;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:349:16: note: FIX-IT applied suggested code changes
  double acoefa;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:350:10: warning: variable 'bcoefa' is not initialized [cppcoreguidelines-init-variables]
  double bcoefa;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:350:16: note: FIX-IT applied suggested code changes
  double bcoefa;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:351:10: warning: variable 'creala' is not initialized [cppcoreguidelines-init-variables]
  double creala;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:351:16: note: FIX-IT applied suggested code changes
  double creala;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:352:10: warning: variable 'cimaga' is not initialized [cppcoreguidelines-init-variables]
  double cimaga;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:352:16: note: FIX-IT applied suggested code changes
  double cimaga;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:353:10: warning: variable 'crealb' is not initialized [cppcoreguidelines-init-variables]
  double crealb;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:353:16: note: FIX-IT applied suggested code changes
  double crealb;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:354:10: warning: variable 'cimagb' is not initialized [cppcoreguidelines-init-variables]
  double cimagb;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:354:16: note: FIX-IT applied suggested code changes
  double cimagb;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:355:10: warning: variable 'cre2a' is not initialized [cppcoreguidelines-init-variables]
  double cre2a;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:355:15: note: FIX-IT applied suggested code changes
  double cre2a;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:356:10: warning: variable 'cim2a' is not initialized [cppcoreguidelines-init-variables]
  double cim2a;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:356:15: note: FIX-IT applied suggested code changes
  double cim2a;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:357:10: warning: variable 'cre2b' is not initialized [cppcoreguidelines-init-variables]
  double cre2b;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:357:15: note: FIX-IT applied suggested code changes
  double cre2b;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:358:10: warning: variable 'cim2b' is not initialized [cppcoreguidelines-init-variables]
  double cim2b;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:358:15: note: FIX-IT applied suggested code changes
  double cim2b;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:359:10: warning: variable 'dmin' is not initialized [cppcoreguidelines-init-variables]
  double dmin;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:359:14: note: FIX-IT applied suggested code changes
  double dmin;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:360:10: warning: variable 'xmax' is not initialized [cppcoreguidelines-init-variables]
  double xmax;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:360:14: note: FIX-IT applied suggested code changes
  double xmax;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:362:10: warning: variable 'nw' is not initialized [cppcoreguidelines-init-variables]
  size_t nw;
         ^
            = 0
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:362:12: note: FIX-IT applied suggested code changes
  size_t nw;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:363:10: warning: variable 'na' is not initialized [cppcoreguidelines-init-variables]
  size_t na;
         ^
            = 0
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:363:12: note: FIX-IT applied suggested code changes
  size_t na;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:364:7: warning: variable 'lsa' is not initialized [cppcoreguidelines-init-variables]
  int lsa;
      ^
          = 0
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:364:10: note: FIX-IT applied suggested code changes
  int lsa;
         ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:365:7: warning: variable 'lsb' is not initialized [cppcoreguidelines-init-variables]
  int lsb;
      ^
          = 0
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:365:10: note: FIX-IT applied suggested code changes
  int lsb;
         ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:372:10: warning: variable 'jr' is not initialized [cppcoreguidelines-init-variables]
  size_t jr;
         ^
            = 0
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:372:12: note: FIX-IT applied suggested code changes
  size_t jr;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:373:10: warning: variable 'jc' is not initialized [cppcoreguidelines-init-variables]
  size_t jc;
         ^
            = 0
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:373:12: note: FIX-IT applied suggested code changes
  size_t jc;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:374:10: warning: variable 'ja' is not initialized [cppcoreguidelines-init-variables]
  size_t ja;
         ^
            = 0
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:374:12: note: FIX-IT applied suggested code changes
  size_t ja;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:375:10: warning: Value stored to 'xscale' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double xscale = NAN;
         ^~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:375:10: note: Value stored to 'xscale' during its initialization is never read
  double xscale = NAN;
         ^~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:952:10: warning: Value stored to 'scale' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double scale = NAN; /* scaling factor */
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\genv.c:952:10: note: Value stored to 'scale' during its initialization is never read
  double scale = NAN; /* scaling factor */
         ^~~~~
[453/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/sort.c.obj
[454/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/francis.c.obj
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:456:10: warning: Value stored to 'tau_i' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double tau_i = NAN;    /* householder coefficient */
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:456:10: note: Value stored to 'tau_i' during its initialization is never read
  double tau_i = NAN;    /* householder coefficient */
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:458:10: warning: Value stored to 'scale' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double scale = NAN;    /* scale factor to avoid overflow */
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:458:10: note: Value stored to 'scale' during its initialization is never read
  double scale = NAN;    /* scale factor to avoid overflow */
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:461:10: warning: variable 'q' is not initialized [cppcoreguidelines-init-variables]
  size_t q;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:461:11: note: FIX-IT applied suggested code changes
  size_t q;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:462:10: warning: variable 'r' is not initialized [cppcoreguidelines-init-variables]
  size_t r;
         ^
           = 0
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:462:11: note: FIX-IT applied suggested code changes
  size_t r;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:464:10: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
  double s;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:464:11: note: FIX-IT applied suggested code changes
  double s;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:465:10: warning: variable 'disc' is not initialized [cppcoreguidelines-init-variables]
  double disc;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:465:14: note: FIX-IT applied suggested code changes
  double disc;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:466:10: warning: variable 'h_nn' is not initialized [cppcoreguidelines-init-variables]
  double h_nn;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:466:14: note: FIX-IT applied suggested code changes
  double h_nn;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:468:10: warning: variable 'h_nm1nm1' is not initialized [cppcoreguidelines-init-variables]
         h_nm1nm1;
         ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:468:18: note: FIX-IT applied suggested code changes
         h_nm1nm1;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:470:10: warning: variable 'h_cross' is not initialized [cppcoreguidelines-init-variables]
         h_cross;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:470:17: note: FIX-IT applied suggested code changes
         h_cross;
                ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:472:10: warning: variable 'h_tmp1' is not initialized [cppcoreguidelines-init-variables]
         h_tmp1;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:472:16: note: FIX-IT applied suggested code changes
         h_tmp1;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:473:10: warning: variable 'h_tmp2' is not initialized [cppcoreguidelines-init-variables]
  double h_tmp2;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:473:16: note: FIX-IT applied suggested code changes
  double h_tmp2;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:507:18: warning: Value stored to 'ave' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
          double ave = NAN;
                 ^~~
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:507:18: note: Value stored to 'ave' during its initialization is never read
          double ave = NAN;
                 ^~~
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:743:10: warning: variable 'cs' is not initialized [cppcoreguidelines-init-variables]
  double cs;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:743:12: note: FIX-IT applied suggested code changes
  double cs;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:744:10: warning: variable 'sn' is not initialized [cppcoreguidelines-init-variables]
  double sn;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:744:12: note: FIX-IT applied suggested code changes
  double sn;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:879:10: warning: Value stored to 'ratio' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double ratio = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:879:10: note: Value stored to 'ratio' during its initialization is never read
  double ratio = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:915:10: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
  double a;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:915:11: note: FIX-IT applied suggested code changes
  double a;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:916:10: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
  double b;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:916:11: note: FIX-IT applied suggested code changes
  double b;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:917:10: warning: variable 'c' is not initialized [cppcoreguidelines-init-variables]
  double c;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:917:11: note: FIX-IT applied suggested code changes
  double c;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:918:10: warning: variable 'd' is not initialized [cppcoreguidelines-init-variables]
  double d; /* input matrix values */
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:918:11: note: FIX-IT applied suggested code changes
  double d; /* input matrix values */
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:919:10: warning: Value stored to 'tmp' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double tmp = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:919:10: note: Value stored to 'tmp' during its initialization is never read
  double tmp = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:920:10: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  double p;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:920:11: note: FIX-IT applied suggested code changes
  double p;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:921:10: warning: variable 'z' is not initialized [cppcoreguidelines-init-variables]
  double z;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:921:11: note: FIX-IT applied suggested code changes
  double z;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:922:10: warning: variable 'bcmax' is not initialized [cppcoreguidelines-init-variables]
  double bcmax;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:922:15: note: FIX-IT applied suggested code changes
  double bcmax;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:923:10: warning: variable 'bcmis' is not initialized [cppcoreguidelines-init-variables]
  double bcmis;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:923:15: note: FIX-IT applied suggested code changes
  double bcmis;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:924:10: warning: variable 'scale' is not initialized [cppcoreguidelines-init-variables]
  double scale;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:924:15: note: FIX-IT applied suggested code changes
  double scale;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:925:10: warning: variable 'tau' is not initialized [cppcoreguidelines-init-variables]
  double tau;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:925:13: note: FIX-IT applied suggested code changes
  double tau;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:926:10: warning: variable 'sigma' is not initialized [cppcoreguidelines-init-variables]
  double sigma;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:926:15: note: FIX-IT applied suggested code changes
  double sigma;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:927:10: warning: variable 'cs1' is not initialized [cppcoreguidelines-init-variables]
  double cs1;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:927:13: note: FIX-IT applied suggested code changes
  double cs1;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:928:10: warning: variable 'sn1' is not initialized [cppcoreguidelines-init-variables]
  double sn1;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:928:13: note: FIX-IT applied suggested code changes
  double sn1;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:929:10: warning: variable 'aa' is not initialized [cppcoreguidelines-init-variables]
  double aa;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:929:12: note: FIX-IT applied suggested code changes
  double aa;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:930:10: warning: variable 'bb' is not initialized [cppcoreguidelines-init-variables]
  double bb;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:930:12: note: FIX-IT applied suggested code changes
  double bb;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:931:10: warning: variable 'cc' is not initialized [cppcoreguidelines-init-variables]
  double cc;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:931:12: note: FIX-IT applied suggested code changes
  double cc;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:932:10: warning: variable 'dd' is not initialized [cppcoreguidelines-init-variables]
  double dd;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:932:12: note: FIX-IT applied suggested code changes
  double dd;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:933:10: warning: variable 'sab' is not initialized [cppcoreguidelines-init-variables]
  double sab;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:933:13: note: FIX-IT applied suggested code changes
  double sab;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:934:10: warning: variable 'sac' is not initialized [cppcoreguidelines-init-variables]
  double sac;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\francis.c:934:13: note: FIX-IT applied suggested code changes
  double sac;
            ^
[455/1003] Building C object gsl/CMakeFiles/gsl.dir/eigen/schur.c.obj
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:85:10: warning: variable 'anorm' is not initialized [cppcoreguidelines-init-variables]
  double anorm;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:29:1: note: FIX-IT applied suggested code changes
^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:85:15: note: FIX-IT applied suggested code changes
  double anorm;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:86:10: warning: variable 'bnorm' is not initialized [cppcoreguidelines-init-variables]
  double bnorm;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:86:15: note: FIX-IT applied suggested code changes
  double bnorm;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:87:10: warning: variable 'ascale' is not initialized [cppcoreguidelines-init-variables]
  double ascale;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:87:16: note: FIX-IT applied suggested code changes
  double ascale;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:88:10: warning: variable 'bscale' is not initialized [cppcoreguidelines-init-variables]
  double bscale;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:88:16: note: FIX-IT applied suggested code changes
  double bscale;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:89:10: warning: variable 'bsize' is not initialized [cppcoreguidelines-init-variables]
  double bsize;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:89:15: note: FIX-IT applied suggested code changes
  double bsize;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:90:10: warning: variable 's1' is not initialized [cppcoreguidelines-init-variables]
  double s1;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:90:12: note: FIX-IT applied suggested code changes
  double s1;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:91:10: warning: variable 's2' is not initialized [cppcoreguidelines-init-variables]
  double s2;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:91:12: note: FIX-IT applied suggested code changes
  double s2;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:92:10: warning: variable 'A11' is not initialized [cppcoreguidelines-init-variables]
  double A11;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:92:13: note: FIX-IT applied suggested code changes
  double A11;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:93:10: warning: variable 'A12' is not initialized [cppcoreguidelines-init-variables]
  double A12;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:93:13: note: FIX-IT applied suggested code changes
  double A12;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:94:10: warning: variable 'A21' is not initialized [cppcoreguidelines-init-variables]
  double A21;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:94:13: note: FIX-IT applied suggested code changes
  double A21;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:95:10: warning: variable 'A22' is not initialized [cppcoreguidelines-init-variables]
  double A22;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:95:13: note: FIX-IT applied suggested code changes
  double A22;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:96:10: warning: variable 'B11' is not initialized [cppcoreguidelines-init-variables]
  double B11;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:96:13: note: FIX-IT applied suggested code changes
  double B11;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:97:10: warning: variable 'B12' is not initialized [cppcoreguidelines-init-variables]
  double B12;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:97:13: note: FIX-IT applied suggested code changes
  double B12;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:98:10: warning: variable 'B22' is not initialized [cppcoreguidelines-init-variables]
  double B22;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:98:13: note: FIX-IT applied suggested code changes
  double B22;
            ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:99:10: warning: variable 'binv11' is not initialized [cppcoreguidelines-init-variables]
  double binv11;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:99:16: note: FIX-IT applied suggested code changes
  double binv11;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:100:10: warning: variable 'binv22' is not initialized [cppcoreguidelines-init-variables]
  double binv22;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:100:16: note: FIX-IT applied suggested code changes
  double binv22;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:101:10: warning: Value stored to 'bmin' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double bmin = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:101:10: note: Value stored to 'bmin' during its initialization is never read
  double bmin = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:102:10: warning: variable 'as11' is not initialized [cppcoreguidelines-init-variables]
  double as11;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:102:14: note: FIX-IT applied suggested code changes
  double as11;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:103:10: warning: variable 'as12' is not initialized [cppcoreguidelines-init-variables]
  double as12;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:103:14: note: FIX-IT applied suggested code changes
  double as12;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:104:10: warning: variable 'as22' is not initialized [cppcoreguidelines-init-variables]
  double as22;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:104:14: note: FIX-IT applied suggested code changes
  double as22;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:105:10: warning: variable 'abi22' is not initialized [cppcoreguidelines-init-variables]
  double abi22;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:105:15: note: FIX-IT applied suggested code changes
  double abi22;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:106:10: warning: variable 'pp' is not initialized [cppcoreguidelines-init-variables]
  double pp;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:106:12: note: FIX-IT applied suggested code changes
  double pp;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:107:10: warning: variable 'qq' is not initialized [cppcoreguidelines-init-variables]
  double qq;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:107:12: note: FIX-IT applied suggested code changes
  double qq;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:108:10: warning: variable 'shift' is not initialized [cppcoreguidelines-init-variables]
  double shift;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:108:15: note: FIX-IT applied suggested code changes
  double shift;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:109:10: warning: variable 'ss' is not initialized [cppcoreguidelines-init-variables]
  double ss;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:109:12: note: FIX-IT applied suggested code changes
  double ss;
           ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:110:10: warning: variable 'discr' is not initialized [cppcoreguidelines-init-variables]
  double discr;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:110:15: note: FIX-IT applied suggested code changes
  double discr;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:111:10: warning: variable 'r' is not initialized [cppcoreguidelines-init-variables]
  double r;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:111:11: note: FIX-IT applied suggested code changes
  double r;
          ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:227:12: warning: variable 'c1' is not initialized [cppcoreguidelines-init-variables]
    double c1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:227:14: note: FIX-IT applied suggested code changes
    double c1;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:228:12: warning: variable 'c2' is not initialized [cppcoreguidelines-init-variables]
    double c2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:228:14: note: FIX-IT applied suggested code changes
    double c2;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:229:12: warning: variable 'c3' is not initialized [cppcoreguidelines-init-variables]
    double c3;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:229:14: note: FIX-IT applied suggested code changes
    double c3;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:230:12: warning: variable 'c4' is not initialized [cppcoreguidelines-init-variables]
    double c4;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:230:14: note: FIX-IT applied suggested code changes
    double c4;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:231:12: warning: variable 'c5' is not initialized [cppcoreguidelines-init-variables]
    double c5;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:231:14: note: FIX-IT applied suggested code changes
    double c5;
             ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:232:12: warning: variable 'wabs' is not initialized [cppcoreguidelines-init-variables]
    double wabs;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:232:16: note: FIX-IT applied suggested code changes
    double wabs;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:233:12: warning: variable 'wsize' is not initialized [cppcoreguidelines-init-variables]
    double wsize;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:233:17: note: FIX-IT applied suggested code changes
    double wsize;
                ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:234:12: warning: variable 'wscale' is not initialized [cppcoreguidelines-init-variables]
    double wscale;
           ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:234:18: note: FIX-IT applied suggested code changes
    double wscale;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:360:10: warning: Value stored to 'bnorm' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double bnorm = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:360:10: note: Value stored to 'bnorm' during its initialization is never read
  double bnorm = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:365:14: warning: variable 'c' is not initialized [cppcoreguidelines-init-variables]
      double c;
             ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:365:15: note: FIX-IT applied suggested code changes
      double c;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:367:14: warning: variable 'cnorm' is not initialized [cppcoreguidelines-init-variables]
             cnorm; /* |c| */
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:367:19: note: FIX-IT applied suggested code changes
             cnorm; /* |c| */
                  ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:398:14: warning: Value stored to 'cmax' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double cmax = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:398:14: note: Value stored to 'cmax' during its initialization is never read
      double cmax = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:399:14: warning: variable 'icmax' is not initialized [cppcoreguidelines-init-variables]
      size_t icmax;
             ^
                   = 0
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:399:19: note: FIX-IT applied suggested code changes
      size_t icmax;
                  ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:400:14: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      size_t j;
             ^
               = 0
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:400:15: note: FIX-IT applied suggested code changes
      size_t j;
              ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:401:14: warning: variable 'bval1' is not initialized [cppcoreguidelines-init-variables]
      double bval1;
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:401:19: note: FIX-IT applied suggested code changes
      double bval1;
                  ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:402:14: warning: variable 'bval2' is not initialized [cppcoreguidelines-init-variables]
      double bval2;
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:402:19: note: FIX-IT applied suggested code changes
      double bval2;
                  ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:403:14: warning: variable 'ur11' is not initialized [cppcoreguidelines-init-variables]
      double ur11;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:403:18: note: FIX-IT applied suggested code changes
      double ur11;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:404:14: warning: variable 'ur12' is not initialized [cppcoreguidelines-init-variables]
      double ur12;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:404:18: note: FIX-IT applied suggested code changes
      double ur12;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:405:14: warning: variable 'ur22' is not initialized [cppcoreguidelines-init-variables]
      double ur22;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:405:18: note: FIX-IT applied suggested code changes
      double ur22;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:406:14: warning: variable 'ur11r' is not initialized [cppcoreguidelines-init-variables]
      double ur11r;
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:406:19: note: FIX-IT applied suggested code changes
      double ur11r;
                  ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:407:14: warning: variable 'cr21' is not initialized [cppcoreguidelines-init-variables]
      double cr21;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:407:18: note: FIX-IT applied suggested code changes
      double cr21;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:408:14: warning: variable 'cr22' is not initialized [cppcoreguidelines-init-variables]
      double cr22;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:408:18: note: FIX-IT applied suggested code changes
      double cr22;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:409:14: warning: Value stored to 'lr21' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double lr21 = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:409:14: note: Value stored to 'lr21' during its initialization is never read
      double lr21 = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:410:14: warning: variable 'b1' is not initialized [cppcoreguidelines-init-variables]
      double b1;
             ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:410:16: note: FIX-IT applied suggested code changes
      double b1;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:411:14: warning: variable 'b2' is not initialized [cppcoreguidelines-init-variables]
      double b2;
             ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:411:16: note: FIX-IT applied suggested code changes
      double b2;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:412:14: warning: variable 'bbnd' is not initialized [cppcoreguidelines-init-variables]
      double bbnd;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:412:18: note: FIX-IT applied suggested code changes
      double bbnd;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:413:14: warning: variable 'x1' is not initialized [cppcoreguidelines-init-variables]
      double x1;
             ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:413:16: note: FIX-IT applied suggested code changes
      double x1;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:414:14: warning: variable 'x2' is not initialized [cppcoreguidelines-init-variables]
      double x2;
             ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:414:16: note: FIX-IT applied suggested code changes
      double x2;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:415:14: warning: Value stored to 'temp' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double temp = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:415:14: note: Value stored to 'temp' during its initialization is never read
      double temp = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:585:10: warning: Value stored to 'bnorm' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double bnorm = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:585:10: note: Value stored to 'bnorm' during its initialization is never read
  double bnorm = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:589:14: warning: variable 'cr' is not initialized [cppcoreguidelines-init-variables]
      double cr;
             ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:589:16: note: FIX-IT applied suggested code changes
      double cr;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:591:14: warning: variable 'ci' is not initialized [cppcoreguidelines-init-variables]
             ci;
             ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:591:16: note: FIX-IT applied suggested code changes
             ci;
               ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:592:14: warning: variable 'cnorm' is not initialized [cppcoreguidelines-init-variables]
      double cnorm; /* |c| */
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:592:19: note: FIX-IT applied suggested code changes
      double cnorm; /* |c| */
                  ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:636:15: warning: variable 'civ' is not initialized [cppcoreguidelines-init-variables]
      double *civ;
              ^
                  = NULL
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:636:18: note: FIX-IT applied suggested code changes
      double *civ;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:637:15: warning: variable 'crv' is not initialized [cppcoreguidelines-init-variables]
      double *crv;
              ^
                  = NULL
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:637:18: note: FIX-IT applied suggested code changes
      double *crv;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:638:14: warning: Value stored to 'cmax' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double cmax = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:638:14: note: Value stored to 'cmax' during its initialization is never read
      double cmax = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:643:14: warning: variable 'xr1' is not initialized [cppcoreguidelines-init-variables]
      double xr1;
             ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:643:17: note: FIX-IT applied suggested code changes
      double xr1;
                ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:644:14: warning: variable 'xi1' is not initialized [cppcoreguidelines-init-variables]
      double xi1;
             ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:644:17: note: FIX-IT applied suggested code changes
      double xi1;
                ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:647:14: warning: Value stored to 'temp' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double temp = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:647:14: note: Value stored to 'temp' during its initialization is never read
      double temp = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:648:14: warning: variable 'ur11' is not initialized [cppcoreguidelines-init-variables]
      double ur11;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:648:18: note: FIX-IT applied suggested code changes
      double ur11;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:649:14: warning: variable 'ur12' is not initialized [cppcoreguidelines-init-variables]
      double ur12;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:649:18: note: FIX-IT applied suggested code changes
      double ur12;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:650:14: warning: variable 'ur22' is not initialized [cppcoreguidelines-init-variables]
      double ur22;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:650:18: note: FIX-IT applied suggested code changes
      double ur22;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:651:14: warning: variable 'ui11' is not initialized [cppcoreguidelines-init-variables]
      double ui11;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:651:18: note: FIX-IT applied suggested code changes
      double ui11;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:652:14: warning: variable 'ui12' is not initialized [cppcoreguidelines-init-variables]
      double ui12;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:652:18: note: FIX-IT applied suggested code changes
      double ui12;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:653:14: warning: variable 'ui22' is not initialized [cppcoreguidelines-init-variables]
      double ui22;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:653:18: note: FIX-IT applied suggested code changes
      double ui22;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:654:14: warning: variable 'ur11r' is not initialized [cppcoreguidelines-init-variables]
      double ur11r;
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:654:19: note: FIX-IT applied suggested code changes
      double ur11r;
                  ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:655:14: warning: variable 'ui11r' is not initialized [cppcoreguidelines-init-variables]
      double ui11r;
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:655:19: note: FIX-IT applied suggested code changes
      double ui11r;
                  ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:656:14: warning: variable 'ur12s' is not initialized [cppcoreguidelines-init-variables]
      double ur12s;
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:656:19: note: FIX-IT applied suggested code changes
      double ur12s;
                  ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:657:14: warning: variable 'ui12s' is not initialized [cppcoreguidelines-init-variables]
      double ui12s;
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:657:19: note: FIX-IT applied suggested code changes
      double ui12s;
                  ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:658:14: warning: Value stored to 'u22abs' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double u22abs = NAN;
             ^~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:658:14: note: Value stored to 'u22abs' during its initialization is never read
      double u22abs = NAN;
             ^~~~~~
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:659:14: warning: variable 'lr21' is not initialized [cppcoreguidelines-init-variables]
      double lr21;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:659:18: note: FIX-IT applied suggested code changes
      double lr21;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:660:14: warning: variable 'li21' is not initialized [cppcoreguidelines-init-variables]
      double li21;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:660:18: note: FIX-IT applied suggested code changes
      double li21;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:661:14: warning: variable 'cr21' is not initialized [cppcoreguidelines-init-variables]
      double cr21;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:661:18: note: FIX-IT applied suggested code changes
      double cr21;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:662:14: warning: variable 'cr22' is not initialized [cppcoreguidelines-init-variables]
      double cr22;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:662:18: note: FIX-IT applied suggested code changes
      double cr22;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:663:14: warning: variable 'ci21' is not initialized [cppcoreguidelines-init-variables]
      double ci21;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:663:18: note: FIX-IT applied suggested code changes
      double ci21;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:664:14: warning: variable 'ci22' is not initialized [cppcoreguidelines-init-variables]
      double ci22;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:664:18: note: FIX-IT applied suggested code changes
      double ci22;
                 ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:665:14: warning: variable 'br1' is not initialized [cppcoreguidelines-init-variables]
      double br1;
             ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:665:17: note: FIX-IT applied suggested code changes
      double br1;
                ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:666:14: warning: variable 'bi1' is not initialized [cppcoreguidelines-init-variables]
      double bi1;
             ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:666:17: note: FIX-IT applied suggested code changes
      double bi1;
                ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:667:14: warning: variable 'br2' is not initialized [cppcoreguidelines-init-variables]
      double br2;
             ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:667:17: note: FIX-IT applied suggested code changes
      double br2;
                ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:668:14: warning: variable 'bi2' is not initialized [cppcoreguidelines-init-variables]
      double bi2;
             ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:668:17: note: FIX-IT applied suggested code changes
      double bi2;
                ^
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:669:14: warning: variable 'bbnd' is not initialized [cppcoreguidelines-init-variables]
      double bbnd;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\eigen\schur.c:669:18: note: FIX-IT applied suggested code changes
      double bbnd;
                 ^
[456/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/airy.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:247:10: warning: variable 'm' is not initialized [cppcoreguidelines-init-variables]
  double m;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:27:1: note: FIX-IT applied suggested code changes
^
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:247:11: note: FIX-IT applied suggested code changes
  double m;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:248:10: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  double p;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:248:11: note: FIX-IT applied suggested code changes
  double p;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:249:10: warning: Value stored to 'sqx' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double sqx = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:249:10: note: Value stored to 'sqx' during its initialization is never read
  double sqx = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:686:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:686:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:686:8: note: FIX-IT applied suggested code changes
  else {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:734:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:734:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:734:8: note: FIX-IT applied suggested code changes
  else {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:765:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if(x <= 2.0) {
  ^~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:765:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:827:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if(x <= 2.0) {
  ^~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\airy.c:827:3: note: FIX-IT applied suggested code changes
[457/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/airy_der.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\airy_der.c:593:10: warning: variable 'a' is not initialized [cppcoreguidelines-init-variables]
  double a;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\airy_der.c:27:1: note: FIX-IT applied suggested code changes
^
D:\a\aprg\aprg\gsl\gsl\specfunc\airy_der.c:593:11: note: FIX-IT applied suggested code changes
  double a;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\airy_der.c:594:10: warning: variable 'p' is not initialized [cppcoreguidelines-init-variables]
  double p;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\airy_der.c:594:11: note: FIX-IT applied suggested code changes
  double p;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\airy_der.c:595:10: warning: Value stored to 'sqx' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double sqx = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\airy_der.c:595:10: note: Value stored to 'sqx' during its initialization is never read
  double sqx = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\airy_der.c:672:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if(x <= 4.0) {
  ^~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\airy_der.c:672:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\airy_der.c:723:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if(x*x*x < 9.0/4.0 * GSL_LOG_DBL_MIN*GSL_LOG_DBL_MIN) {
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\airy_der.c:723:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\airy_der.c:776:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if(x < 2.0) {
  ^~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\airy_der.c:776:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\airy_der.c:840:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if(x < 2.0) {
  ^~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\airy_der.c:840:3: note: FIX-IT applied suggested code changes
[458/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/airy_zero.c.obj
[459/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/atanint.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\atanint.c:83:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if(ax <= 1.0) {
  ^~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\atanint.c:83:3: note: FIX-IT applied suggested code changes
[460/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:227:7: warning: variable 'convP' is not initialized [cppcoreguidelines-init-variables]
  int convP;
      ^
            = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:227:12: note: FIX-IT applied suggested code changes
  int convP;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:228:7: warning: variable 'convQ' is not initialized [cppcoreguidelines-init-variables]
  int convQ;
      ^
            = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:228:12: note: FIX-IT applied suggested code changes
  int convQ;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:373:12: warning: Value stored to 'sum' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double sum = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:373:12: note: Value stored to 'sum' during its initialization is never read
    double sum = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:412:12: warning: Value stored to 'sum' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double sum = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:412:12: note: Value stored to 'sum' during its initialization is never read
    double sum = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:495:7: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
      double P, Q;
      ^~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:495:7: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:495:14: warning: variable 'P' is not initialized [cppcoreguidelines-init-variables]
      double P, Q;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:495:17: warning: variable 'Q' is not initialized [cppcoreguidelines-init-variables]
      double P, Q;
                ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:496:14: warning: variable 'J_ratio' is not initialized [cppcoreguidelines-init-variables]
      double J_ratio;
             ^
                     = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:496:21: note: FIX-IT applied suggested code changes
      double J_ratio;
                    ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:497:14: warning: variable 'J_sgn' is not initialized [cppcoreguidelines-init-variables]
      double J_sgn;
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:497:19: note: FIX-IT applied suggested code changes
      double J_sgn;
                  ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:512:5: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
    else {
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:512:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:512:10: note: FIX-IT applied suggested code changes
    else {
         ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:542:10: warning: Value stored to 'an' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double an = NAN;
         ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:542:10: note: Value stored to 'an' during its initialization is never read
  double an = NAN;
         ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:548:12: warning: Value stored to 'old_fn' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double old_fn = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:548:12: note: Value stored to 'old_fn' during its initialization is never read
    double old_fn = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:549:12: warning: Value stored to 'del' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double del = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:549:12: note: Value stored to 'del' during its initialization is never read
    double del = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:564:7: warning: Value stored to 'Anm2' is never read [clang-analyzer-deadcode.DeadStores]
      Anm2 /= RECUR_BIG;
      ^       ~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:564:7: note: Value stored to 'Anm2' is never read
      Anm2 /= RECUR_BIG;
      ^       ~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:570:7: warning: Value stored to 'Anm2' is never read [clang-analyzer-deadcode.DeadStores]
      Anm2 /= RECUR_SMALL;
      ^       ~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:570:7: note: Value stored to 'Anm2' is never read
      Anm2 /= RECUR_SMALL;
      ^       ~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:571:7: warning: Value stored to 'Bnm2' is never read [clang-analyzer-deadcode.DeadStores]
      Bnm2 /= RECUR_SMALL;
      ^       ~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:571:7: note: Value stored to 'Bnm2' is never read
      Bnm2 /= RECUR_SMALL;
      ^       ~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:765:12: warning: Value stored to 'dels' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double dels = NAN;
           ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:765:12: note: Value stored to 'dels' during its initialization is never read
    double dels = NAN;
           ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:766:12: warning: Value stored to 'tmp' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double tmp = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:766:12: note: Value stored to 'tmp' during its initialization is never read
    double tmp = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:803:10: warning: Value stored to 'seps' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double seps = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:803:10: note: Value stored to 'seps' during its initialization is never read
  double seps = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:804:10: warning: Value stored to 'ceps' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double ceps = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:804:10: note: Value stored to 'ceps' during its initialization is never read
  double ceps = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:841:10: warning: Value stored to 'seps' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double seps = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:841:10: note: Value stored to 'seps' during its initialization is never read
  double seps = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:842:10: warning: Value stored to 'ceps' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double ceps = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel.c:842:10: note: Value stored to 'ceps' during its initialization is never read
  double ceps = NAN;
         ^~~~
[461/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_I0.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_I0.c:163:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if(y <= 8.0) {
  ^~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_I0.c:163:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_I0.c:206:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if(y < GSL_LOG_DBL_MAX - 1.0) {
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_I0.c:206:3: note: FIX-IT applied suggested code changes
[462/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_I1.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_I1.c:177:12: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
    double b;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_I1.c:26:1: note: FIX-IT applied suggested code changes
^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_I1.c:177:13: note: FIX-IT applied suggested code changes
    double b;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_I1.c:178:12: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
    double s;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_I1.c:178:13: note: FIX-IT applied suggested code changes
    double s;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_I1.c:190:12: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
    double b;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_I1.c:190:13: note: FIX-IT applied suggested code changes
    double b;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_I1.c:191:12: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
    double s;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_I1.c:191:13: note: FIX-IT applied suggested code changes
    double s;
            ^
[463/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_In.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_In.c:49:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if(x == 0.0) {
  ^~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_In.c:49:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_In.c:61:33: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
    if(x < 0.0 && GSL_IS_ODD(n)) result->val = -result->val;
                                ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_In.c:67:12: warning: variable 'rat' is not initialized [cppcoreguidelines-init-variables]
    double rat;
           ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_In.c:71:12: warning: variable 'Ikm1' is not initialized [cppcoreguidelines-init-variables]
    double Ikm1;
           ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_In.c:72:9: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
    int k;
        ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_In.c:81:33: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
    if(x < 0.0 && GSL_IS_ODD(n)) result->val = -result->val;
                                ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_In.c:86:33: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
    if(x < 0.0 && GSL_IS_ODD(n)) result->val = -result->val;
                                ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_In.c:97:12: warning: variable 'Ikm1' is not initialized [cppcoreguidelines-init-variables]
    double Ikm1;
           ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_In.c:98:9: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
    int k;
        ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_In.c:106:33: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
    if(x < 0.0 && GSL_IS_ODD(n)) result->val = -result->val;
                                ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_In.c:148:12: warning: Value stored to 'Inm1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double Inm1 = NAN;
           ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_In.c:148:12: note: Value stored to 'Inm1' during its initialization is never read
    double Inm1 = NAN;
           ^~~~
[464/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_Inu.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Inu.c:60:12: warning: variable 'K_mu' is not initialized [cppcoreguidelines-init-variables]
    double K_mu;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Inu.c:28:1: note: FIX-IT applied suggested code changes
^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Inu.c:60:16: note: FIX-IT applied suggested code changes
    double K_mu;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Inu.c:61:12: warning: variable 'K_mup1' is not initialized [cppcoreguidelines-init-variables]
    double K_mup1;
           ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Inu.c:61:18: note: FIX-IT applied suggested code changes
    double K_mup1;
                 ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Inu.c:62:12: warning: variable 'Kp_mu' is not initialized [cppcoreguidelines-init-variables]
    double Kp_mu;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Inu.c:62:17: note: FIX-IT applied suggested code changes
    double Kp_mu;
                ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Inu.c:63:12: warning: variable 'K_nu' is not initialized [cppcoreguidelines-init-variables]
    double K_nu;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Inu.c:63:16: note: FIX-IT applied suggested code changes
    double K_nu;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Inu.c:64:12: warning: variable 'K_nup1' is not initialized [cppcoreguidelines-init-variables]
    double K_nup1;
           ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Inu.c:64:18: note: FIX-IT applied suggested code changes
    double K_nup1;
                 ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Inu.c:65:12: warning: variable 'K_num1' is not initialized [cppcoreguidelines-init-variables]
    double K_num1;
           ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Inu.c:65:18: note: FIX-IT applied suggested code changes
    double K_num1;
                 ^
[465/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_J0.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_J0.c:87:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_J0.c:87:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_J0.c:87:8: note: FIX-IT applied suggested code changes
  else {
       ^
[466/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_J1.c.obj
[467/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_Jn.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jn.c:70:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jn.c:70:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jn.c:70:8: note: FIX-IT applied suggested code changes
  else {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jn.c:76:5: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
    else if(x*x < 10.0*(n+1.0)*GSL_ROOT5_DBL_EPSILON) {
    ^~~~
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jn.c:104:14: warning: variable 'ans' is not initialized [cppcoreguidelines-init-variables]
      double ans;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jn.c:105:14: warning: variable 'err' is not initialized [cppcoreguidelines-init-variables]
      double err;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jn.c:106:14: warning: variable 'ratio' is not initialized [cppcoreguidelines-init-variables]
      double ratio;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jn.c:107:14: warning: variable 'sgn' is not initialized [cppcoreguidelines-init-variables]
      double sgn;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jn.c:108:11: warning: variable 'stat_b' is not initialized [cppcoreguidelines-init-variables]
      int stat_b;
          ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jn.c:114:14: warning: variable 'Jkm1' is not initialized [cppcoreguidelines-init-variables]
      double Jkm1;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jn.c:115:11: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
      int k;
          ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jn.c:174:12: warning: Value stored to 'Jnm1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double Jnm1 = NAN;
           ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jn.c:174:12: note: Value stored to 'Jnm1' during its initialization is never read
    double Jnm1 = NAN;
           ^~~~
[468/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_Jnu.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:96:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if(nu > 50.0) {
  ^~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:96:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:114:12: warning: variable 'Jnup1_Jnu' is not initialized [cppcoreguidelines-init-variables]
    double Jnup1_Jnu;
           ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:115:12: warning: variable 'sgn_Jnu' is not initialized [cppcoreguidelines-init-variables]
    double sgn_Jnu;
           ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:122:7: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
      gsl_sf_result Y_mu, Y_mup1;
      ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:128:11: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
      int n;
          ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:139:5: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
    else {
    ^~~~
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:144:14: warning: variable 'Jmu' is not initialized [cppcoreguidelines-init-variables]
      double Jmu;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:145:14: warning: variable 'Jmup1_Jmu' is not initialized [cppcoreguidelines-init-variables]
      double Jmup1_Jmu;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:146:14: warning: variable 'sgn_Jmu' is not initialized [cppcoreguidelines-init-variables]
      double sgn_Jmu;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:147:14: warning: variable 'Jmuprime_Jmu' is not initialized [cppcoreguidelines-init-variables]
      double Jmuprime_Jmu;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:148:7: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
      double P, Q;
      ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:148:14: warning: variable 'P' is not initialized [cppcoreguidelines-init-variables]
      double P, Q;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:148:17: warning: variable 'Q' is not initialized [cppcoreguidelines-init-variables]
      double P, Q;
                ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:150:14: warning: variable 'gamma' is not initialized [cppcoreguidelines-init-variables]
      double gamma;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:154:14: warning: variable 'Jnm1' is not initialized [cppcoreguidelines-init-variables]
      double Jnm1;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Jnu.c:155:11: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
      int n;
          ^
note: this fix will not be applied because it overlaps with another fix
[469/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_K0.c.obj
[470/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_K1.c.obj
[471/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_Kn.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:48:10: warning: Value stored to 'k_term' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double k_term = NAN;
         ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:48:10: note: Value stored to 'k_term' during its initialization is never read
  double k_term = NAN;
         ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:49:10: warning: variable 'term1' is not initialized [cppcoreguidelines-init-variables]
  double term1;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:49:15: note: FIX-IT applied suggested code changes
  double term1;
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:50:10: warning: variable 'sum1' is not initialized [cppcoreguidelines-init-variables]
  double sum1;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:50:14: note: FIX-IT applied suggested code changes
  double sum1;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:51:10: warning: variable 'ln_pre1' is not initialized [cppcoreguidelines-init-variables]
  double ln_pre1;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:51:17: note: FIX-IT applied suggested code changes
  double ln_pre1;
                ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:52:10: warning: variable 'term2' is not initialized [cppcoreguidelines-init-variables]
  double term2;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:52:15: note: FIX-IT applied suggested code changes
  double term2;
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:53:10: warning: variable 'sum2' is not initialized [cppcoreguidelines-init-variables]
  double sum2;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:53:14: note: FIX-IT applied suggested code changes
  double sum2;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:54:10: warning: variable 'pre2' is not initialized [cppcoreguidelines-init-variables]
  double pre2;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:54:14: note: FIX-IT applied suggested code changes
  double pre2;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:78:12: warning: Value stored to 'psi_npkp1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double psi_npkp1 = NAN;
           ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:78:12: note: Value stored to 'psi_npkp1' during its initialization is never read
    double psi_npkp1 = NAN;
           ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:141:12: warning: Value stored to 'b_jp1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double b_jp1 = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:141:12: note: Value stored to 'b_jp1' during its initialization is never read
    double b_jp1 = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:163:15: warning: The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage [clang-analyzer-core.uninitialized.Assign]
  result->val *= ex;
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:248:15: note: Calling 'gsl_sf_bessel_Kn_e'
  EVAL_RESULT(gsl_sf_bessel_Kn_e(n, x, &result));
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc/eval.h:5:17: note: expanded from macro 'EVAL_RESULT'
   int status = fn; \
                ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:161:22: note: Calling 'gsl_sf_bessel_Kn_scaled_e'
  const int status = gsl_sf_bessel_Kn_scaled_e(n, x, result);
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:114:6: note: Assuming the condition is false
  if(x <= 0.0) {
     ^~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:114:3: note: Taking false branch
  if(x <= 0.0) {
  ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:117:11: note: Assuming 'n' is not equal to 0
  else if(n == 0) {
          ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:117:8: note: Taking false branch
  else if(n == 0) {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:120:11: note: Assuming 'n' is not equal to 1
  else if(n == 1) {
          ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:120:8: note: Taking false branch
  else if(n == 1) {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:123:11: note: Assuming the condition is true
  else if(x <= 5.0) {
          ^~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:123:8: note: Taking true branch
  else if(x <= 5.0) {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:124:12: note: Calling 'bessel_Kn_scaled_small_x'
    return bessel_Kn_scaled_small_x(n, x, result);
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:59:6: note: Assuming the condition is true
  if(ln_pre1 > GSL_LOG_DBL_MAX - 3.0) { GSL_ERROR ("error", GSL_EOVRFLW);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:59:3: note: Taking true branch
  if(ln_pre1 > GSL_LOG_DBL_MAX - 3.0) { GSL_ERROR ("error", GSL_EOVRFLW);
  ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:59:41: note: Returning without writing to 'result->val'
  if(ln_pre1 > GSL_LOG_DBL_MAX - 3.0) { GSL_ERROR ("error", GSL_EOVRFLW);
                                        ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:107:8: note: expanded from macro 'GSL_ERROR'
       return gsl_errno ; \
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:124:12: note: Returning from 'bessel_Kn_scaled_small_x'
    return bessel_Kn_scaled_small_x(n, x, result);
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:124:5: note: Returning without writing to 'result->val'
    return bessel_Kn_scaled_small_x(n, x, result);
    ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:161:22: note: Returning from 'gsl_sf_bessel_Kn_scaled_e'
  const int status = gsl_sf_bessel_Kn_scaled_e(n, x, result);
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:163:15: note: The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage
  result->val *= ex;
  ~~~~~~~~~~~ ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:193:12: warning: Value stored to 'Knp1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double Knp1 = NAN;
           ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Kn.c:193:12: note: Value stored to 'Knp1' during its initialization is never read
    double Knp1 = NAN;
           ^~~~
[472/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_Knu.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:63:12: warning: variable 'K_mu' is not initialized [cppcoreguidelines-init-variables]
    double K_mu;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:28:1: note: FIX-IT applied suggested code changes
^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:63:16: note: FIX-IT applied suggested code changes
    double K_mu;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:64:12: warning: variable 'K_mup1' is not initialized [cppcoreguidelines-init-variables]
    double K_mup1;
           ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:64:18: note: FIX-IT applied suggested code changes
    double K_mup1;
                 ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:65:12: warning: variable 'Kp_mu' is not initialized [cppcoreguidelines-init-variables]
    double Kp_mu;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:65:17: note: FIX-IT applied suggested code changes
    double Kp_mu;
                ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:66:12: warning: variable 'K_nu' is not initialized [cppcoreguidelines-init-variables]
    double K_nu;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:66:16: note: FIX-IT applied suggested code changes
    double K_nu;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:67:12: warning: variable 'K_nup1' is not initialized [cppcoreguidelines-init-variables]
    double K_nup1;
           ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:67:18: note: FIX-IT applied suggested code changes
    double K_nup1;
                 ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:68:12: warning: variable 'K_num1' is not initialized [cppcoreguidelines-init-variables]
    double K_num1;
           ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:68:18: note: FIX-IT applied suggested code changes
    double K_num1;
                 ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:69:9: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
    int n;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:69:10: note: FIX-IT applied suggested code changes
    int n;
         ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:92:16: warning: narrowing conversion from 'double' to 'int' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        e10 += p;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:143:12: warning: Value stored to 'ln_bound' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double ln_bound = NAN;
           ^~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Knu.c:143:12: note: Value stored to 'ln_bound' during its initialization is never read
    double ln_bound = NAN;
           ^~~~~~~~
[473/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_Y0.c.obj
[474/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_Y1.c.obj
[475/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_Yn.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:45:10: warning: Value stored to 'k_term' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double k_term = NAN;
         ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:45:10: note: Value stored to 'k_term' during its initialization is never read
  double k_term = NAN;
         ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:46:10: warning: variable 'term1' is not initialized [cppcoreguidelines-init-variables]
  double term1;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:46:15: note: FIX-IT applied suggested code changes
  double term1;
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:47:10: warning: variable 'sum1' is not initialized [cppcoreguidelines-init-variables]
  double sum1;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:47:14: note: FIX-IT applied suggested code changes
  double sum1;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:48:10: warning: variable 'ln_pre1' is not initialized [cppcoreguidelines-init-variables]
  double ln_pre1;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:48:17: note: FIX-IT applied suggested code changes
  double ln_pre1;
                ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:49:10: warning: variable 'term2' is not initialized [cppcoreguidelines-init-variables]
  double term2;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:49:15: note: FIX-IT applied suggested code changes
  double term2;
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:50:10: warning: variable 'sum2' is not initialized [cppcoreguidelines-init-variables]
  double sum2;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:50:14: note: FIX-IT applied suggested code changes
  double sum2;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:51:10: warning: variable 'pre2' is not initialized [cppcoreguidelines-init-variables]
  double pre2;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:51:14: note: FIX-IT applied suggested code changes
  double pre2;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:75:12: warning: Value stored to 'psi_npkp1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double psi_npkp1 = NAN;
           ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:75:12: note: Value stored to 'psi_npkp1' during its initialization is never read
    double psi_npkp1 = NAN;
           ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:130:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:130:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:130:8: note: FIX-IT applied suggested code changes
  else {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:136:19: warning: The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage [clang-analyzer-core.uninitialized.Assign]
      result->val *= sign;
                  ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:223:15: note: Calling 'gsl_sf_bessel_Yn_e'
  EVAL_RESULT(gsl_sf_bessel_Yn_e(n, x, &result));
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc/eval.h:5:17: note: expanded from macro 'EVAL_RESULT'
   int status = fn; \
                ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:111:6: note: Assuming 'n' is >= 0
  if(n < 0) {
     ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:111:3: note: Taking false branch
  if(n < 0) {
  ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:120:6: note: Assuming 'n' is not equal to 0
  if(n == 0) {
     ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:120:3: note: Taking false branch
  if(n == 0) {
  ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:125:6: note: Assuming 'n' is not equal to 1
  if(n == 1) {
     ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:125:3: note: Taking false branch
  if(n == 1) {
  ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:131:8: note: Assuming the condition is false
    if(x <= 0.0) {
       ^~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:131:5: note: Taking false branch
    if(x <= 0.0) {
    ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:134:8: note: Assuming the condition is true
    if(x < 5.0) {
       ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:134:5: note: Taking true branch
    if(x < 5.0) {
    ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:135:20: note: Calling 'bessel_Yn_small_x'
      int status = bessel_Yn_small_x(n, x, result);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:56:6: note: Assuming the condition is true
  if(ln_pre1 > GSL_LOG_DBL_MAX - 3.0) { GSL_ERROR ("error", GSL_EOVRFLW);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:56:3: note: Taking true branch
  if(ln_pre1 > GSL_LOG_DBL_MAX - 3.0) { GSL_ERROR ("error", GSL_EOVRFLW);
  ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:56:41: note: Returning without writing to 'result->val'
  if(ln_pre1 > GSL_LOG_DBL_MAX - 3.0) { GSL_ERROR ("error", GSL_EOVRFLW);
                                        ^
D:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl\gsl/gsl_errno.h:107:8: note: expanded from macro 'GSL_ERROR'
       return gsl_errno ; \
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:135:20: note: Returning from 'bessel_Yn_small_x'
      int status = bessel_Yn_small_x(n, x, result);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:136:19: note: The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage
      result->val *= sign;
      ~~~~~~~~~~~ ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:139:5: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
    else if(GSL_ROOT3_DBL_EPSILON * x > (n*n + 1.0)) {
    ^~~~
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:157:14: warning: variable 'byp' is not initialized [cppcoreguidelines-init-variables]
      double byp;
             ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:158:11: warning: variable 'j' is not initialized [cppcoreguidelines-init-variables]
      int j;
          ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:191:12: warning: Value stored to 'Ynp1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double Ynp1 = NAN;
           ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Yn.c:191:12: note: Value stored to 'Ynp1' during its initialization is never read
    double Ynp1 = NAN;
           ^~~~
[476/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_Ynu.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Ynu.c:80:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
    gsl_sf_result Y_mu, Y_mup1;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Ynu.c:80:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Ynu.c:81:9: warning: variable 'stat_mu' is not initialized [cppcoreguidelines-init-variables]
    int stat_mu;
        ^
                = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Ynu.c:81:16: note: FIX-IT applied suggested code changes
    int stat_mu;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Ynu.c:82:12: warning: variable 'Ynm1' is not initialized [cppcoreguidelines-init-variables]
    double Ynm1;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Ynu.c:27:1: note: FIX-IT applied suggested code changes
^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Ynu.c:82:16: note: FIX-IT applied suggested code changes
    double Ynm1;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Ynu.c:83:12: warning: variable 'Yn' is not initialized [cppcoreguidelines-init-variables]
    double Yn;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Ynu.c:83:14: note: FIX-IT applied suggested code changes
    double Yn;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Ynu.c:84:12: warning: variable 'Ynp1' is not initialized [cppcoreguidelines-init-variables]
    double Ynp1;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Ynu.c:84:16: note: FIX-IT applied suggested code changes
    double Ynp1;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Ynu.c:85:9: warning: variable 'n' is not initialized [cppcoreguidelines-init-variables]
    int n;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Ynu.c:85:10: note: FIX-IT applied suggested code changes
    int n;
         ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Ynu.c:98:7: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
      gsl_sf_result J_mu, J_mup1;
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_Ynu.c:98:7: note: FIX-IT applied suggested code changes
[477/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_amp_phase.c.obj
[478/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_i.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_i.c:133:16: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
    if(x < 0.0) result->val = -result->val;
               ^
                {
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_i.c:133:16: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_i.c:133:44: note: FIX-IT applied suggested code changes
    if(x < 0.0) result->val = -result->val;
                                           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_i.c:232:12: warning: Value stored to 'iellm1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double iellm1 = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_i.c:232:12: note: Value stored to 'iellm1' during its initialization is never read
    double iellm1 = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_i.c:289:9: warning: variable 'ell' is not initialized [cppcoreguidelines-init-variables]
    int ell;
        ^
            = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_i.c:289:12: note: FIX-IT applied suggested code changes
    int ell;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_i.c:296:12: warning: variable 'iellm1' is not initialized [cppcoreguidelines-init-variables]
    double iellm1;
           ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_i.c:296:18: note: FIX-IT applied suggested code changes
    double iellm1;
                 ^
[479/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_j.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_j.c:222:12: warning: Value stored to 'jellm1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double jellm1 = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_j.c:222:12: note: Value stored to 'jellm1' during its initialization is never read
    double jellm1 = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_j.c:277:12: warning: Value stored to 'jellm1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double jellm1 = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_j.c:277:12: note: Value stored to 'jellm1' during its initialization is never read
    double jellm1 = NAN;
           ^~~~~~
[480/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_k.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_k.c:54:12: warning: Value stored to 'ineg_term' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double ineg_term = NAN;
           ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_k.c:54:12: note: Value stored to 'ineg_term' during its initialization is never read
    double ineg_term = NAN;
           ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_k.c:61:12: warning: Value stored to 'delta' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double delta = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_k.c:61:12: note: Value stored to 'delta' during its initialization is never read
    double delta = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_k.c:177:12: warning: Value stored to 'bkp' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double bkp = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_k.c:177:12: note: Value stored to 'bkp' during its initialization is never read
    double bkp = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_k.c:206:12: warning: variable 'kellp1' is not initialized [cppcoreguidelines-init-variables]
    double kellp1;
           ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_k.c:206:18: note: FIX-IT applied suggested code changes
    double kellp1;
                 ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_k.c:207:12: warning: variable 'kell' is not initialized [cppcoreguidelines-init-variables]
    double kell;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_k.c:207:16: note: FIX-IT applied suggested code changes
    double kell;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_k.c:208:12: warning: variable 'kellm1' is not initialized [cppcoreguidelines-init-variables]
    double kellm1;
           ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_k.c:208:18: note: FIX-IT applied suggested code changes
    double kellm1;
                 ^
[481/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_olver.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:151:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:151:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:151:8: note: FIX-IT applied suggested code changes
  else {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:547:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:547:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:547:8: note: FIX-IT applied suggested code changes
  else {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:583:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:583:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:583:8: note: FIX-IT applied suggested code changes
  else {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:620:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:620:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:620:8: note: FIX-IT applied suggested code changes
  else {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:649:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:649:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:649:8: note: FIX-IT applied suggested code changes
  else {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:686:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:686:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:686:8: note: FIX-IT applied suggested code changes
  else {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:733:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:733:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:733:8: note: FIX-IT applied suggested code changes
  else {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:772:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:772:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:772:8: note: FIX-IT applied suggested code changes
  else {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:800:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:800:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:800:8: note: FIX-IT applied suggested code changes
  else {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:851:12: warning: variable 'zeta' is not initialized [cppcoreguidelines-init-variables]
    double zeta;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:851:16: note: FIX-IT applied suggested code changes
    double zeta;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:852:12: warning: variable 'abs_zeta' is not initialized [cppcoreguidelines-init-variables]
    double abs_zeta;
           ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:852:20: note: FIX-IT applied suggested code changes
    double abs_zeta;
                   ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:853:12: warning: Value stored to 'arg' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double arg = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:853:12: note: Value stored to 'arg' during its initialization is never read
    double arg = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:854:12: warning: Value stored to 'pre' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double pre = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:854:12: note: Value stored to 'pre' during its initialization is never read
    double pre = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:855:12: warning: variable 'asum' is not initialized [cppcoreguidelines-init-variables]
    double asum;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:855:16: note: FIX-IT applied suggested code changes
    double asum;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:856:12: warning: variable 'bsum' is not initialized [cppcoreguidelines-init-variables]
    double bsum;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:856:16: note: FIX-IT applied suggested code changes
    double bsum;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:857:12: warning: variable 'asum_err' is not initialized [cppcoreguidelines-init-variables]
    double asum_err;
           ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:857:20: note: FIX-IT applied suggested code changes
    double asum_err;
                   ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:864:9: warning: variable 'stat_a' is not initialized [cppcoreguidelines-init-variables]
    int stat_a;
        ^
               = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:864:15: note: FIX-IT applied suggested code changes
    int stat_a;
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:865:9: warning: variable 'stat_ap' is not initialized [cppcoreguidelines-init-variables]
    int stat_ap;
        ^
                = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:865:16: note: FIX-IT applied suggested code changes
    int stat_ap;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:930:12: warning: variable 'zeta' is not initialized [cppcoreguidelines-init-variables]
    double zeta;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:930:16: note: FIX-IT applied suggested code changes
    double zeta;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:931:12: warning: variable 'abs_zeta' is not initialized [cppcoreguidelines-init-variables]
    double abs_zeta;
           ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:931:20: note: FIX-IT applied suggested code changes
    double abs_zeta;
                   ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:932:12: warning: Value stored to 'arg' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double arg = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:932:12: note: Value stored to 'arg' during its initialization is never read
    double arg = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:933:12: warning: Value stored to 'pre' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double pre = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:933:12: note: Value stored to 'pre' during its initialization is never read
    double pre = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:934:12: warning: variable 'asum' is not initialized [cppcoreguidelines-init-variables]
    double asum;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:934:16: note: FIX-IT applied suggested code changes
    double asum;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:935:12: warning: variable 'bsum' is not initialized [cppcoreguidelines-init-variables]
    double bsum;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:935:16: note: FIX-IT applied suggested code changes
    double bsum;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:936:12: warning: variable 'asum_err' is not initialized [cppcoreguidelines-init-variables]
    double asum_err;
           ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:936:20: note: FIX-IT applied suggested code changes
    double asum_err;
                   ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:943:9: warning: variable 'stat_b' is not initialized [cppcoreguidelines-init-variables]
    int stat_b;
        ^
               = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:943:15: note: FIX-IT applied suggested code changes
    int stat_b;
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:944:9: warning: variable 'stat_d' is not initialized [cppcoreguidelines-init-variables]
    int stat_d;
        ^
               = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_olver.c:944:15: note: FIX-IT applied suggested code changes
    int stat_d;
              ^
[482/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_temme.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:122:10: warning: variable 'sum0' is not initialized [cppcoreguidelines-init-variables]
  double sum0;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:30:1: note: FIX-IT applied suggested code changes
#include "bessel_temme.h"
^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:122:14: note: FIX-IT applied suggested code changes
  double sum0;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:123:10: warning: variable 'sum1' is not initialized [cppcoreguidelines-init-variables]
  double sum1;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:123:14: note: FIX-IT applied suggested code changes
  double sum1;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:124:10: warning: variable 'fk' is not initialized [cppcoreguidelines-init-variables]
  double fk;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:124:12: note: FIX-IT applied suggested code changes
  double fk;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:125:10: warning: variable 'pk' is not initialized [cppcoreguidelines-init-variables]
  double pk;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:125:12: note: FIX-IT applied suggested code changes
  double pk;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:126:10: warning: variable 'qk' is not initialized [cppcoreguidelines-init-variables]
  double qk;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:126:12: note: FIX-IT applied suggested code changes
  double qk;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:127:10: warning: variable 'hk' is not initialized [cppcoreguidelines-init-variables]
  double hk;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:127:12: note: FIX-IT applied suggested code changes
  double hk;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:128:10: warning: variable 'ck' is not initialized [cppcoreguidelines-init-variables]
  double ck;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:128:12: note: FIX-IT applied suggested code changes
  double ck;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:132:10: warning: variable 'g_1pnu' is not initialized [cppcoreguidelines-init-variables]
  double g_1pnu;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:132:16: note: FIX-IT applied suggested code changes
  double g_1pnu;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:133:10: warning: variable 'g_1mnu' is not initialized [cppcoreguidelines-init-variables]
  double g_1mnu;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:133:16: note: FIX-IT applied suggested code changes
  double g_1mnu;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:134:10: warning: variable 'g1' is not initialized [cppcoreguidelines-init-variables]
  double g1;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:134:12: note: FIX-IT applied suggested code changes
  double g1;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:135:10: warning: variable 'g2' is not initialized [cppcoreguidelines-init-variables]
  double g2;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:135:12: note: FIX-IT applied suggested code changes
  double g2;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:141:3: warning: Value stored to 'hk' is never read [clang-analyzer-deadcode.DeadStores]
  hk = pk;
  ^    ~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:141:3: note: Value stored to 'hk' is never read
  hk = pk;
  ^    ~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:148:12: warning: Value stored to 'del0' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double del0 = NAN;
           ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:148:12: note: Value stored to 'del0' during its initialization is never read
    double del0 = NAN;
           ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:149:12: warning: Value stored to 'del1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double del1 = NAN;
           ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:149:12: note: Value stored to 'del1' during its initialization is never read
    double del1 = NAN;
           ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:150:12: warning: Value stored to 'gk' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double gk = NAN;
           ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:150:12: note: Value stored to 'gk' during its initialization is never read
    double gk = NAN;
           ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:191:10: warning: variable 'sum0' is not initialized [cppcoreguidelines-init-variables]
  double sum0;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:191:14: note: FIX-IT applied suggested code changes
  double sum0;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:192:10: warning: variable 'sum1' is not initialized [cppcoreguidelines-init-variables]
  double sum1;
         ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:192:14: note: FIX-IT applied suggested code changes
  double sum1;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:193:10: warning: variable 'fk' is not initialized [cppcoreguidelines-init-variables]
  double fk;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:193:12: note: FIX-IT applied suggested code changes
  double fk;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:194:10: warning: variable 'pk' is not initialized [cppcoreguidelines-init-variables]
  double pk;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:194:12: note: FIX-IT applied suggested code changes
  double pk;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:195:10: warning: variable 'qk' is not initialized [cppcoreguidelines-init-variables]
  double qk;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:195:12: note: FIX-IT applied suggested code changes
  double qk;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:196:10: warning: variable 'hk' is not initialized [cppcoreguidelines-init-variables]
  double hk;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:196:12: note: FIX-IT applied suggested code changes
  double hk;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:197:10: warning: variable 'ck' is not initialized [cppcoreguidelines-init-variables]
  double ck;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:197:12: note: FIX-IT applied suggested code changes
  double ck;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:201:10: warning: variable 'g_1pnu' is not initialized [cppcoreguidelines-init-variables]
  double g_1pnu;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:201:16: note: FIX-IT applied suggested code changes
  double g_1pnu;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:202:10: warning: variable 'g_1mnu' is not initialized [cppcoreguidelines-init-variables]
  double g_1mnu;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:202:16: note: FIX-IT applied suggested code changes
  double g_1mnu;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:203:10: warning: variable 'g1' is not initialized [cppcoreguidelines-init-variables]
  double g1;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:203:12: note: FIX-IT applied suggested code changes
  double g1;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:204:10: warning: variable 'g2' is not initialized [cppcoreguidelines-init-variables]
  double g2;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:204:12: note: FIX-IT applied suggested code changes
  double g2;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:215:12: warning: Value stored to 'del0' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double del0 = NAN;
           ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:215:12: note: Value stored to 'del0' during its initialization is never read
    double del0 = NAN;
           ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:216:12: warning: Value stored to 'del1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double del1 = NAN;
           ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_temme.c:216:12: note: Value stored to 'del1' during its initialization is never read
    double del1 = NAN;
           ^~~~
[483/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_y.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_y.c:58:12: warning: Value stored to 'delta' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double delta = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_y.c:58:12: note: Value stored to 'delta' during its initialization is never read
    double delta = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_y.c:219:12: warning: Value stored to 'byp' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double byp = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_y.c:219:12: note: Value stored to 'byp' during its initialization is never read
    double byp = NAN;
           ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_y.c:250:12: warning: Value stored to 'yellp1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double yellp1 = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_y.c:250:12: note: Value stored to 'yellp1' during its initialization is never read
    double yellp1 = NAN;
           ^~~~~~
[484/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_zero.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_zero.c:931:10: warning: Value stored to 'B_nm1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double B_nm1 = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_zero.c:931:10: note: Value stored to 'B_nm1' during its initialization is never read
  double B_nm1 = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_zero.c:1126:38: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      const double chb = clenshaw(c, L-1, arg);
                                     ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_zero.c:1134:38: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      const double chb = clenshaw(c, L-1, arg);
                                     ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_zero.c:1146:38: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      const double chb = clenshaw(c, L-1, arg);
                                     ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_zero.c:1154:38: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
      const double chb = clenshaw(c, L-1, arg);
                                     ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_zero.c:1172:36: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    const double chb = clenshaw(c, L-1, arg);
                                   ^
[485/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/bessel_sequence.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_sequence.c:79:12: warning: variable 'Jp' is not initialized [cppcoreguidelines-init-variables]
    double Jp;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_sequence.c:26:1: note: FIX-IT applied suggested code changes
^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_sequence.c:79:14: note: FIX-IT applied suggested code changes
    double Jp;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_sequence.c:80:12: warning: variable 'J' is not initialized [cppcoreguidelines-init-variables]
    double J;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_sequence.c:80:13: note: FIX-IT applied suggested code changes
    double J;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_sequence.c:81:12: warning: Value stored to 'x' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double x = NAN;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_sequence.c:81:12: note: Value stored to 'x' during its initialization is never read
    double x = NAN;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_sequence.c:134:14: warning: Value stored to 'xj' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double xj = NAN;
             ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\bessel_sequence.c:134:14: note: Value stored to 'xj' during its initialization is never read
      double xj = NAN;
             ^~
[486/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/beta.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:74:14: warning: Value stored to 'lnpre_val' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double lnpre_val = NAN;
             ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:74:14: note: Value stored to 'lnpre_val' during its initialization is never read
      double lnpre_val = NAN;
             ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:75:14: warning: Value stored to 'lnpre_err' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double lnpre_err = NAN;
             ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:75:14: note: Value stored to 'lnpre_err' during its initialization is never read
      double lnpre_err = NAN;
             ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:76:14: warning: Value stored to 'lnpow_val' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double lnpow_val = NAN;
             ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:76:14: note: Value stored to 'lnpow_val' during its initialization is never read
      double lnpow_val = NAN;
             ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:77:14: warning: Value stored to 'lnpow_err' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double lnpow_err = NAN;
             ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:77:14: note: Value stored to 'lnpow_err' during its initialization is never read
      double lnpow_err = NAN;
             ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:78:14: warning: variable 't1' is not initialized [cppcoreguidelines-init-variables]
      double t1;
             ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:78:16: note: FIX-IT applied suggested code changes
      double t1;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:79:14: warning: variable 't2' is not initialized [cppcoreguidelines-init-variables]
      double t2;
             ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:79:16: note: FIX-IT applied suggested code changes
      double t2;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:80:14: warning: variable 't3' is not initialized [cppcoreguidelines-init-variables]
      double t3;
             ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:80:16: note: FIX-IT applied suggested code changes
      double t3;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:110:12: warning: variable 'sgx' is not initialized [cppcoreguidelines-init-variables]
    double sgx;
           ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:110:15: note: FIX-IT applied suggested code changes
    double sgx;
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:111:12: warning: variable 'sgy' is not initialized [cppcoreguidelines-init-variables]
    double sgy;
           ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:111:15: note: FIX-IT applied suggested code changes
    double sgy;
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:112:12: warning: variable 'sgxy' is not initialized [cppcoreguidelines-init-variables]
    double sgxy;
           ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:112:16: note: FIX-IT applied suggested code changes
    double sgxy;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:153:12: warning: variable 'sgn' is not initialized [cppcoreguidelines-init-variables]
    double sgn;
           ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:153:15: note: FIX-IT applied suggested code changes
    double sgn;
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:160:5: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
    else {
    ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:160:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\beta.c:160:10: note: FIX-IT applied suggested code changes
    else {
         ^
[487/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/beta_inc.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\beta_inc.c:53:10: warning: Value stored to 'cf' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double cf = NAN;
         ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\beta_inc.c:53:10: note: Value stored to 'cf' during its initialization is never read
  double cf = NAN;
         ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\beta_inc.c:64:20: warning: narrowing conversion from 'unsigned int' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    const int k  = iter_count + 1;
                   ^
D:\a\aprg\aprg\gsl\gsl\specfunc\beta_inc.c:66:12: warning: Value stored to 'delta_frac' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double delta_frac = NAN;
           ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\beta_inc.c:66:12: note: Value stored to 'delta_frac' during its initialization is never read
    double delta_frac = NAN;
           ^~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\beta_inc.c:190:11: warning: variable 'stat' is not initialized [cppcoreguidelines-init-variables]
      int stat;
          ^
               = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\beta_inc.c:190:15: note: FIX-IT applied suggested code changes
      int stat;
              ^
[488/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/clausen.c.obj
[489/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/coulomb.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:60:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:60:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:60:8: note: FIX-IT applied suggested code changes
  else {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:84:10: warning: variable 'arg_val' is not initialized [cppcoreguidelines-init-variables]
  double arg_val;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:42:1: note: FIX-IT applied suggested code changes
^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:84:17: note: FIX-IT applied suggested code changes
  double arg_val;
                ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:85:10: warning: variable 'arg_err' is not initialized [cppcoreguidelines-init-variables]
  double arg_err;
         ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:85:17: note: FIX-IT applied suggested code changes
  double arg_err;
                ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:96:18: warning: Value stored to 'sgn' is never read [clang-analyzer-deadcode.DeadStores]
  if(L < -1.0) { sgn = -sgn;
                 ^     ~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:96:18: note: Value stored to 'sgn' is never read
  if(L < -1.0) { sgn = -sgn;
                 ^     ~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:294:10: warning: Value stored to 'uA_m' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double uA_m = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:294:10: note: Value stored to 'uA_m' during its initialization is never read
  double uA_m = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:297:10: warning: Value stored to 'uB_m' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double uB_m = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:297:10: note: Value stored to 'uB_m' during its initialization is never read
  double uB_m = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:315:12: warning: Value stored to 'abs_dA' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double abs_dA = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:315:12: note: Value stored to 'abs_dA' during its initialization is never read
    double abs_dA = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:316:12: warning: Value stored to 'abs_dB' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double abs_dB = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:316:12: note: Value stored to 'abs_dB' during its initialization is never read
    double abs_dB = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:385:10: warning: Value stored to 'u_m' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double u_m = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:385:10: note: Value stored to 'u_m' during its initialization is never read
  double u_m = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:388:10: warning: Value stored to 'v_m' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double v_m = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:388:10: note: Value stored to 'v_m' during its initialization is never read
  double v_m = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:399:12: warning: Value stored to 'abs_du' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double abs_du = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:399:12: note: Value stored to 'abs_du' during its initialization is never read
    double abs_du = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:400:12: warning: Value stored to 'abs_dv' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double abs_dv = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:400:12: note: Value stored to 'abs_dv' during its initialization is never read
    double abs_dv = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:469:10: warning: Value stored to 'u_m' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double u_m = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:469:10: note: Value stored to 'u_m' during its initialization is never read
  double u_m = NAN;
         ^~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:470:10: warning: variable 'v_mm2' is not initialized [cppcoreguidelines-init-variables]
  double v_mm2;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:470:15: note: FIX-IT applied suggested code changes
  double v_mm2;
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:471:10: warning: variable 'v_mm1' is not initialized [cppcoreguidelines-init-variables]
  double v_mm1;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:471:15: note: FIX-IT applied suggested code changes
  double v_mm1;
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:472:10: warning: variable 'v_m' is not initialized [cppcoreguidelines-init-variables]
  double v_m;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:472:13: note: FIX-IT applied suggested code changes
  double v_m;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:473:10: warning: variable 'f_sum' is not initialized [cppcoreguidelines-init-variables]
  double f_sum;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:473:15: note: FIX-IT applied suggested code changes
  double f_sum;
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:474:10: warning: variable 'g_sum' is not initialized [cppcoreguidelines-init-variables]
  double g_sum;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:474:15: note: FIX-IT applied suggested code changes
  double g_sum;
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:475:10: warning: Value stored to 'tmp1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double tmp1 = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:475:10: note: Value stored to 'tmp1' during its initialization is never read
  double tmp1 = NAN;
         ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:549:12: warning: Value stored to 'fc_lm1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double fc_lm1 = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:549:12: note: Value stored to 'fc_lm1' during its initialization is never read
    double fc_lm1 = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:622:10: warning: variable 'D' is not initialized [cppcoreguidelines-init-variables]
  double D;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:622:11: note: FIX-IT applied suggested code changes
  double D;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:623:10: warning: variable 'C' is not initialized [cppcoreguidelines-init-variables]
  double C;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:623:11: note: FIX-IT applied suggested code changes
  double C;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:624:10: warning: Value stored to 'df' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double df = NAN;
         ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:624:10: note: Value stored to 'df' during its initialization is never read
  double df = NAN;
         ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:776:10: warning: variable 'A' is not initialized [cppcoreguidelines-init-variables]
  double A;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:776:11: note: FIX-IT applied suggested code changes
  double A;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:777:10: warning: variable 'B' is not initialized [cppcoreguidelines-init-variables]
  double B;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:777:11: note: FIX-IT applied suggested code changes
  double B;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:778:10: warning: variable 'C' is not initialized [cppcoreguidelines-init-variables]
  double C;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:778:11: note: FIX-IT applied suggested code changes
  double C;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:779:10: warning: variable 'D' is not initialized [cppcoreguidelines-init-variables]
  double D;
         ^
           = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:779:11: note: FIX-IT applied suggested code changes
  double D;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:858:10: warning: Value stored to 'F_exp' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double F_exp = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:858:10: note: Value stored to 'F_exp' during its initialization is never read
  double F_exp = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:859:10: warning: Value stored to 'G_exp' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double G_exp = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:859:10: note: Value stored to 'G_exp' during its initialization is never read
  double G_exp = NAN;
         ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:963:12: warning: variable 'F_lam_F' is not initialized [cppcoreguidelines-init-variables]
    double F_lam_F;
           ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:963:19: note: FIX-IT applied suggested code changes
    double F_lam_F;
                  ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:964:12: warning: variable 'Fp_lam_F' is not initialized [cppcoreguidelines-init-variables]
    double Fp_lam_F;
           ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:964:20: note: FIX-IT applied suggested code changes
    double Fp_lam_F;
                   ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:967:12: warning: variable 'F_lam_F_err' is not initialized [cppcoreguidelines-init-variables]
    double F_lam_F_err;
           ^
                       = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:967:23: note: FIX-IT applied suggested code changes
    double F_lam_F_err;
                      ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:968:12: warning: variable 'Fp_lam_F_err' is not initialized [cppcoreguidelines-init-variables]
    double Fp_lam_F_err;
           ^
                        = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:968:24: note: FIX-IT applied suggested code changes
    double Fp_lam_F_err;
                       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:971:12: warning: variable 'F_lam_min_unnorm' is not initialized [cppcoreguidelines-init-variables]
    double F_lam_min_unnorm;
           ^
                            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:971:28: note: FIX-IT applied suggested code changes
    double F_lam_min_unnorm;
                           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:972:12: warning: variable 'Fp_lam_min_unnorm' is not initialized [cppcoreguidelines-init-variables]
    double Fp_lam_min_unnorm;
           ^
                             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:972:29: note: FIX-IT applied suggested code changes
    double Fp_lam_min_unnorm;
                            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:973:12: warning: Value stored to 'Fp_over_F_lam_min' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double Fp_over_F_lam_min = NAN;
           ^~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:973:12: note: Value stored to 'Fp_over_F_lam_min' during its initialization is never read
    double Fp_over_F_lam_min = NAN;
           ^~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:977:12: warning: Value stored to 'F_scale' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double F_scale = NAN;
           ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:977:12: note: Value stored to 'F_scale' during its initialization is never read
    double F_scale = NAN;
           ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:978:12: warning: Value stored to 'Gerr_frac' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double Gerr_frac = NAN;
           ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:978:12: note: Value stored to 'Gerr_frac' during its initialization is never read
    double Gerr_frac = NAN;
           ^~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:979:12: warning: Value stored to 'F_scale_frac_err' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double F_scale_frac_err = NAN;
           ^~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:979:12: note: Value stored to 'F_scale_frac_err' during its initialization is never read
    double F_scale_frac_err = NAN;
           ^~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:980:12: warning: Value stored to 'F_unnorm_frac_err' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double F_unnorm_frac_err = NAN;
           ^~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:980:12: note: Value stored to 'F_unnorm_frac_err' during its initialization is never read
    double F_unnorm_frac_err = NAN;
           ^~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1083:12: warning: variable 'exp_lam_F' is not initialized [cppcoreguidelines-init-variables]
    double exp_lam_F;
           ^
                     = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1083:21: note: FIX-IT applied suggested code changes
    double exp_lam_F;
                    ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1084:12: warning: variable 'exp_lam_G' is not initialized [cppcoreguidelines-init-variables]
    double exp_lam_G;
           ^
                     = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1084:21: note: FIX-IT applied suggested code changes
    double exp_lam_G;
                    ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1108:7: warning: Value stored to 'stat_CF1_lam_G' is never read [clang-analyzer-deadcode.DeadStores]
      stat_CF1_lam_G  = stat_CF1_lam_F;
      ^                 ~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1108:7: note: Value stored to 'stat_CF1_lam_G' is never read
      stat_CF1_lam_G  = stat_CF1_lam_F;
      ^                 ~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1113:7: warning: Value stored to 'stat_CF1_lam_G' is never read [clang-analyzer-deadcode.DeadStores]
      stat_CF1_lam_G = coulomb_CF1(lam_G, eta, x, &F_sign_lam_G, &Fp_over_F_lam_G, &CF1_count);
      ^                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1113:7: note: Value stored to 'stat_CF1_lam_G' is never read
      stat_CF1_lam_G = coulomb_CF1(lam_G, eta, x, &F_sign_lam_G, &Fp_over_F_lam_G, &CF1_count);
      ^                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1155:12: warning: variable 'F_lam_F' is not initialized [cppcoreguidelines-init-variables]
    double F_lam_F;
           ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1155:19: note: FIX-IT applied suggested code changes
    double F_lam_F;
                  ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1156:12: warning: variable 'Fp_lam_F' is not initialized [cppcoreguidelines-init-variables]
    double Fp_lam_F;
           ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1156:20: note: FIX-IT applied suggested code changes
    double Fp_lam_F;
                   ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1157:12: warning: variable 'G_lam_G' is not initialized [cppcoreguidelines-init-variables]
    double G_lam_G;
           ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1157:19: note: FIX-IT applied suggested code changes
    double G_lam_G;
                  ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1158:12: warning: variable 'Gp_lam_G' is not initialized [cppcoreguidelines-init-variables]
    double Gp_lam_G;
           ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1158:20: note: FIX-IT applied suggested code changes
    double Gp_lam_G;
                   ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1159:12: warning: variable 'F_lam_min_unnorm' is not initialized [cppcoreguidelines-init-variables]
    double F_lam_min_unnorm;
           ^
                            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1159:28: note: FIX-IT applied suggested code changes
    double F_lam_min_unnorm;
                           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1160:12: warning: variable 'Fp_lam_min_unnorm' is not initialized [cppcoreguidelines-init-variables]
    double Fp_lam_min_unnorm;
           ^
                             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1160:29: note: FIX-IT applied suggested code changes
    double Fp_lam_min_unnorm;
                            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1161:12: warning: variable 'F_lam_min' is not initialized [cppcoreguidelines-init-variables]
    double F_lam_min;
           ^
                     = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1161:21: note: FIX-IT applied suggested code changes
    double F_lam_min;
                    ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1162:12: warning: variable 'Fp_lam_min' is not initialized [cppcoreguidelines-init-variables]
    double Fp_lam_min;
           ^
                      = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1162:22: note: FIX-IT applied suggested code changes
    double Fp_lam_min;
                     ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1163:12: warning: variable 'G_lam_min' is not initialized [cppcoreguidelines-init-variables]
    double G_lam_min;
           ^
                     = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1163:21: note: FIX-IT applied suggested code changes
    double G_lam_min;
                    ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1164:12: warning: variable 'Gp_lam_min' is not initialized [cppcoreguidelines-init-variables]
    double Gp_lam_min;
           ^
                      = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1164:22: note: FIX-IT applied suggested code changes
    double Gp_lam_min;
                     ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1166:12: warning: Value stored to 'Fp_over_F_lam_min' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double Fp_over_F_lam_min = NAN;
           ^~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1166:12: note: Value stored to 'Fp_over_F_lam_min' during its initialization is never read
    double Fp_over_F_lam_min = NAN;
           ^~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1167:12: warning: variable 'F_sign_lam_F' is not initialized [cppcoreguidelines-init-variables]
    double F_sign_lam_F;
           ^
                        = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1167:24: note: FIX-IT applied suggested code changes
    double F_sign_lam_F;
                       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1168:12: warning: variable 'F_sign_lam_min' is not initialized [cppcoreguidelines-init-variables]
    double F_sign_lam_min;
           ^
                          = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1168:26: note: FIX-IT applied suggested code changes
    double F_sign_lam_min;
                         ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1169:12: warning: variable 'P_lam_min' is not initialized [cppcoreguidelines-init-variables]
    double P_lam_min;
           ^
                     = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1169:21: note: FIX-IT applied suggested code changes
    double P_lam_min;
                    ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1170:12: warning: variable 'Q_lam_min' is not initialized [cppcoreguidelines-init-variables]
    double Q_lam_min;
           ^
                     = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1170:21: note: FIX-IT applied suggested code changes
    double Q_lam_min;
                    ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1171:12: warning: Value stored to 'alpha' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double alpha = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1171:12: note: Value stored to 'alpha' during its initialization is never read
    double alpha = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1172:12: warning: Value stored to 'gamma' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double gamma = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1172:12: note: Value stored to 'gamma' during its initialization is never read
    double gamma = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1173:12: warning: Value stored to 'F_scale' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double F_scale = NAN;
           ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1173:12: note: Value stored to 'F_scale' during its initialization is never read
    double F_scale = NAN;
           ^~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1185:12: warning: Value stored to 'err_amplify' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double err_amplify = NAN;
           ^~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1185:12: note: Value stored to 'err_amplify' during its initialization is never read
    double err_amplify = NAN;
           ^~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1206:5: warning: Value stored to 'Fp_lam_min' is never read [clang-analyzer-deadcode.DeadStores]
    Fp_lam_min = Fp_over_F_lam_min * F_lam_min;
    ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1206:5: note: Value stored to 'Fp_lam_min' is never read
    Fp_lam_min = Fp_over_F_lam_min * F_lam_min;
    ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1266:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
    gsl_sf_result F, Fp;
    ^~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1266:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1267:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
    gsl_sf_result G, Gp;
    ^~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1267:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1268:12: warning: variable 'G_exp' is not initialized [cppcoreguidelines-init-variables]
    double G_exp;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1268:17: note: FIX-IT applied suggested code changes
    double G_exp;
                ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1276:9: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
    int k;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1276:10: note: FIX-IT applied suggested code changes
    int k;
         ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1317:10: warning: variable 'gcl' is not initialized [cppcoreguidelines-init-variables]
  double gcl;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1317:13: note: FIX-IT applied suggested code changes
  double gcl;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1318:10: warning: variable 'gpl' is not initialized [cppcoreguidelines-init-variables]
  double gpl;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1318:13: note: FIX-IT applied suggested code changes
  double gpl;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1326:12: warning: Value stored to 'fc_lm1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double fc_lm1 = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1326:12: note: Value stored to 'fc_lm1' during its initialization is never read
    double fc_lm1 = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1378:10: warning: variable 'gcl' is not initialized [cppcoreguidelines-init-variables]
  double gcl;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1378:13: note: FIX-IT applied suggested code changes
  double gcl;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1379:10: warning: variable 'gpl' is not initialized [cppcoreguidelines-init-variables]
  double gpl;
         ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1379:13: note: FIX-IT applied suggested code changes
  double gpl;
            ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1388:12: warning: Value stored to 'fc_lm1' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double fc_lm1 = NAN;
           ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coulomb.c:1388:12: note: Value stored to 'fc_lm1' during its initialization is never read
    double fc_lm1 = NAN;
           ^~~~~~
[490/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/coupling.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:153:9: warning: variable 'k' is not initialized [cppcoreguidelines-init-variables]
    int k;
        ^
          = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:153:10: note: FIX-IT applied suggested code changes
    int k;
         ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:257:12: warning: Value stored to 'norm' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double norm = NAN;
           ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:257:12: note: Value stored to 'norm' during its initialization is never read
    double norm = NAN;
           ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:258:9: warning: variable 'tk' is not initialized [cppcoreguidelines-init-variables]
    int tk;
        ^
           = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:258:11: note: FIX-IT applied suggested code changes
    int tk;
          ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:259:9: warning: variable 'tkmin' is not initialized [cppcoreguidelines-init-variables]
    int tkmin;
        ^
              = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:259:14: note: FIX-IT applied suggested code changes
    int tkmin;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:260:9: warning: variable 'tkmax' is not initialized [cppcoreguidelines-init-variables]
    int tkmax;
        ^
              = 0
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:260:14: note: FIX-IT applied suggested code changes
    int tkmax;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:261:12: warning: Value stored to 'phase' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double phase = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:261:12: note: Value stored to 'phase' during its initialization is never read
    double phase = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:290:14: warning: Value stored to 'term' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double term = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:290:14: note: Value stored to 'term' during its initialization is never read
      double term = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:291:14: warning: Value stored to 'term_err' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double term_err = NAN;
             ^~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:291:14: note: Value stored to 'term_err' during its initialization is never read
      double term_err = NAN;
             ^~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:394:12: warning: Value stored to 'phase' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double phase = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:394:12: note: Value stored to 'phase' during its initialization is never read
    double phase = NAN;
           ^~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:399:14: warning: Value stored to 'term' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double term = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:399:14: note: Value stored to 'term' during its initialization is never read
      double term = NAN;
             ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:400:14: warning: Value stored to 'term_err' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
      double term_err = NAN;
             ^~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\coupling.c:400:14: note: Value stored to 'term_err' during its initialization is never read
      double term_err = NAN;
             ^~~~~~~~
[491/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/coulomb_bound.c.obj
[492/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/dawson.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\dawson.c:247:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if(y < 4.0) {
  ^~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\dawson.c:247:3: note: FIX-IT applied suggested code changes
[493/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/debye.c.obj
[494/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/dilog.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:83:12: warning: Value stored to 'ds' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double ds = NAN;
           ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:83:12: note: Value stored to 'ds' during its initialization is never read
    double ds = NAN;
           ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:90:12: warning: Value stored to 'ds' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double ds = NAN;
           ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:90:12: note: Value stored to 'ds' during its initialization is never read
    double ds = NAN;
           ^~
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:115:10: warning: Value stored to 't' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
  double t = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:115:10: note: Value stored to 't' during its initialization is never read
  double t = NAN;
         ^
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:169:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if(x > 1.0) {
  ^~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:169:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:250:12: warning: variable 'dr' is not initialized [cppcoreguidelines-init-variables]
    double dr;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:250:14: note: FIX-IT applied suggested code changes
    double dr;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:251:12: warning: variable 'di' is not initialized [cppcoreguidelines-init-variables]
    double di;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:251:14: note: FIX-IT applied suggested code changes
    double di;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:303:12: warning: variable 'dr' is not initialized [cppcoreguidelines-init-variables]
    double dr;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:303:14: note: FIX-IT applied suggested code changes
    double dr;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:304:12: warning: variable 'di' is not initialized [cppcoreguidelines-init-variables]
    double di;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:304:14: note: FIX-IT applied suggested code changes
    double di;
             ^
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:413:10: warning: variable 'an' is not initialized [cppcoreguidelines-init-variables]
  double an;
         ^
            = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:413:12: note: FIX-IT applied suggested code changes
  double an;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:414:10: warning: variable 'nfact' is not initialized [cppcoreguidelines-init-variables]
  double nfact;
         ^
               = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:414:15: note: FIX-IT applied suggested code changes
  double nfact;
              ^
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:415:10: warning: variable 'sum_re' is not initialized [cppcoreguidelines-init-variables]
  double sum_re;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:415:16: note: FIX-IT applied suggested code changes
  double sum_re;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:416:10: warning: variable 'sum_im' is not initialized [cppcoreguidelines-init-variables]
  double sum_im;
         ^
                = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:416:16: note: FIX-IT applied suggested code changes
  double sum_im;
               ^
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:447:12: warning: Value stored to 't' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    double t = NAN;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:447:12: note: Value stored to 't' during its initialization is never read
    double t = NAN;
           ^
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:482:17: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  } if(r > 0.25)
                ^
                 {
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:482:17: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:484:3: note: FIX-IT applied suggested code changes
  else
  ^
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:484:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else
  ^~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:484:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:484:7: warning: statement should be inside braces [google-readability-braces-around-statements,hicpp-braces-around-statements,readability-braces-around-statements]
  else
      ^
note: this fix will not be applied because it overlaps with another fix
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:551:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
    gsl_sf_result d1, d2;
    ^~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:551:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:598:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else if(r2 < 1.0)
  ^~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:598:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\dilog.c:609:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
    gsl_sf_result result_re_tmp, result_im_tmp;
    ^
note: this fix will not be applied because it overlaps with another fix
[495/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/elementary.c.obj
D:\a\aprg\aprg\gsl\gsl\specfunc\elementary.c:50:3: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
  else {
  ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\elementary.c:50:3: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\gsl\gsl\specfunc\elementary.c:50:8: note: FIX-IT applied suggested code changes
  else {
       ^
D:\a\aprg\aprg\gsl\gsl\specfunc\elementary.c:60:5: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
    else {
    ^~~~
note: this fix will not be applied because it overlaps with another fix
[496/1003] Building C object gsl/CMakeFiles/gsl.dir/specfunc/ellint.c.obj
FAILED: gsl/CMakeFiles/gsl.dir/specfunc/ellint.c.obj 
"C:\Program Files\CMake\bin\cmake.exe" -E __run_co_compile --tidy="C:/Program Files/LLVM/bin/clang-tidy.exe;--fix;--header-filter=D:\/a\/aprg\/aprg\/gsl\/GslTest.*;--config-file=D:/a/aprg/aprg/Clang/ClangTidyFiles/autofix.clang-tidy;--extra-arg-before=--driver-mode=gcc" --source=D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c -- C:\PROGRA~1\LLVM\bin\clang.exe -DAPRG_CODE_REVISION=\"ab734f812219bc4d90aa7ff6e1cba287281b9afb\" -DAPRG_DEBUG -DAPRG_DIR=\"D:/a/aprg/aprg\" -DAPRG_TEST_MODE_ON -DDLL_EXPORT -DHAVE_CONFIG_H -DOS_WINDOWS -ID:/a/aprg/aprg/gsl/gsl/. -ID:/a/aprg/aprg/gsl/StaticAnalyzersBuild/gsl -ID:/a/aprg/aprg/gsl/gsl -fcolor-diagnostics -std=c2x -O0 -g -Xclang -gcodeview -D_DEBUG -D_DLL -D_MT -Xclang --dependent-lib=msvcrtd -MD -MT gsl/CMakeFiles/gsl.dir/specfunc/ellint.c.obj -MF gsl\CMakeFiles\gsl.dir\specfunc\ellint.c.obj.d -o gsl/CMakeFiles/gsl.dir/specfunc/ellint.c.obj -c D:/a/aprg/aprg/gsl/gsl/specfunc/ellint.c
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:91:12: warning: variable 'mu' is not initialized [cppcoreguidelines-init-variables]
    double mu;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:92:12: warning: variable 'sn' is not initialized [cppcoreguidelines-init-variables]
    double sn;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:93:12: warning: variable 'lamda' is not initialized [cppcoreguidelines-init-variables]
    double lamda;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:94:12: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
    double s;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:143:12: warning: variable 'ea' is not initialized [cppcoreguidelines-init-variables]
    double ea;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:144:12: warning: variable 'eb' is not initialized [cppcoreguidelines-init-variables]
    double eb;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:145:12: warning: variable 'ec' is not initialized [cppcoreguidelines-init-variables]
    double ec;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:146:12: warning: variable 'ed' is not initialized [cppcoreguidelines-init-variables]
    double ed;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:147:12: warning: variable 'ef' is not initialized [cppcoreguidelines-init-variables]
    double ef;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:148:12: warning: variable 's1' is not initialized [cppcoreguidelines-init-variables]
    double s1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:149:12: warning: variable 's2' is not initialized [cppcoreguidelines-init-variables]
    double s2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:150:12: warning: variable 'mu' is not initialized [cppcoreguidelines-init-variables]
    double mu;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:151:12: warning: variable 'xndev' is not initialized [cppcoreguidelines-init-variables]
    double xndev;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:152:12: warning: variable 'yndev' is not initialized [cppcoreguidelines-init-variables]
    double yndev;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:153:12: warning: variable 'zndev' is not initialized [cppcoreguidelines-init-variables]
    double zndev;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:156:14: warning: variable 'xnroot' is not initialized [cppcoreguidelines-init-variables]
      double xnroot;
             ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:157:14: warning: variable 'ynroot' is not initialized [cppcoreguidelines-init-variables]
      double ynroot;
             ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:158:14: warning: variable 'znroot' is not initialized [cppcoreguidelines-init-variables]
      double znroot;
             ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:159:14: warning: variable 'lamda' is not initialized [cppcoreguidelines-init-variables]
      double lamda;
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:222:12: warning: variable 'mu' is not initialized [cppcoreguidelines-init-variables]
    double mu;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:223:12: warning: variable 'xndev' is not initialized [cppcoreguidelines-init-variables]
    double xndev;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:224:12: warning: variable 'yndev' is not initialized [cppcoreguidelines-init-variables]
    double yndev;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:225:12: warning: variable 'zndev' is not initialized [cppcoreguidelines-init-variables]
    double zndev;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:226:12: warning: variable 'e2' is not initialized [cppcoreguidelines-init-variables]
    double e2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:227:12: warning: variable 'e3' is not initialized [cppcoreguidelines-init-variables]
    double e3;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:228:12: warning: variable 's' is not initialized [cppcoreguidelines-init-variables]
    double s;
           ^
             = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:231:14: warning: variable 'epslon' is not initialized [cppcoreguidelines-init-variables]
      double epslon;
             ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:232:14: warning: variable 'lamda' is not initialized [cppcoreguidelines-init-variables]
      double lamda;
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:233:14: warning: variable 'xnroot' is not initialized [cppcoreguidelines-init-variables]
      double xnroot;
             ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:234:14: warning: variable 'ynroot' is not initialized [cppcoreguidelines-init-variables]
      double ynroot;
             ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:235:14: warning: variable 'znroot' is not initialized [cppcoreguidelines-init-variables]
      double znroot;
             ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:295:12: warning: variable 'mu' is not initialized [cppcoreguidelines-init-variables]
    double mu;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:296:12: warning: variable 'xndev' is not initialized [cppcoreguidelines-init-variables]
    double xndev;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:297:12: warning: variable 'yndev' is not initialized [cppcoreguidelines-init-variables]
    double yndev;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:298:12: warning: variable 'zndev' is not initialized [cppcoreguidelines-init-variables]
    double zndev;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:299:12: warning: variable 'pndev' is not initialized [cppcoreguidelines-init-variables]
    double pndev;
           ^
                 = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:300:12: warning: variable 'ea' is not initialized [cppcoreguidelines-init-variables]
    double ea;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:301:12: warning: variable 'eb' is not initialized [cppcoreguidelines-init-variables]
    double eb;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:302:12: warning: variable 'ec' is not initialized [cppcoreguidelines-init-variables]
    double ec;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:303:12: warning: variable 'e2' is not initialized [cppcoreguidelines-init-variables]
    double e2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:304:12: warning: variable 'e3' is not initialized [cppcoreguidelines-init-variables]
    double e3;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:305:12: warning: variable 's1' is not initialized [cppcoreguidelines-init-variables]
    double s1;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:306:12: warning: variable 's2' is not initialized [cppcoreguidelines-init-variables]
    double s2;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:307:12: warning: variable 's3' is not initialized [cppcoreguidelines-init-variables]
    double s3;
           ^
              = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:310:14: warning: variable 'xnroot' is not initialized [cppcoreguidelines-init-variables]
      double xnroot;
             ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:311:14: warning: variable 'ynroot' is not initialized [cppcoreguidelines-init-variables]
      double ynroot;
             ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:312:14: warning: variable 'znroot' is not initialized [cppcoreguidelines-init-variables]
      double znroot;
             ^
                    = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:313:14: warning: variable 'lamda' is not initialized [cppcoreguidelines-init-variables]
      double lamda;
             ^
                   = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:314:14: warning: variable 'alfa' is not initialized [cppcoreguidelines-init-variables]
      double alfa;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:315:14: warning: variable 'beta' is not initialized [cppcoreguidelines-init-variables]
      double beta;
             ^
                  = NAN
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:429:7: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
      gsl_sf_result rf, rd;
      ^~~~~~~~~~~~~~~~~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:440:9: warning: do not use 'else' after 'return' [llvm-else-after-return,readability-else-after-return]
      } else {
        ^~~~~~
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:518:21: error: redefinition of 'rd' [clang-diagnostic-error]
      gsl_sf_result rd;  /* add extra terms from periodicity */
                    ^
D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c:511:19: note: previous definition is here
    gsl_sf_result rd;
                  ^
238 warnings and 1 error generated.
Error while processing D:\a\aprg\aprg\gsl\gsl\specfunc\ellint.c.
Suppressed 185 warnings (185 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
Found compiler errors, but -fix-errors was not specified.
Fixes have NOT been applied.

Found compiler error(s).
ninja: build stopped: subcommand failed.
DONE!
