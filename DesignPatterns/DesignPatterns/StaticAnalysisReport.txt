StaticAnalysisJobIdentifier: [43]
2023-09-23T15:07:59
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/AbstractFactory/AbstractFactory_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/AbstractFactory/AbstractFactory_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/AbstractFactory/AbstractFactory_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Adapter/ClassAdapter_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Adapter/ClassAdapter_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Adapter/ClassAdapter_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Adapter/ClassAdapter_unit.cpp:10:29: warning: variable name 't' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Adapter/ObjectAdapter_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Adapter/ObjectAdapter_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Adapter/ObjectAdapter_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Adapter/ObjectAdapter_unit.cpp:10:29: warning: variable name 't' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Bridge/Bridge_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Bridge/Bridge_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Bridge/Bridge_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Builder/Builder_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Builder/Builder_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Builder/Builder_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/ChainOfResponsibility/ChainOfResponsibility.hpp:13:5: warning: explicitly defaulted copy constructor is implicitly deleted [clang-diagnostic-defaulted-function-deleted]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/ChainOfResponsibility/ChainOfResponsibility.hpp:30:30: note: copy constructor of 'Handler' is implicitly deleted because field 'm_successorPointer' has a deleted copy constructor
/usr/lib/gcc/x86_64-linux-gnu/12/../../../../include/c++/12/bits/unique_ptr.h:514:7: note: 'unique_ptr' has been explicitly marked deleted here
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/ChainOfResponsibility/ChainOfResponsibility.hpp:15:14: warning: explicitly defaulted copy assignment operator is implicitly deleted [clang-diagnostic-defaulted-function-deleted]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/ChainOfResponsibility/ChainOfResponsibility.hpp:30:30: note: copy assignment operator of 'Handler' is implicitly deleted because field 'm_successorPointer' has a deleted copy assignment operator
/usr/lib/gcc/x86_64-linux-gnu/12/../../../../include/c++/12/bits/unique_ptr.h:515:19: note: 'operator=' has been explicitly marked deleted here
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/ChainOfResponsibility/ChainOfResponsibility_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/ChainOfResponsibility/ChainOfResponsibility_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/ChainOfResponsibility/ChainOfResponsibility_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/ChainOfResponsibility/ChainOfResponsibility.hpp:13:5: warning: explicitly defaulted copy constructor is implicitly deleted [-Wdefaulted-function-deleted]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/ChainOfResponsibility/ChainOfResponsibility.hpp:30:30: note: copy constructor of 'Handler' is implicitly deleted because field 'm_successorPointer' has a deleted copy constructor
/usr/lib/gcc/x86_64-linux-gnu/12/../../../../include/c++/12/bits/unique_ptr.h:514:7: note: 'unique_ptr' has been explicitly marked deleted here
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/ChainOfResponsibility/ChainOfResponsibility.hpp:15:14: warning: explicitly defaulted copy assignment operator is implicitly deleted [-Wdefaulted-function-deleted]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/ChainOfResponsibility/ChainOfResponsibility.hpp:30:30: note: copy assignment operator of 'Handler' is implicitly deleted because field 'm_successorPointer' has a deleted copy assignment operator
/usr/lib/gcc/x86_64-linux-gnu/12/../../../../include/c++/12/bits/unique_ptr.h:515:19: note: 'operator=' has been explicitly marked deleted here
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Command/Command_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Command/Command_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Command/Command_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Composite/Composite.hpp:62:29: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Composite/Composite_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Composite/Composite_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Composite/Composite_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Composite/Composite_unit.cpp:10:9: warning: variable name 'id' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Decorator/Decorator_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Decorator/Decorator_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Decorator/Decorator_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Facade/Facade_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Facade/Facade_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Facade/Facade_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/FactoryMethod/FactoryMethod_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/FactoryMethod/FactoryMethod_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/FactoryMethod/FactoryMethod_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Flyweight/Flyweight.hpp:62:14: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Flyweight/Flyweight_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Flyweight/Flyweight_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Flyweight/Flyweight_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Flyweight/Flyweight_unit.cpp:16:40: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Flyweight/Flyweight_unit.cpp:19:34: warning: 30 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Flyweight/Flyweight_unit.cpp:22:36: warning: 40 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Interpreter/Interpreter.hpp:41:33: warning: pass by value and use std::move [modernize-pass-by-value]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Interpreter/Interpreter_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Interpreter/Interpreter_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Interpreter/Interpreter_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Interpreter/Interpreter_unit.cpp:12:10: warning: variable name 'a' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Interpreter/Interpreter_unit.cpp:13:10: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Interpreter/Interpreter_unit.cpp:18:22: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Iterator/Iterator.hpp:30:81: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Iterator/Iterator.hpp:37:21: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Iterator/Iterator.hpp:78:46: warning: function 'createIterator' defined in a header file; function definitions in header files can lead to ODR violations [misc-definitions-in-headers]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Iterator/Iterator.hpp:78:46: note: make as 'inline'
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Iterator/Iterator_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Iterator/Iterator_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Iterator/Iterator_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Iterator/Iterator_unit.cpp:13:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Mediator/Mediator.hpp:17:16: warning: explicitly defaulted copy assignment operator is implicitly deleted [clang-diagnostic-defaulted-function-deleted]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Mediator/Mediator.hpp:25:15: note: copy assignment operator of 'Colleague' is implicitly deleted because field 'm_mediator' is of reference type 'Mediator::Mediator &'
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Mediator/Mediator.hpp:18:16: warning: explicitly defaulted move assignment operator is implicitly deleted [clang-diagnostic-defaulted-function-deleted]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Mediator/Mediator.hpp:25:15: note: move assignment operator of 'Colleague' is implicitly deleted because field 'm_mediator' is of reference type 'Mediator::Mediator &'
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Mediator/Mediator.hpp:19:45: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Mediator/Mediator.hpp:31:53: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Mediator/Mediator.hpp:71:25: warning: function 'send' defined in a header file; function definitions in header files can lead to ODR violations [misc-definitions-in-headers]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Mediator/Mediator.hpp:71:25: note: make as 'inline'
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Mediator/Mediator.hpp:76:25: warning: function 'receive' defined in a header file; function definitions in header files can lead to ODR violations [misc-definitions-in-headers]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Mediator/Mediator.hpp:76:25: note: make as 'inline'
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Mediator/Mediator_unit.cpp:11:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Mediator/Mediator_unit.cpp:11:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Mediator/Mediator_unit.cpp:11:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Mediator/Mediator.hpp:17:16: warning: explicitly defaulted copy assignment operator is implicitly deleted [-Wdefaulted-function-deleted]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Mediator/Mediator.hpp:25:15: note: copy assignment operator of 'Colleague' is implicitly deleted because field 'm_mediator' is of reference type 'Mediator::Mediator &'
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Mediator/Mediator.hpp:18:16: warning: explicitly defaulted move assignment operator is implicitly deleted [-Wdefaulted-function-deleted]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Mediator/Mediator.hpp:25:15: note: move assignment operator of 'Colleague' is implicitly deleted because field 'm_mediator' is of reference type 'Mediator::Mediator &'
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Memento/Memento_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Memento/Memento_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Memento/Memento_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/NullObject/NullObject_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/NullObject/NullObject_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/NullObject/NullObject_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Observer/Observer.hpp:51:37: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Observer/Observer.hpp:80:24: warning: function 'update' defined in a header file; function definitions in header files can lead to ODR violations [misc-definitions-in-headers]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Observer/Observer.hpp:80:24: note: make as 'inline'
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Observer/Observer_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Observer/Observer_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Observer/Observer_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Prototype/Prototype_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Prototype/Prototype_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Prototype/Prototype_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Proxy/Proxy_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Proxy/Proxy_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Proxy/Proxy_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Singleton/Singleton.hpp:36:39: warning: variable 'm_instancePointer' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Singleton/Singleton.hpp:40:39: warning: variable 'm_instancePointer' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/src/Singleton/Singleton.hpp:40:39: warning: variable 'm_instancePointer' defined in a header file; variable definitions in header files can lead to ODR violations [misc-definitions-in-headers]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Singleton/Singleton_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Singleton/Singleton_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Singleton/Singleton_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Singleton/Singleton_unit.cpp:10:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Singleton/Singleton_unit.cpp:14:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/State/State_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/State/State_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/State/State_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Strategy/Strategy_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Strategy/Strategy_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Strategy/Strategy_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Strategy/Strategy_unit.cpp:14:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Strategy/Strategy_unit.cpp:14:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Strategy/Strategy_unit.cpp:14:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Strategy/Strategy_unit.cpp:19:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Strategy/Strategy_unit.cpp:19:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Strategy/Strategy_unit.cpp:19:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/TemplateMethod/TemplateMethod_unit.cpp:11:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/TemplateMethod/TemplateMethod_unit.cpp:11:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/TemplateMethod/TemplateMethod_unit.cpp:11:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Visitor/Visitor_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Visitor/Visitor_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/DesignPatterns/DesignPatterns/tst/Visitor/Visitor_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
DONE!
