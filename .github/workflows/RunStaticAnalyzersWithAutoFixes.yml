name: Run Static Analyzers With Auto Fixes Workflow

on:
  workflow_dispatch:
    inputs:
      cppCMakeProjects:
        description: 'C/C++ CMake Project (use "all" for all projects)'
        required: true
        default: 'all'
env:
  determineCppProjectsRelativePath: "AllCommonScripts/GithubWorkflowScripts/DetermineCppProjects.sh"
  staticAnalysisScriptRelativePath: "AllCommonScripts/GithubWorkflowScripts/RunStaticAnalysisWithAutoFixes.sh"
  formatCppFilesRelativePath: "AllCommonScripts/ScriptsForCpp/formatCppFiles.sh"

jobs:
        
  determineCppProjects:
    name: Determine CPP Projects
    runs-on: ubuntu-latest
    outputs:
      projectsToBuild: ${{ steps.idOfGetCppProjectStep.outputs.APRG_CPP_DIRECTORIES }}
    steps:
      - name: Checkout code for changes checking
        id: idOfCheckout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2
      - name: Get C/C++ Projects from Git Diff and User Input
        id: idOfGetCppProjectStep
        run: |
          determineCppProjectsPath=$(realpath "$(pwd)/${{ env.determineCppProjectsRelativePath }}")
          echo "determineCppProjectsPath: [$determineCppProjectsPath]"
          chmod +x "$determineCppProjectsPath"
          "$determineCppProjectsPath" checkUserInput "${{ inputs.cppCMakeProjects }}"
          
          
  runStaticAnalyzersOnCppProjects:
    name: Run Static Analyzers On C/C++ Projects
    needs: determineCppProjects
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
          
      - name: Print Job Details
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
          
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Git
        run: |
          git config user.name "aprgproject"
          git config user.email "aprgproject@gmail.com"
          # set origin (fetch)
          git remote set-url origin https://$WORKFLOW_TOKEN@github.com/aprgproject/aprg
          # set origin (push)
          git remote set-url --push origin https://$WORKFLOW_TOKEN@github.com/aprgproject/aprg
          # git remote -v
        env:
          WORKFLOW_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install ninja-build cmake
          echo "cmake version: [$(cmake --version)]"
          echo "ninja version: [$(ninja --version)]"
          echo "clang version: [$(clang --version)]"
          sudo apt install libboost-all-dev
          echo "libboost-all-dev version (dpkg): [$(dpkg -l | grep libboost-all-dev)]"
          sudo apt install libgsl-dev
          echo "libgsl-dev version (dpkg): [$(dpkg -l | grep libgsl-dev)]"
          sudo apt install p7zip-full
          echo "p7zip-full version (dpkg): [$(dpkg -l | grep p7zip-full)]"
          sudo apt install clang-tidy cppcheck clazy
          echo "clang-tidy version: [$(clang-tidy --version)]"
          echo "cppcheck version: [$(cppcheck --version)]"
          echo "clazy version: [$(clazy --version)]"
          sudo apt install clang-format
          echo "clang-format version: [$(clang-format)]"
            
      - name: Build and Run with Static Analyzers
        shell: bash
        run: |
          echo "C/C++ Projects to check: [${{ needs.determineCppProjects.outputs.projectsToBuild }}]"
          staticAnalysisScriptPath=$(realpath "$(pwd)/${{ env.staticAnalysisScriptRelativePath }}")
          echo "staticAnalysisScriptPath: [$(staticAnalysisScriptPath)]"
          chmod +x "$staticAnalysisScriptPath"
          "$staticAnalysisScriptPath"  "${{ needs.determineCppProjects.outputs.projectsToBuild }}"
            
      - name: Run clang format
        shell: bash
        run: |
          formatCppFilesScriptPath=$(realpath "$(pwd)/${{ env.formatCppFilesRelativePath }}")
          echo "formatCppFilesScriptPath: [$(formatCppFilesScriptPath)]"
          chmod +x "$formatCppFilesScriptPath"
          "$formatCppFilesScriptPath"
        
      - name: Commit and Push Changes
        run: |
          git add -u
          echo "Performing git diff, just showing changes for 100 lines:"
          git diff --cached | head -n 100
          git commit -m "APRGPROJECT: Automatic commit for Static Analyzers with Auto Fixes"
          git pull --no-edit
          git push
