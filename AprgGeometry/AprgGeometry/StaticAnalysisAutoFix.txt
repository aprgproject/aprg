StaticAnalysisJobIdentifier: [011]
2023-09-11T04:55:20
[35m2023-09-11T04:55:45[0m | [33mBuildAndRun.sh:28[0m | The current path is [/d/a/aprg/aprg/AprgGeometry/AprgGeometry].
[35m2023-09-11T04:55:45[0m | [33mBuildAndRun.sh:29[0m | The scriptPath is [/d/a/aprg/aprg/AllCommonScripts/BuildAndRunScripts/BuildAndRun.sh].
[35m2023-09-11T04:55:45[0m | [33mBuildAndRun.sh:30[0m | The scriptOption is [buildOnOneCore].
[35m2023-09-11T04:55:45[0m | [33mBuildAndRun.sh:31[0m | The buildDirectoryName is [StaticAnalyzersBuild].
[35m2023-09-11T04:55:45[0m | [33mBuildAndRun.sh:32[0m | The argument1 is [Debug] and argument2 is [].
[35m2023-09-11T04:55:45[0m | [33mBuildAndRun.sh:33[0m | The immediateDirectoryName is [AprgGeometry].
[35m2023-09-11T04:55:45[0m | [33mBuildAndRun.sh:84[0m | The buildType is [Debug].
[35m2023-09-11T04:55:45[0m | [33mBuildAndRun.sh:85[0m | The numberOfCores is [2].
[35m2023-09-11T04:55:45[0m | [33mBuildAndRun.sh:68[0m | The build path is [/d/a/aprg/aprg/AprgGeometry/StaticAnalyzersBuild] and the output of [ls -la --color=auto]:
total 221
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 04:55 .
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 04:55 ..
-rw-r--r-- 1 runneradmin 197121  18082 Sep 11 04:55 CMakeCache.txt
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 04:55 CMakeFiles
-rw-r--r-- 1 runneradmin 197121    542 Sep 11 04:55 CTestTestfile.cmake
-rw-r--r-- 1 runneradmin 197121 184796 Sep 11 04:55 build.ninja
-rw-r--r-- 1 runneradmin 197121   2274 Sep 11 04:55 cmake_install.cmake
[1/89] Building CXX object CMakeFiles/gtest.dir/D_/a/aprg/aprg/gtest/gtest/googletest/src/gtest-all.cc.obj
In file included from D:/a/aprg/aprg/gtest/gtest/googletest/src/gtest-all.cc:49:
D:/a/aprg/aprg/gtest/gtest/googletest\src/gtest.cc:2604:3: warning: extension used [-Wlanguage-extension-token]
  __try {
  ^
1 warning generated.
[2/89] Building CXX object CMakeFiles/gtest.dir/D_/a/aprg/aprg/gtest/gtest/googletest/src/gtest_main.cc.obj
[3/89] Linking CXX static library gtest.lib
[4/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Container/AlbaContainerHelper.cpp.obj
[5/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/File/AlbaFileReader.cpp.obj
[6/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Angle/AlbaAngle.cpp.obj
[7/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/ComplexNumberHelpers.cpp.obj
[8/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/ComputationHelpers.cpp.obj
[9/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/FactorAndMulitplesHelpers.cpp.obj
[10/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/PowerHelpers.cpp.obj
[11/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/PrecisionHelpers.cpp.obj
[12/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/StatisticsHelpers.cpp.obj
[13/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/AlbaComplexNumber.cpp.obj
[14/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/AlbaNumber.cpp.obj
[15/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberInterval.cpp.obj
[16/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberIntervalEndpoint.cpp.obj
[17/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberIntervalHelpers.cpp.obj
[18/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Ratio/AlbaRatio.cpp.obj
[19/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Memory/AlbaMemoryBuffer.cpp.obj
[20/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/PathHandler/AlbaPathHandler.cpp.obj
[21/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/PathHandler/AlbaWebPathHandler.cpp.obj
[22/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Print/AlbaPrintFunctions.cpp.obj
[23/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/AlbaOldRandomizer.cpp.obj
[24/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/EntropySources/AlbaCombinedEntropySource.cpp.obj
[25/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/EntropySources/AlbaEntropySourceBasedOnTime.cpp.obj
[26/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamBitReader.cpp.obj
[27/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamBitWriter.cpp.obj
[28/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamParameterReader.cpp.obj
[29/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamParameterWriter.cpp.obj
[30/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/String/AlbaStringHelper.cpp.obj
[31/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaDateTime.cpp.obj
[32/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaDateTimeHelper.cpp.obj
[33/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimeHelper.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\Time\AlbaLocalTimeHelper.cpp:23:34: warning: 'localtime' is deprecated: This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    struct tm const localTime = *localtime(&currentTimeT);
                                 ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h:524:9: note: 'localtime' has been explicitly marked deprecated here
        _CRT_INSECURE_DEPRECATE(localtime_s)
        ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimeHelper.cpp:23:34: warning: 'localtime' is deprecated: This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    struct tm const localTime = *localtime(&currentTimeT);
                                 ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h:524:9: note: 'localtime' has been explicitly marked deprecated here
        _CRT_INSECURE_DEPRECATE(localtime_s)
        ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
1 warning generated.
[34/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimer.cpp.obj
[35/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/User/AlbaUserInterface.cpp.obj
[36/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/User/DisplayTable.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\User\DisplayTable.cpp:205:67: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
int DisplayTablePrinter::getVerticalBorderLength() const { return m_verticalBorder.length(); }
                                                                  ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\User\DisplayTable.cpp:208:12: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return ((m_maxLengthAtColumn.size() + 1) * getVerticalBorderLength()) + m_totalColumnLength;
           ^
[37/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Utility/AlbaScopeGuard.cpp.obj
[38/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities/CommonTestsUtilities/File/BaseFileReaderTest.cpp.obj
[39/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities/CommonTestsUtilities/File/FileUtilities.cpp.obj
[40/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/PathHandler/AlbaWindowsPathHandler.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:28:24: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const length = fullPath.length();
                       ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:30:45: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        int const indexWithSlashCharacter = fullPath.find_first_of(m_slashCharacterString, index);
                                            ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:270:23: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const index = m_directory.find_first_of(m_slashCharacterString + ":");
                      ^
[41/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Time/AlbaWindowsTimeHelper.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\Time\AlbaWindowsTimeHelper.cpp:6:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return AlbaDateTime(
           ^
[42/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Time/AlbaWindowsTimer.cpp.obj
[43/89] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Windows/AlbaWindowsHelper.cpp.obj
[44/89] Linking CXX static library APRG_COMMON.lib
[45/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/ThreeDimensions/Constructs/Ellipsoid.cpp.obj
[46/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/ThreeDimensions/Constructs/EllipticCone.cpp.obj
[47/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/ThreeDimensions/Constructs/EllipticHyperboloid.cpp.obj
[48/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/ThreeDimensions/Constructs/EllipticParaboloid.cpp.obj
[49/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/ThreeDimensions/Constructs/HyperbolicParaboloid.cpp.obj
[50/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/ThreeDimensions/Constructs/Line.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Line.cpp:20:9: warning: narrowing conversion from '_Iter_diff_t<_Vector_const_iterator<_Vector_val<_Simple_types<double>>>>' (aka 'long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        std::count_if(deltas.cbegin(), deltas.cend(), [&](double const delta) { return delta < 0; });
        ^
[51/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/ThreeDimensions/Constructs/Plane.cpp.obj
[52/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/ThreeDimensions/Constructs/Sphere.cpp.obj
[53/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/ThreeDimensions/Utilities/ThreeDimensionsUtilities.cpp.obj
[54/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/TwoDimensions/Constructs/Circle.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:106:5: warning: Variable 'y' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
    for (double y = 0; y <= m_radius; y += interval) {
    ^                  ~              ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:106:5: note: Variable 'y' with floating point type 'double' should not be used as a loop counter
    for (double y = 0; y <= m_radius; y += interval) {
    ^                  ~              ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:109:13: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
            for (double x = 0; x <= xAtTheEdgeOfCircleOptional.value(); x += interval) {
            ^                  ~                                        ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:109:13: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
            for (double x = 0; x <= xAtTheEdgeOfCircleOptional.value(); x += interval) {
            ^                  ~                                        ~
[55/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/TwoDimensions/Constructs/Ellipse.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:188:5: warning: Variable 'y' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
    for (double y = 0; y <= m_bValue; y += interval) {
    ^                  ~              ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:188:5: note: Variable 'y' with floating point type 'double' should not be used as a loop counter
    for (double y = 0; y <= m_bValue; y += interval) {
    ^                  ~              ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:190:9: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
        for (double x = 0; x <= xAtTheEdgeOfEllipse; x += interval) {
        ^                  ~                         ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:190:9: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
        for (double x = 0; x <= xAtTheEdgeOfEllipse; x += interval) {
        ^                  ~                         ~
[56/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/TwoDimensions/Constructs/Hyperbola.cpp.obj
[57/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/TwoDimensions/Constructs/Limacon.cpp.obj
[58/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/TwoDimensions/Constructs/Line.cpp.obj
[59/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/TwoDimensions/Constructs/Polygon.cpp.obj
[60/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/TwoDimensions/Constructs/Quadrilateral.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:31:27: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const groupSize = groupOfPointsBasedOnYValue.size();
                          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:65:29: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const points1Size = points1.size();
                            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:66:29: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const points2Size = points2.size();
                            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:105:29: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const points1Size = points1.size();
                            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:106:29: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const points2Size = points2.size();
                            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:107:29: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const points3Size = points3.size();
                            ^
[61/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/TwoDimensions/Constructs/Rectangle.cpp.obj
[62/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/TwoDimensions/Constructs/Triangle.cpp.obj
[63/89] Building CXX object CMakeFiles/AprgGeometry.dir/src/Geometry/TwoDimensions/Utilities/TwoDimensionsUtilities.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:579:5: warning: Variable 'y' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
    for (double y = 0; y < outerRadius; y += interval) {
    ^                  ~                ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:579:5: note: Variable 'y' with floating point type 'double' should not be used as a loop counter
    for (double y = 0; y < outerRadius; y += interval) {
    ^                  ~                ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:583:13: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
            for (double x = xAtInnerCircleOptional.value(); x < xAtOuterCircleOptional.value(); x += interval) {
            ^                                               ~                                   ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:583:13: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
            for (double x = xAtInnerCircleOptional.value(); x < xAtOuterCircleOptional.value(); x += interval) {
            ^                                               ~                                   ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:742:24: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        int endIndex = (startIndex + 1) % points.size();
                       ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:761:31: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const auxiliarySize = auxiliary.size();
                              ^
[64/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/ThreeDimensions/Constructs/Ellipsoid_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Ellipsoid_unit.cpp:13:5: warning: variable 'ellipsoid' of type 'Ellipsoid' can be declared 'const' [misc-const-correctness]
    Ellipsoid ellipsoid;
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Ellipsoid_unit.cpp:13:15: note: FIX-IT applied suggested code changes
    Ellipsoid ellipsoid;
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Ellipsoid_unit.cpp:22:5: warning: variable 'ellipsoid' of type 'Ellipsoid' can be declared 'const' [misc-const-correctness]
    Ellipsoid ellipsoid(Point(0, 0, 0), 10, 11, 12);
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Ellipsoid_unit.cpp:22:15: note: FIX-IT applied suggested code changes
    Ellipsoid ellipsoid(Point(0, 0, 0), 10, 11, 12);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Ellipsoid_unit.cpp:34:5: warning: variable 'ellipsoid' of type 'Ellipsoid' can be declared 'const' [misc-const-correctness]
    Ellipsoid ellipsoid(Point(1, 2, 3), 10, 11, 12);
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Ellipsoid_unit.cpp:34:15: note: FIX-IT applied suggested code changes
    Ellipsoid ellipsoid(Point(1, 2, 3), 10, 11, 12);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Ellipsoid_unit.cpp:46:5: warning: variable 'ellipsoid' of type 'Ellipsoid' can be declared 'const' [misc-const-correctness]
    Ellipsoid ellipsoid(Point(1, 2, 3), 10, 11, 12);
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Ellipsoid_unit.cpp:46:15: note: FIX-IT applied suggested code changes
    Ellipsoid ellipsoid(Point(1, 2, 3), 10, 11, 12);
              ^
[65/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/ThreeDimensions/Constructs/EllipticCone_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticCone_unit.cpp:13:5: warning: variable 'ellipticCone' of type 'EllipticCone' can be declared 'const' [misc-const-correctness]
    EllipticCone ellipticCone;
    ^
                 const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticCone_unit.cpp:13:18: note: FIX-IT applied suggested code changes
    EllipticCone ellipticCone;
                 ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticCone_unit.cpp:22:5: warning: variable 'ellipticCone' of type 'EllipticCone' can be declared 'const' [misc-const-correctness]
    EllipticCone ellipticCone(Point(0, 0, 0), 4, 5, 12);
    ^
                 const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticCone_unit.cpp:22:18: note: FIX-IT applied suggested code changes
    EllipticCone ellipticCone(Point(0, 0, 0), 4, 5, 12);
                 ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticCone_unit.cpp:34:5: warning: variable 'ellipticCone' of type 'EllipticCone' can be declared 'const' [misc-const-correctness]
    EllipticCone ellipticCone(Point(1, 2, 3), 4, 5, 12);
    ^
                 const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticCone_unit.cpp:34:18: note: FIX-IT applied suggested code changes
    EllipticCone ellipticCone(Point(1, 2, 3), 4, 5, 12);
                 ^
[66/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/ThreeDimensions/Constructs/EllipticHyperboloid_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticHyperboloid_unit.cpp:13:5: warning: variable 'ellipticHyperboloid' of type 'EllipticHyperboloid' can be declared 'const' [misc-const-correctness]
    EllipticHyperboloid ellipticHyperboloid;
    ^
                        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticHyperboloid_unit.cpp:13:25: note: FIX-IT applied suggested code changes
    EllipticHyperboloid ellipticHyperboloid;
                        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticHyperboloid_unit.cpp:22:5: warning: variable 'ellipticHyperboloid' of type 'EllipticHyperboloid' can be declared 'const' [misc-const-correctness]
    EllipticHyperboloid ellipticHyperboloid(Point(0, 0, 0), 10, 11, 12, false);
    ^
                        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticHyperboloid_unit.cpp:22:25: note: FIX-IT applied suggested code changes
    EllipticHyperboloid ellipticHyperboloid(Point(0, 0, 0), 10, 11, 12, false);
                        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticHyperboloid_unit.cpp:34:5: warning: variable 'ellipticHyperboloid' of type 'EllipticHyperboloid' can be declared 'const' [misc-const-correctness]
    EllipticHyperboloid ellipticHyperboloid(Point(1, 2, 3), 10, 11, 12, false);
    ^
                        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticHyperboloid_unit.cpp:34:25: note: FIX-IT applied suggested code changes
    EllipticHyperboloid ellipticHyperboloid(Point(1, 2, 3), 10, 11, 12, false);
                        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticHyperboloid_unit.cpp:46:5: warning: variable 'ellipticHyperboloid' of type 'EllipticHyperboloid' can be declared 'const' [misc-const-correctness]
    EllipticHyperboloid ellipticHyperboloid(Point(1, 2, 3), 10, 11, 12, false);
    ^
                        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticHyperboloid_unit.cpp:46:25: note: FIX-IT applied suggested code changes
    EllipticHyperboloid ellipticHyperboloid(Point(1, 2, 3), 10, 11, 12, false);
                        ^
[67/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/ThreeDimensions/Constructs/EllipticParaboloid_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticParaboloid_unit.cpp:13:5: warning: variable 'ellipticParaboloid' of type 'EllipticParaboloid' can be declared 'const' [misc-const-correctness]
    EllipticParaboloid ellipticParaboloid;
    ^
                       const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticParaboloid_unit.cpp:13:24: note: FIX-IT applied suggested code changes
    EllipticParaboloid ellipticParaboloid;
                       ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticParaboloid_unit.cpp:22:5: warning: variable 'ellipticParaboloid' of type 'EllipticParaboloid' can be declared 'const' [misc-const-correctness]
    EllipticParaboloid ellipticParaboloid(Point(0, 0, 0), 10, 11, 12);
    ^
                       const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticParaboloid_unit.cpp:22:24: note: FIX-IT applied suggested code changes
    EllipticParaboloid ellipticParaboloid(Point(0, 0, 0), 10, 11, 12);
                       ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticParaboloid_unit.cpp:34:5: warning: variable 'ellipticParaboloid' of type 'EllipticParaboloid' can be declared 'const' [misc-const-correctness]
    EllipticParaboloid ellipticParaboloid(Point(1, 2, 3), 10, 11, 12);
    ^
                       const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\EllipticParaboloid_unit.cpp:34:24: note: FIX-IT applied suggested code changes
    EllipticParaboloid ellipticParaboloid(Point(1, 2, 3), 10, 11, 12);
                       ^
[68/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/ThreeDimensions/Constructs/HyperbolicParaboloid_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\HyperbolicParaboloid_unit.cpp:13:5: warning: variable 'hyperbolicParaboloid' of type 'HyperbolicParaboloid' can be declared 'const' [misc-const-correctness]
    HyperbolicParaboloid hyperbolicParaboloid;
    ^
                         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\HyperbolicParaboloid_unit.cpp:13:26: note: FIX-IT applied suggested code changes
    HyperbolicParaboloid hyperbolicParaboloid;
                         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\HyperbolicParaboloid_unit.cpp:22:5: warning: variable 'hyperbolicParaboloid' of type 'HyperbolicParaboloid' can be declared 'const' [misc-const-correctness]
    HyperbolicParaboloid hyperbolicParaboloid(Point(0, 0, 0), 10, 5, 10);
    ^
                         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\HyperbolicParaboloid_unit.cpp:22:26: note: FIX-IT applied suggested code changes
    HyperbolicParaboloid hyperbolicParaboloid(Point(0, 0, 0), 10, 5, 10);
                         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\HyperbolicParaboloid_unit.cpp:34:5: warning: variable 'hyperbolicParaboloid' of type 'HyperbolicParaboloid' can be declared 'const' [misc-const-correctness]
    HyperbolicParaboloid hyperbolicParaboloid(Point(1, 2, 3), 10, 5, 10);
    ^
                         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\HyperbolicParaboloid_unit.cpp:34:26: note: FIX-IT applied suggested code changes
    HyperbolicParaboloid hyperbolicParaboloid(Point(1, 2, 3), 10, 5, 10);
                         ^
[69/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/ThreeDimensions/Constructs/Line_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:20:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line;
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:20:10: note: FIX-IT applied suggested code changes
    Line line;
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:38:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(3, 3, 3), Point(3, 3, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:38:10: note: FIX-IT applied suggested code changes
    Line line(Point(3, 3, 3), Point(3, 3, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:56:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(-2, 3, 4), Point(2, 3, -4));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:56:10: note: FIX-IT applied suggested code changes
    Line line(Point(-2, 3, 4), Point(2, 3, -4));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:78:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(2, -3, 6), Point(2, 3, -6));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:78:10: note: FIX-IT applied suggested code changes
    Line line(Point(2, -3, 6), Point(2, 3, -6));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:100:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(-2, 4, 6), Point(2, -4, 6));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:100:10: note: FIX-IT applied suggested code changes
    Line line(Point(-2, 4, 6), Point(2, -4, 6));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:122:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(2, 4, 5), Point(3, 3, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:122:10: note: FIX-IT applied suggested code changes
    Line line(Point(2, 4, 5), Point(3, 3, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:146:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(3, 2, 1, Point(1, 2, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:146:10: note: FIX-IT applied suggested code changes
    Line line(3, 2, 1, Point(1, 2, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:170:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(-2, 1, 1, Point(1, 0, 0));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:170:10: note: FIX-IT applied suggested code changes
    Line line(-2, 1, 1, Point(1, 0, 0));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:194:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(0, 40, 0), Point(40, 0, 0));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Line_unit.cpp:194:10: note: FIX-IT applied suggested code changes
    Line line(Point(0, 40, 0), Point(40, 0, 0));
         ^
[70/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/ThreeDimensions/Constructs/Plane_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Plane_unit.cpp:12:5: warning: variable 'plane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane plane;
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Plane_unit.cpp:12:11: note: FIX-IT applied suggested code changes
    Plane plane;
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Plane_unit.cpp:27:5: warning: variable 'plane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane plane(Point(3, 3, 3), Point(3, 3, 3), Point(3, 3, 3));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Plane_unit.cpp:27:11: note: FIX-IT applied suggested code changes
    Plane plane(Point(3, 3, 3), Point(3, 3, 3), Point(3, 3, 3));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Plane_unit.cpp:42:5: warning: variable 'plane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane plane(Point(1, 1, 0), Point(-2, 2, 0), Point(2, -1, 0));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Plane_unit.cpp:42:11: note: FIX-IT applied suggested code changes
    Plane plane(Point(1, 1, 0), Point(-2, 2, 0), Point(2, -1, 0));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Plane_unit.cpp:59:5: warning: variable 'plane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane plane(Point(1, 0, 1), Point(-2, 0, 2), Point(2, 0, -1));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Plane_unit.cpp:59:11: note: FIX-IT applied suggested code changes
    Plane plane(Point(1, 0, 1), Point(-2, 0, 2), Point(2, 0, -1));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Plane_unit.cpp:76:5: warning: variable 'plane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane plane(Point(0, 1, 1), Point(0, -2, 2), Point(0, 2, -1));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Plane_unit.cpp:76:11: note: FIX-IT applied suggested code changes
    Plane plane(Point(0, 1, 1), Point(0, -2, 2), Point(0, 2, -1));
          ^
[71/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/ThreeDimensions/Constructs/Point_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Point_unit.cpp:11:5: warning: variable 'point' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point point(100, 200, 300);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Point_unit.cpp:11:11: note: FIX-IT applied suggested code changes
    Point point(100, 200, 300);
          ^
[72/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/ThreeDimensions/Constructs/Sphere_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Sphere_unit.cpp:13:5: warning: variable 'sphere' of type 'Sphere' can be declared 'const' [misc-const-correctness]
    Sphere sphere;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Sphere_unit.cpp:13:12: note: FIX-IT applied suggested code changes
    Sphere sphere;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Sphere_unit.cpp:20:5: warning: variable 'sphere' of type 'Sphere' can be declared 'const' [misc-const-correctness]
    Sphere sphere(Point(0, 0, 0), 10);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Sphere_unit.cpp:20:12: note: FIX-IT applied suggested code changes
    Sphere sphere(Point(0, 0, 0), 10);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Sphere_unit.cpp:30:5: warning: variable 'sphere' of type 'Sphere' can be declared 'const' [misc-const-correctness]
    Sphere sphere(Point(1, 2, 3), 10);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Sphere_unit.cpp:30:12: note: FIX-IT applied suggested code changes
    Sphere sphere(Point(1, 2, 3), 10);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Sphere_unit.cpp:40:5: warning: variable 'sphere' of type 'Sphere' can be declared 'const' [misc-const-correctness]
    Sphere sphere(Point(1, 2, 3), 10);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Constructs\Sphere_unit.cpp:40:12: note: FIX-IT applied suggested code changes
    Sphere sphere(Point(1, 2, 3), 10);
           ^
[73/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/ThreeDimensions/Utilities/ThreeDimensionsUtilities_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:13:5: warning: variable 'pointOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointOnLine(-2, 2, -2);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:13:11: note: FIX-IT applied suggested code changes
    Point pointOnLine(-2, 2, -2);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:14:5: warning: variable 'pointNotOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointNotOnLine(2, 2, 2);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:14:11: note: FIX-IT applied suggested code changes
    Point pointNotOnLine(2, 2, 2);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:15:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(0, 0, 0), Point(-1, 1, -1));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:15:10: note: FIX-IT applied suggested code changes
    Line line(Point(0, 0, 0), Point(-1, 1, -1));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:22:5: warning: variable 'pointOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointOnLine(6, 3, -12);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:22:11: note: FIX-IT applied suggested code changes
    Point pointOnLine(6, 3, -12);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:23:5: warning: variable 'pointNotOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointNotOnLine(6, 0, -12);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:23:11: note: FIX-IT applied suggested code changes
    Point pointNotOnLine(6, 0, -12);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:24:5: warning: variable 'horizontalLine' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line horizontalLine(Point(-2, 3, 4), Point(2, 3, -4));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:24:10: note: FIX-IT applied suggested code changes
    Line horizontalLine(Point(-2, 3, 4), Point(2, 3, -4));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:31:5: warning: variable 'pointOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointOnLine(2, 9, -18);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:31:11: note: FIX-IT applied suggested code changes
    Point pointOnLine(2, 9, -18);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:32:5: warning: variable 'pointNotOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointNotOnLine(0, 9, -18);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:32:11: note: FIX-IT applied suggested code changes
    Point pointNotOnLine(0, 9, -18);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:33:5: warning: variable 'verticalLine' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line verticalLine(Point(2, -3, 6), Point(2, 3, -6));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:33:10: note: FIX-IT applied suggested code changes
    Line verticalLine(Point(2, -3, 6), Point(2, 3, -6));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:40:5: warning: variable 'pointOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointOnLine(6, -12, 6);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:40:11: note: FIX-IT applied suggested code changes
    Point pointOnLine(6, -12, 6);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:41:5: warning: variable 'pointNotOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointNotOnLine(6, -12, 0);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:41:11: note: FIX-IT applied suggested code changes
    Point pointNotOnLine(6, -12, 0);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:42:5: warning: variable 'lineParallelInZAxis' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line lineParallelInZAxis(Point(-2, 4, 6), Point(2, -4, 6));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:42:10: note: FIX-IT applied suggested code changes
    Line lineParallelInZAxis(Point(-2, 4, 6), Point(2, -4, 6));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:49:5: warning: variable 'pointOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointOnLine(1, 1, 1);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:49:11: note: FIX-IT applied suggested code changes
    Point pointOnLine(1, 1, 1);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:50:5: warning: variable 'pointNotOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointNotOnLine(1, -1, 1);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:50:11: note: FIX-IT applied suggested code changes
    Point pointNotOnLine(1, -1, 1);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:51:5: warning: variable 'plane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane plane;
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:51:11: note: FIX-IT applied suggested code changes
    Plane plane;
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:58:5: warning: variable 'pointOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointOnLine(1, 1, 1);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:58:11: note: FIX-IT applied suggested code changes
    Point pointOnLine(1, 1, 1);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:59:5: warning: variable 'pointNotOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointNotOnLine(1, -1, 1);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:59:11: note: FIX-IT applied suggested code changes
    Point pointNotOnLine(1, -1, 1);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:60:5: warning: variable 'plane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane plane(Point(3, 3, 3), Point(3, 3, 3), Point(3, 3, 3));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:60:11: note: FIX-IT applied suggested code changes
    Plane plane(Point(3, 3, 3), Point(3, 3, 3), Point(3, 3, 3));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:67:5: warning: variable 'pointOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointOnLine(1, 1, 0);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:67:11: note: FIX-IT applied suggested code changes
    Point pointOnLine(1, 1, 0);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:68:5: warning: variable 'pointNotOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointNotOnLine(5, 5, 5);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:68:11: note: FIX-IT applied suggested code changes
    Point pointNotOnLine(5, 5, 5);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:69:5: warning: variable 'plane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane plane(Point(1, 1, 0), Point(-2, 2, 0), Point(2, -1, 0));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:69:11: note: FIX-IT applied suggested code changes
    Plane plane(Point(1, 1, 0), Point(-2, 2, 0), Point(2, -1, 0));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:76:5: warning: variable 'pointOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointOnLine(1, 0, 1);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:76:11: note: FIX-IT applied suggested code changes
    Point pointOnLine(1, 0, 1);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:77:5: warning: variable 'pointNotOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointNotOnLine(5, 5, 5);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:77:11: note: FIX-IT applied suggested code changes
    Point pointNotOnLine(5, 5, 5);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:78:5: warning: variable 'plane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane plane(Point(1, 0, 1), Point(-2, 0, 2), Point(2, 0, -1));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:78:11: note: FIX-IT applied suggested code changes
    Plane plane(Point(1, 0, 1), Point(-2, 0, 2), Point(2, 0, -1));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:85:5: warning: variable 'pointOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointOnLine(0, 1, 1);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:85:11: note: FIX-IT applied suggested code changes
    Point pointOnLine(0, 1, 1);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:86:5: warning: variable 'pointNotOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointNotOnLine(5, 5, 5);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:86:11: note: FIX-IT applied suggested code changes
    Point pointNotOnLine(5, 5, 5);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:87:5: warning: variable 'plane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane plane(Point(0, 1, 1), Point(0, -2, 2), Point(0, 2, -1));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:87:11: note: FIX-IT applied suggested code changes
    Plane plane(Point(0, 1, 1), Point(0, -2, 2), Point(0, 2, -1));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:94:5: warning: variable 'pointOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointOnLine(1, 1, 1);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:94:11: note: FIX-IT applied suggested code changes
    Point pointOnLine(1, 1, 1);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:95:5: warning: variable 'pointNotOnLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointNotOnLine(5, 5, 5);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:95:11: note: FIX-IT applied suggested code changes
    Point pointNotOnLine(5, 5, 5);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:96:5: warning: variable 'plane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane plane(Point(1, 1, 1), Point(2, 0, 2), Point(3, 3, 0));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:96:11: note: FIX-IT applied suggested code changes
    Plane plane(Point(1, 1, 1), Point(2, 0, 2), Point(3, 3, 0));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:103:5: warning: variable 'lineOnPlane' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line lineOnPlane(Point(1, 1, 1), Point(2, 0, 2));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:103:10: note: FIX-IT applied suggested code changes
    Line lineOnPlane(Point(1, 1, 1), Point(2, 0, 2));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:104:5: warning: variable 'lineNotOnPlane' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line lineNotOnPlane(Point(1, 1, 1), Point(2, 2, 2));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:104:10: note: FIX-IT applied suggested code changes
    Line lineNotOnPlane(Point(1, 1, 1), Point(2, 2, 2));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:105:5: warning: variable 'plane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane plane(Point(1, 1, 1), Point(2, 0, 2), Point(3, 3, 0));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:105:11: note: FIX-IT applied suggested code changes
    Plane plane(Point(1, 1, 1), Point(2, 0, 2), Point(3, 3, 0));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:156:5: warning: variable 'deltaVector1' of type 'Vector' (aka 'AlbaMathVector<double, 3>') can be declared 'const' [misc-const-correctness]
    Vector deltaVector1{2, 4, 8};
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:156:12: note: FIX-IT applied suggested code changes
    Vector deltaVector1{2, 4, 8};
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:157:5: warning: variable 'deltaVector2' of type 'Vector' (aka 'AlbaMathVector<double, 3>') can be declared 'const' [misc-const-correctness]
    Vector deltaVector2{16, 32, 64};
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:157:12: note: FIX-IT applied suggested code changes
    Vector deltaVector2{16, 32, 64};
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:168:5: warning: variable 'line1' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line1(Point(2, 4, 6), Point(3, 3, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:168:10: note: FIX-IT applied suggested code changes
    Line line1(Point(2, 4, 6), Point(3, 3, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:169:5: warning: variable 'line2' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line2(Point(4, 4, 4), Point(3, 3, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:169:10: note: FIX-IT applied suggested code changes
    Line line2(Point(4, 4, 4), Point(3, 3, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:175:5: warning: variable 'inputPlane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane inputPlane(Point(1, 0, 0), Point(0, 1, 0), Point(0, 0, 1));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:175:11: note: FIX-IT applied suggested code changes
    Plane inputPlane(Point(1, 0, 0), Point(0, 1, 0), Point(0, 0, 1));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:176:5: warning: variable 'inputLine' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line inputLine(Point(0, 0, 0), Point(1, 1, 1));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:176:10: note: FIX-IT applied suggested code changes
    Line inputLine(Point(0, 0, 0), Point(1, 1, 1));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:177:5: warning: variable 'expectedPoint' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point expectedPoint(getPointOfIntersectionOfAPlaneAndALine(inputPlane, inputLine));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:177:11: note: FIX-IT applied suggested code changes
    Point expectedPoint(getPointOfIntersectionOfAPlaneAndALine(inputPlane, inputLine));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:255:5: warning: variable 'lineInput' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line lineInput(Point(0, 0, 0), Point(-1, 1, 1));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:255:10: note: FIX-IT applied suggested code changes
    Line lineInput(Point(0, 0, 0), Point(-1, 1, 1));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:256:5: warning: variable 'expectedLine' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line expectedLine(getLineWithSameSlope(lineInput, Point(2, 2, 2)));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:256:10: note: FIX-IT applied suggested code changes
    Line expectedLine(getLineWithSameSlope(lineInput, Point(2, 2, 2)));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:267:5: warning: variable 'input1' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane input1(Point(1, 0, 0), Point(0, 1, 0), Point(0, 0, 1));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:267:11: note: FIX-IT applied suggested code changes
    Plane input1(Point(1, 0, 0), Point(0, 1, 0), Point(0, 0, 1));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:268:5: warning: variable 'input2' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane input2(Point(0, 0, 0), Point(1, 1, 1), Point(0, 1, 1));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:268:11: note: FIX-IT applied suggested code changes
    Plane input2(Point(0, 0, 0), Point(1, 1, 1), Point(0, 1, 1));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:269:5: warning: variable 'expectedLine' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line expectedLine(getLineOfIntersectionOfTwoPlanes(input1, input2));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:269:10: note: FIX-IT applied suggested code changes
    Line expectedLine(getLineOfIntersectionOfTwoPlanes(input1, input2));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:280:5: warning: variable 'planeInput' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane planeInput(1, -1, 1, 0);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:280:11: note: FIX-IT applied suggested code changes
    Plane planeInput(1, -1, 1, 0);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:281:5: warning: variable 'expectedLine' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line expectedLine(getPerpendicularLineOfPlaneWithAPoint(planeInput, Point(0, 0, 0)));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:281:10: note: FIX-IT applied suggested code changes
    Line expectedLine(getPerpendicularLineOfPlaneWithAPoint(planeInput, Point(0, 0, 0)));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:292:5: warning: variable 'planeInput' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane planeInput(Point(1, 0, 0), Point(0, 1, 0), Point(0, 0, 1));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:292:11: note: FIX-IT applied suggested code changes
    Plane planeInput(Point(1, 0, 0), Point(0, 1, 0), Point(0, 0, 1));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:293:5: warning: variable 'lineInput' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line lineInput(Point(0, 0, 0), Point(1, 2, 4));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:293:10: note: FIX-IT applied suggested code changes
    Line lineInput(Point(0, 0, 0), Point(1, 2, 4));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:294:5: warning: variable 'expectedLine' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line expectedLine(getProjectedLineInPlaneOfASkewedPlaneAndLine(planeInput, lineInput));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:294:10: note: FIX-IT applied suggested code changes
    Line expectedLine(getProjectedLineInPlaneOfASkewedPlaneAndLine(planeInput, lineInput));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:305:5: warning: variable 'expectedPlane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane expectedPlane(getPlaneWithContainsALineAndAPoint(Line(Point(0, 0, 0), Point(1, 1, 1)), Point(1, 0, 0)));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:305:11: note: FIX-IT applied suggested code changes
    Plane expectedPlane(getPlaneWithContainsALineAndAPoint(Line(Point(0, 0, 0), Point(1, 1, 1)), Point(1, 0, 0)));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:314:5: warning: variable 'expectedPlane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane expectedPlane(
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:314:11: note: FIX-IT applied suggested code changes
    Plane expectedPlane(
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:324:5: warning: variable 'expectedPlane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane expectedPlane(getPlaneOfTwoDifferentLinesWithSameSlope(
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:324:11: note: FIX-IT applied suggested code changes
    Plane expectedPlane(getPlaneOfTwoDifferentLinesWithSameSlope(
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:333:5: warning: variable 'expectedPlane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane expectedPlane(
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\ThreeDimensions\Utilities\ThreeDimensionsUtilities_unit.cpp:333:11: note: FIX-IT applied suggested code changes
    Plane expectedPlane(
          ^
[74/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/TwoDimensions/Constructs/Circle_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:14:5: warning: variable 'circle' of type 'Circle' can be declared 'const' [misc-const-correctness]
    Circle circle;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:14:12: note: FIX-IT applied suggested code changes
    Circle circle;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:20:5: warning: variable 'points' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points points(circle.getLocus(1));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:20:12: note: FIX-IT applied suggested code changes
    Points points(circle.getLocus(1));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:25:5: warning: variable 'circle' of type 'Circle' can be declared 'const' [misc-const-correctness]
    Circle circle(1, 6, -2, -15);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:25:12: note: FIX-IT applied suggested code changes
    Circle circle(1, 6, -2, -15);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:34:5: warning: variable 'circle' of type 'Circle' can be declared 'const' [misc-const-correctness]
    Circle circle(Point(0, 0), 3);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:34:12: note: FIX-IT applied suggested code changes
    Circle circle(Point(0, 0), 3);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:65:5: warning: variable 'circle' of type 'Circle' can be declared 'const' [misc-const-correctness]
    Circle circle(Point(0, 0), 3);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:65:12: note: FIX-IT applied suggested code changes
    Circle circle(Point(0, 0), 3);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:72:5: warning: variable 'circle' of type 'Circle' can be declared 'const' [misc-const-correctness]
    Circle circle(1, 6, -2, -15);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:72:12: note: FIX-IT applied suggested code changes
    Circle circle(1, 6, -2, -15);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:87:5: warning: variable 'circle' of type 'Circle' can be declared 'const' [misc-const-correctness]
    Circle circle(Point(1, 2), 3);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:87:12: note: FIX-IT applied suggested code changes
    Circle circle(Point(1, 2), 3);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:92:5: warning: variable 'circle' of type 'Circle' can be declared 'const' [misc-const-correctness]
    Circle circle(Point(3, 3), 2);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Circle_unit.cpp:92:12: note: FIX-IT applied suggested code changes
    Circle circle(Point(3, 3), 2);
           ^
[75/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/TwoDimensions/Constructs/Ellipse_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:12:5: warning: variable 'ellipse' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse;
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:12:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse;
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:22:5: warning: variable 'points' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points points(ellipse.getPointsForCircumference(1));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:22:12: note: FIX-IT applied suggested code changes
    Points points(ellipse.getPointsForCircumference(1));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:27:5: warning: variable 'ellipse' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse(Point(0, 0), 3, 2);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:27:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse(Point(0, 0), 3, 2);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:58:5: warning: variable 'ellipse' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse(Point(0, 0), 5, 4);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:58:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse(Point(0, 0), 5, 4);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:65:5: warning: variable 'ellipse1' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse1(Point(0, 0), 1, 1);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:65:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse1(Point(0, 0), 1, 1);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:66:5: warning: variable 'ellipse2' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse2(Point(0, 0), 4, 5);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:66:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse2(Point(0, 0), 4, 5);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:67:5: warning: variable 'ellipse3' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse3(Point(0, 0), 5, 4);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:67:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse3(Point(0, 0), 5, 4);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:84:5: warning: variable 'ellipse1' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse1(Point(0, 0), 1, 1);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:84:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse1(Point(0, 0), 1, 1);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:85:5: warning: variable 'ellipse2' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse2(Point(0, 0), 4, 5);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:85:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse2(Point(0, 0), 4, 5);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:86:5: warning: variable 'ellipse3' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse3(Point(0, 0), 5, 4);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:86:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse3(Point(0, 0), 5, 4);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:88:5: warning: variable 'majorVertices1' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points majorVertices1(ellipse1.getMajorVertices());
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:88:12: note: FIX-IT applied suggested code changes
    Points majorVertices1(ellipse1.getMajorVertices());
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:102:5: warning: variable 'ellipse1' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse1(Point(0, 0), 1, 1);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:102:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse1(Point(0, 0), 1, 1);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:103:5: warning: variable 'ellipse2' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse2(Point(0, 0), 4, 5);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:103:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse2(Point(0, 0), 4, 5);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:104:5: warning: variable 'ellipse3' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse3(Point(0, 0), 5, 4);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:104:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse3(Point(0, 0), 5, 4);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:106:5: warning: variable 'minorVertices1' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points minorVertices1(ellipse1.getMinorVertices());
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:106:12: note: FIX-IT applied suggested code changes
    Points minorVertices1(ellipse1.getMinorVertices());
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:120:5: warning: variable 'ellipse1' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse1(Point(0, 0), 1, 1);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:120:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse1(Point(0, 0), 1, 1);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:121:5: warning: variable 'ellipse2' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse2(Point(0, 0), 4, 5);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:121:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse2(Point(0, 0), 4, 5);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:122:5: warning: variable 'ellipse3' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse3(Point(0, 0), 5, 4);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:122:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse3(Point(0, 0), 5, 4);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:124:5: warning: variable 'majorAxis1' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line majorAxis1(ellipse1.getMajorAxis());
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:124:10: note: FIX-IT applied suggested code changes
    Line majorAxis1(ellipse1.getMajorAxis());
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:125:5: warning: variable 'majorAxis2' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line majorAxis2(ellipse2.getMajorAxis());
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:125:10: note: FIX-IT applied suggested code changes
    Line majorAxis2(ellipse2.getMajorAxis());
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:126:5: warning: variable 'majorAxis3' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line majorAxis3(ellipse3.getMajorAxis());
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:126:10: note: FIX-IT applied suggested code changes
    Line majorAxis3(ellipse3.getMajorAxis());
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:134:5: warning: variable 'ellipse1' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse1(Point(0, 0), 1, 1);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:134:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse1(Point(0, 0), 1, 1);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:135:5: warning: variable 'ellipse2' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse2(Point(0, 0), 4, 5);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:135:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse2(Point(0, 0), 4, 5);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:136:5: warning: variable 'ellipse3' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse3(Point(0, 0), 5, 4);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:136:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse3(Point(0, 0), 5, 4);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:138:5: warning: variable 'minorAxis1' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line minorAxis1(ellipse1.getMinorAxis());
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:138:10: note: FIX-IT applied suggested code changes
    Line minorAxis1(ellipse1.getMinorAxis());
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:139:5: warning: variable 'minorAxis2' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line minorAxis2(ellipse2.getMinorAxis());
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:139:10: note: FIX-IT applied suggested code changes
    Line minorAxis2(ellipse2.getMinorAxis());
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:140:5: warning: variable 'minorAxis3' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line minorAxis3(ellipse3.getMinorAxis());
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Ellipse_unit.cpp:140:10: note: FIX-IT applied suggested code changes
    Line minorAxis3(ellipse3.getMinorAxis());
         ^
[76/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/TwoDimensions/Constructs/Hyperbola_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:12:5: warning: variable 'hyperbola' of type 'Hyperbola' can be declared 'const' [misc-const-correctness]
    Hyperbola hyperbola;
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:12:15: note: FIX-IT applied suggested code changes
    Hyperbola hyperbola;
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:21:5: warning: variable 'points' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points points(hyperbola.getPointsForShape(1));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:21:12: note: FIX-IT applied suggested code changes
    Points points(hyperbola.getPointsForShape(1));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:26:5: warning: variable 'hyperbola' of type 'Hyperbola' can be declared 'const' [misc-const-correctness]
    Hyperbola hyperbola(Point(0, 0), 3, 2);
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:26:15: note: FIX-IT applied suggested code changes
    Hyperbola hyperbola(Point(0, 0), 3, 2);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:62:5: warning: variable 'hyperbola1' of type 'Hyperbola' can be declared 'const' [misc-const-correctness]
    Hyperbola hyperbola1(Point(0, 0), 1, 1);
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:62:15: note: FIX-IT applied suggested code changes
    Hyperbola hyperbola1(Point(0, 0), 1, 1);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:63:5: warning: variable 'hyperbola2' of type 'Hyperbola' can be declared 'const' [misc-const-correctness]
    Hyperbola hyperbola2(Point(0, 0), 3, 4);
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:63:15: note: FIX-IT applied suggested code changes
    Hyperbola hyperbola2(Point(0, 0), 3, 4);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:64:5: warning: variable 'hyperbola3' of type 'Hyperbola' can be declared 'const' [misc-const-correctness]
    Hyperbola hyperbola3(Point(0, 0), -3, -4);
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:64:15: note: FIX-IT applied suggested code changes
    Hyperbola hyperbola3(Point(0, 0), -3, -4);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:82:5: warning: variable 'hyperbola1' of type 'Hyperbola' can be declared 'const' [misc-const-correctness]
    Hyperbola hyperbola1(Point(0, 0), 1, 1);
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:82:15: note: FIX-IT applied suggested code changes
    Hyperbola hyperbola1(Point(0, 0), 1, 1);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:83:5: warning: variable 'hyperbola2' of type 'Hyperbola' can be declared 'const' [misc-const-correctness]
    Hyperbola hyperbola2(Point(0, 0), 3, 4);
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:83:15: note: FIX-IT applied suggested code changes
    Hyperbola hyperbola2(Point(0, 0), 3, 4);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:84:5: warning: variable 'hyperbola3' of type 'Hyperbola' can be declared 'const' [misc-const-correctness]
    Hyperbola hyperbola3(Point(0, 0), -3, -4);
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:84:15: note: FIX-IT applied suggested code changes
    Hyperbola hyperbola3(Point(0, 0), -3, -4);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:102:5: warning: variable 'hyperbola1' of type 'Hyperbola' can be declared 'const' [misc-const-correctness]
    Hyperbola hyperbola1(Point(0, 0), 1, 1);
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:102:15: note: FIX-IT applied suggested code changes
    Hyperbola hyperbola1(Point(0, 0), 1, 1);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:103:5: warning: variable 'hyperbola2' of type 'Hyperbola' can be declared 'const' [misc-const-correctness]
    Hyperbola hyperbola2(Point(0, 0), 3, 4);
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:103:15: note: FIX-IT applied suggested code changes
    Hyperbola hyperbola2(Point(0, 0), 3, 4);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:104:5: warning: variable 'hyperbola3' of type 'Hyperbola' can be declared 'const' [misc-const-correctness]
    Hyperbola hyperbola3(Point(0, 0), -3, -4);
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Hyperbola_unit.cpp:104:15: note: FIX-IT applied suggested code changes
    Hyperbola hyperbola3(Point(0, 0), -3, -4);
              ^
[77/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/TwoDimensions/Constructs/Limacon_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:36:5: warning: variable 'limacon' of type 'Limacon' can be declared 'const' [misc-const-correctness]
    Limacon limacon(10, 13, LimaconTrigonometricFunctionType::Cosine);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:36:13: note: FIX-IT applied suggested code changes
    Limacon limacon(10, 13, LimaconTrigonometricFunctionType::Cosine);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:42:5: warning: variable 'limacon' of type 'Limacon' can be declared 'const' [misc-const-correctness]
    Limacon limacon(10, 13, LimaconTrigonometricFunctionType::Cosine);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:42:13: note: FIX-IT applied suggested code changes
    Limacon limacon(10, 13, LimaconTrigonometricFunctionType::Cosine);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:48:5: warning: variable 'limacon' of type 'Limacon' can be declared 'const' [misc-const-correctness]
    Limacon limacon(10, 13, LimaconTrigonometricFunctionType::Cosine);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:48:13: note: FIX-IT applied suggested code changes
    Limacon limacon(10, 13, LimaconTrigonometricFunctionType::Cosine);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:54:5: warning: variable 'limacon1' of type 'Limacon' can be declared 'const' [misc-const-correctness]
    Limacon limacon1(1, 2, LimaconTrigonometricFunctionType::Cosine);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:54:13: note: FIX-IT applied suggested code changes
    Limacon limacon1(1, 2, LimaconTrigonometricFunctionType::Cosine);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:55:5: warning: variable 'limacon2' of type 'Limacon' can be declared 'const' [misc-const-correctness]
    Limacon limacon2(1, 1, LimaconTrigonometricFunctionType::Cosine);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:55:13: note: FIX-IT applied suggested code changes
    Limacon limacon2(1, 1, LimaconTrigonometricFunctionType::Cosine);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:56:5: warning: variable 'limacon3' of type 'Limacon' can be declared 'const' [misc-const-correctness]
    Limacon limacon3(3, 2, LimaconTrigonometricFunctionType::Cosine);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:56:13: note: FIX-IT applied suggested code changes
    Limacon limacon3(3, 2, LimaconTrigonometricFunctionType::Cosine);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:57:5: warning: variable 'limacon4' of type 'Limacon' can be declared 'const' [misc-const-correctness]
    Limacon limacon4(2, 1, LimaconTrigonometricFunctionType::Cosine);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:57:13: note: FIX-IT applied suggested code changes
    Limacon limacon4(2, 1, LimaconTrigonometricFunctionType::Cosine);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:66:5: warning: variable 'limacon' of type 'Limacon' can be declared 'const' [misc-const-correctness]
    Limacon limacon(10, 13, LimaconTrigonometricFunctionType::Cosine);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:66:13: note: FIX-IT applied suggested code changes
    Limacon limacon(10, 13, LimaconTrigonometricFunctionType::Cosine);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:77:5: warning: variable 'limacon' of type 'Limacon' can be declared 'const' [misc-const-correctness]
    Limacon limacon(10, 13, LimaconTrigonometricFunctionType::Cosine);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:77:13: note: FIX-IT applied suggested code changes
    Limacon limacon(10, 13, LimaconTrigonometricFunctionType::Cosine);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:86:5: warning: variable 'limacon' of type 'Limacon' can be declared 'const' [misc-const-correctness]
    Limacon limacon(10, 13, LimaconTrigonometricFunctionType::Cosine);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Limacon_unit.cpp:86:13: note: FIX-IT applied suggested code changes
    Limacon limacon(10, 13, LimaconTrigonometricFunctionType::Cosine);
            ^
[78/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/TwoDimensions/Constructs/Line_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:12:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line;
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:12:10: note: FIX-IT applied suggested code changes
    Line line;
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:26:5: warning: variable 'points' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points points(line.getPoints(Point(-10, -10), Point(10, 10), 1));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:26:12: note: FIX-IT applied suggested code changes
    Points points(line.getPoints(Point(-10, -10), Point(10, 10), 1));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:31:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(3, 3), Point(3, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:31:10: note: FIX-IT applied suggested code changes
    Line line(Point(3, 3), Point(3, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:45:5: warning: variable 'points' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points points(line.getPoints(Point(-10, -10), Point(10, 10), 1));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:45:12: note: FIX-IT applied suggested code changes
    Points points(line.getPoints(Point(-10, -10), Point(10, 10), 1));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:50:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(-2, 3), Point(2, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:50:10: note: FIX-IT applied suggested code changes
    Line line(Point(-2, 3), Point(2, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:74:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(2, -3), Point(2, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:74:10: note: FIX-IT applied suggested code changes
    Line line(Point(2, -3), Point(2, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:100:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(-2, -3), Point(2, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:100:10: note: FIX-IT applied suggested code changes
    Line line(Point(-2, -3), Point(2, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:128:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(2, 3), Point(-2, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:128:10: note: FIX-IT applied suggested code changes
    Line line(Point(2, 3), Point(-2, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:152:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(2, 3), Point(2, -3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:152:10: note: FIX-IT applied suggested code changes
    Line line(Point(2, 3), Point(2, -3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:178:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(2, 3), Point(-2, -3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:178:10: note: FIX-IT applied suggested code changes
    Line line(Point(2, 3), Point(-2, -3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:206:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(2, 0), Point(0, 2));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:206:10: note: FIX-IT applied suggested code changes
    Line line(Point(2, 0), Point(0, 2));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:228:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(0, 0, 10);
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:228:10: note: FIX-IT applied suggested code changes
    Line line(0, 0, 10);
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:244:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(0, -1, 3);
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:244:10: note: FIX-IT applied suggested code changes
    Line line(0, -1, 3);
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:268:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(1, 0, -2);
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:268:10: note: FIX-IT applied suggested code changes
    Line line(1, 0, -2);
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:294:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(3, -2, 0);
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:294:10: note: FIX-IT applied suggested code changes
    Line line(3, -2, 0);
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:322:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(-5, 1, 0);
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:322:10: note: FIX-IT applied suggested code changes
    Line line(-5, 1, 0);
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:346:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(1, 0.229085, -868.451);
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:346:10: note: FIX-IT applied suggested code changes
    Line line(1, 0.229085, -868.451);
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:360:5: warning: variable 'points' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points points(line.getPoints(Point(0, 0), Point(3194, 3966), 1));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Line_unit.cpp:360:12: note: FIX-IT applied suggested code changes
    Points points(line.getPoints(Point(0, 0), Point(3194, 3966), 1));
           ^
[79/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/TwoDimensions/Constructs/Parabola_unit.cpp.obj
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:46:9: warning: variable 'p' of type 'double' can be declared 'const' [misc-const-correctness]
        double p(getP());
        ^
               const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:46:16: note: FIX-IT applied suggested code changes
        double p(getP());
               ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:47:9: warning: variable 'xt' of type 'double' can be declared 'const' [misc-const-correctness]
        double xt(getTranslationInX());
        ^
               const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:47:16: note: FIX-IT applied suggested code changes
        double xt(getTranslationInX());
               ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:48:9: warning: variable 'yt' of type 'double' can be declared 'const' [misc-const-correctness]
        double yt(getTranslationInY());
        ^
               const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:48:16: note: FIX-IT applied suggested code changes
        double yt(getTranslationInY());
               ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:59:9: warning: variable 'a' of type 'double' can be declared 'const' [misc-const-correctness]
        double a(getA());
        ^
               const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:59:16: note: FIX-IT applied suggested code changes
        double a(getA());
               ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:60:9: warning: variable 'b' of type 'double' can be declared 'const' [misc-const-correctness]
        double b(getB());
        ^
               const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:60:16: note: FIX-IT applied suggested code changes
        double b(getB());
               ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:61:9: warning: variable 'c' of type 'double' can be declared 'const' [misc-const-correctness]
        double c(getC());
        ^
               const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:61:16: note: FIX-IT applied suggested code changes
        double c(getC());
               ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:62:9: warning: variable 'vertexCoordinate1' of type 'double' can be declared 'const' [misc-const-correctness]
        double vertexCoordinate1 = -b / (2 * a);
        ^
               const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:62:16: note: FIX-IT applied suggested code changes
        double vertexCoordinate1 = -b / (2 * a);
               ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:63:9: warning: variable 'vertexCoordinate2' of type 'double' can be declared 'const' [misc-const-correctness]
        double vertexCoordinate2 = ((4 * a * c) - (b * b)) / (4 * a);
        ^
               const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:63:16: note: FIX-IT applied suggested code changes
        double vertexCoordinate2 = ((4 * a * c) - (b * b)) / (4 * a);
               ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:74:9: warning: variable 'p' of type 'double' can be declared 'const' [misc-const-correctness]
        double p(getP());
        ^
               const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:74:16: note: FIX-IT applied suggested code changes
        double p(getP());
               ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:75:9: warning: variable 'xt' of type 'double' can be declared 'const' [misc-const-correctness]
        double xt(getTranslationInX());
        ^
               const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:75:16: note: FIX-IT applied suggested code changes
        double xt(getTranslationInX());
               ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:76:9: warning: variable 'yt' of type 'double' can be declared 'const' [misc-const-correctness]
        double yt(getTranslationInY());
        ^
               const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Parabola.hpp:76:16: note: FIX-IT applied suggested code changes
        double yt(getTranslationInY());
               ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Polynomial.hpp:18:9: warning: variable 'limit' of type 'int' can be declared 'const' [misc-const-correctness]
        int limit = std::min(numberOfCoefficients, static_cast<int>(coefficients.size()));
        ^
            const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/Polynomial.hpp:18:13: note: FIX-IT applied suggested code changes
        int limit = std::min(numberOfCoefficients, static_cast<int>(coefficients.size()));
            ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/PolynomialInXEqualsY.hpp:17:9: warning: variable 'range' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
        AlbaValueRange<double> range(startValueOfX, endValueOfX, interval);
        ^
                               const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/PolynomialInXEqualsY.hpp:17:32: note: FIX-IT applied suggested code changes
        AlbaValueRange<double> range(startValueOfX, endValueOfX, interval);
                               ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/PolynomialInYEqualsX.hpp:17:9: warning: variable 'range' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
        AlbaValueRange<double> range(startValueOfY, endValueOfY, interval);
        ^
                               const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Constructs/PolynomialInYEqualsX.hpp:17:32: note: FIX-IT applied suggested code changes
        AlbaValueRange<double> range(startValueOfY, endValueOfY, interval);
                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:15:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola{1, 2, 3};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:15:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola{1, 2, 3};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:27:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialY>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialY> parabola{1, 2, 3};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:27:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialY> parabola{1, 2, 3};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:39:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola{1, 2, 3};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:39:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola{1, 2, 3};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:51:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola{1, 2, 3};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:51:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola{1, 2, 3};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:63:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialY>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialY> parabola{1, 2, 3};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:63:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialY> parabola{1, 2, 3};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:71:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola{1, 2, 3};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:71:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola{1, 2, 3};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:79:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialY>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialY> parabola{1, 2, 3};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:79:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialY> parabola{1, 2, 3};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:87:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola{-0.125, 0, 0};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:87:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola{-0.125, 0, 0};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:93:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialY>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialY> parabola{-0.125, 0, 0};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:93:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialY> parabola{-0.125, 0, 0};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:99:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola{-0.2, -2, -4};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:99:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola{-0.2, -2, -4};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:106:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialY>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialY> parabola{-0.2, -2, -4};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:106:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialY> parabola{-0.2, -2, -4};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:113:5: warning: variable 'parabola1' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola1{1, 2, 4};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:113:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola1{1, 2, 4};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:114:5: warning: variable 'parabola2' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola2{1, 2, 4};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:114:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola2{1, 2, 4};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:121:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola{-0.2, -2, -4};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:121:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola{-0.2, -2, -4};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:127:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialY>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialY> parabola{-0.2, -2, -4};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:127:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialY> parabola{-0.2, -2, -4};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:133:5: warning: variable 'parabola1' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola1{1, 2, 4};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:133:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola1{1, 2, 4};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:134:5: warning: variable 'parabola2' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola2{1, -1, -6};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:134:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola2{1, -1, -6};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:141:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola{-0.2, -2, -4};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:141:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola{-0.2, -2, -4};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:147:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialY>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialY> parabola{-0.2, -2, -4};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:147:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialY> parabola{-0.2, -2, -4};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:153:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola{-0.2, -2, -4};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:153:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola{-0.2, -2, -4};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:159:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialY>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialY> parabola{-0.2, -2, -4};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:159:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialY> parabola{-0.2, -2, -4};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:165:5: warning: variable 'parabola1' of type 'Parabola<ParabolaOrientation::PolynomialY>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialY> parabola1{1, 2, 4};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:165:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialY> parabola1{1, 2, 4};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:166:5: warning: variable 'parabola2' of type 'Parabola<ParabolaOrientation::PolynomialY>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialY> parabola2{1, -1, -6};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Parabola_unit.cpp:166:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialY> parabola2{1, -1, -6};
                                               ^
[80/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/TwoDimensions/Constructs/Point_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Point_unit.cpp:10:5: warning: variable 'point' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point point(100, 200);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Point_unit.cpp:10:11: note: FIX-IT applied suggested code changes
    Point point(100, 200);
          ^
[81/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/TwoDimensions/Constructs/Polygon_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Polygon_unit.cpp:8:42: warning: variable 'polygon' of type 'Polygon<3>' can be declared 'const' [misc-const-correctness]
TEST(PolygonTest, PolygonCanBeCreated) { Polygon<3> polygon{Point(1, 1), Point(2, 3), Point(0, 17)}; }
                                         ^
                                                    const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Polygon_unit.cpp:8:53: note: FIX-IT applied suggested code changes
TEST(PolygonTest, PolygonCanBeCreated) { Polygon<3> polygon{Point(1, 1), Point(2, 3), Point(0, 17)}; }
                                                    ^
[82/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/TwoDimensions/Constructs/PolynomialInXEqualsY_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\PolynomialInXEqualsY_unit.cpp:12:5: warning: variable 'polynomial' of type 'PolynomialInXEqualsY<3>' can be declared 'const' [misc-const-correctness]
    PolynomialInXEqualsY<3> polynomial{1, 2, 3};
    ^
                            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\PolynomialInXEqualsY_unit.cpp:12:29: note: FIX-IT applied suggested code changes
    PolynomialInXEqualsY<3> polynomial{1, 2, 3};
                            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\PolynomialInXEqualsY_unit.cpp:24:5: warning: variable 'polynomial' of type 'PolynomialInXEqualsY<3>' can be declared 'const' [misc-const-correctness]
    PolynomialInXEqualsY<3> polynomial{1, 2, 3};
    ^
                            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\PolynomialInXEqualsY_unit.cpp:24:29: note: FIX-IT applied suggested code changes
    PolynomialInXEqualsY<3> polynomial{1, 2, 3};
                            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\PolynomialInXEqualsY_unit.cpp:30:5: warning: variable 'polynomial' of type 'PolynomialInXEqualsY<3>' can be declared 'const' [misc-const-correctness]
    PolynomialInXEqualsY<3> polynomial{1, 2, 3};
    ^
                            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\PolynomialInXEqualsY_unit.cpp:30:29: note: FIX-IT applied suggested code changes
    PolynomialInXEqualsY<3> polynomial{1, 2, 3};
                            ^
[83/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/TwoDimensions/Constructs/PolynomialInYEqualsX_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\PolynomialInYEqualsX_unit.cpp:12:5: warning: variable 'polynomial' of type 'PolynomialInYEqualsX<3>' can be declared 'const' [misc-const-correctness]
    PolynomialInYEqualsX<3> polynomial{1, 2, 3};
    ^
                            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\PolynomialInYEqualsX_unit.cpp:12:29: note: FIX-IT applied suggested code changes
    PolynomialInYEqualsX<3> polynomial{1, 2, 3};
                            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\PolynomialInYEqualsX_unit.cpp:24:5: warning: variable 'polynomial' of type 'PolynomialInYEqualsX<3>' can be declared 'const' [misc-const-correctness]
    PolynomialInYEqualsX<3> polynomial{1, 2, 3};
    ^
                            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\PolynomialInYEqualsX_unit.cpp:24:29: note: FIX-IT applied suggested code changes
    PolynomialInYEqualsX<3> polynomial{1, 2, 3};
                            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\PolynomialInYEqualsX_unit.cpp:30:5: warning: variable 'polynomial' of type 'PolynomialInYEqualsX<3>' can be declared 'const' [misc-const-correctness]
    PolynomialInYEqualsX<3> polynomial{1, 2, 3};
    ^
                            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\PolynomialInYEqualsX_unit.cpp:30:29: note: FIX-IT applied suggested code changes
    PolynomialInYEqualsX<3> polynomial{1, 2, 3};
                            ^
[84/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/TwoDimensions/Constructs/Polynomial_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Polynomial_unit.cpp:12:5: warning: variable 'polynomial' of type 'Polynomial<3>' can be declared 'const' [misc-const-correctness]
    Polynomial<3> polynomial{1, 2, 3};
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Polynomial_unit.cpp:12:19: note: FIX-IT applied suggested code changes
    Polynomial<3> polynomial{1, 2, 3};
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Polynomial_unit.cpp:18:5: warning: variable 'polynomial' of type 'Polynomial<3>' can be declared 'const' [misc-const-correctness]
    Polynomial<3> polynomial{1, 2, 3};
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Polynomial_unit.cpp:18:19: note: FIX-IT applied suggested code changes
    Polynomial<3> polynomial{1, 2, 3};
                  ^
[85/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/TwoDimensions/Constructs/Quadrilateral_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:10:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(Point(1, 1), Point(2, 3), Point(0, 17), Point(-100, 4));
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:10:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(Point(1, 1), Point(2, 3), Point(0, 17), Point(-100, 4));
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:14:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(Point(-2, 0), Point(0, -2), Point(2, 0), Point(0, 2));
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:14:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(Point(-2, 0), Point(0, -2), Point(2, 0), Point(0, 2));
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:30:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(Point(-2, 0), Point(2, 0), Point(0, 2), Point(0, -2));
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:30:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(Point(-2, 0), Point(2, 0), Point(0, 2), Point(0, -2));
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:45:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(Point(1, 1), Point(2, 1), Point(4, 1), Point(5, 1));
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:45:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(Point(1, 1), Point(2, 1), Point(4, 1), Point(5, 1));
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:59:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(Point(3, 1), Point(1, 3), Point(3, 3), Point(5, 3));
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:59:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(Point(3, 1), Point(1, 3), Point(3, 3), Point(5, 3));
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:77:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(Point(2, 2), Point(2, 4), Point(4, 2), Point(4, 4));
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:77:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(Point(2, 2), Point(2, 4), Point(4, 2), Point(4, 4));
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:95:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(Point(3, 5), Point(1, 3), Point(3, 3), Point(5, 3));
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:95:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(Point(3, 5), Point(1, 3), Point(3, 3), Point(5, 3));
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:113:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(Point(2, 1), Point(4, 3), Point(2, 4), Point(4, 4));
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:113:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(Point(2, 1), Point(4, 3), Point(2, 4), Point(4, 4));
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:131:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(Point(4, 1), Point(2, 3), Point(2, 4), Point(4, 4));
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:131:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(Point(4, 1), Point(2, 3), Point(2, 4), Point(4, 4));
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:149:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(Point(3, 1), Point(1, 2), Point(5, 2), Point(3, 3));
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:149:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(Point(3, 1), Point(1, 2), Point(5, 2), Point(3, 3));
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:165:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(Point(2, 3), Point(4, 5), Point(2, 2), Point(4, 2));
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:165:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(Point(2, 3), Point(4, 5), Point(2, 2), Point(4, 2));
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:183:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(Point(2, 5), Point(4, 3), Point(2, 2), Point(4, 2));
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:183:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(Point(2, 5), Point(4, 3), Point(2, 2), Point(4, 2));
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:201:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(Point(3, 1), Point(2, 2), Point(4, 3), Point(3, 4));
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:201:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(Point(3, 1), Point(2, 2), Point(4, 3), Point(3, 4));
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:218:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(Point(3, 1), Point(2, 3), Point(4, 2), Point(3, 4));
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:218:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(Point(3, 1), Point(2, 3), Point(4, 2), Point(3, 4));
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:235:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Quadrilateral_unit.cpp:235:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(
                  ^
[86/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/TwoDimensions/Constructs/Rectangle_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Rectangle_unit.cpp:10:5: warning: variable 'retangle' of type 'Rectangle' can be declared 'const' [misc-const-correctness]
    Rectangle retangle(Point(-1, 1), Point(1, -1));
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Rectangle_unit.cpp:10:15: note: FIX-IT applied suggested code changes
    Rectangle retangle(Point(-1, 1), Point(1, -1));
              ^
[87/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/TwoDimensions/Constructs/Triangle_unit.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:11:44: warning: variable 'triangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
TEST(TriangleTest, TriangleCanBeCreated) { Triangle triangle(Point(1, 1), Point(2, 3), Point(0, 17)); }
                                           ^
                                                    const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:11:53: note: FIX-IT applied suggested code changes
TEST(TriangleTest, TriangleCanBeCreated) { Triangle triangle(Point(1, 1), Point(2, 3), Point(0, 17)); }
                                                    ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:14:5: warning: variable 'triangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle triangle(Point(0, 0), Point(0, 4), Point(4, 0));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:14:14: note: FIX-IT applied suggested code changes
    Triangle triangle(Point(0, 0), Point(0, 4), Point(4, 0));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:23:5: warning: variable 'triangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle triangle(Point(0, 0), Point(0, 4), Point(4, 0));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:23:14: note: FIX-IT applied suggested code changes
    Triangle triangle(Point(0, 0), Point(0, 4), Point(4, 0));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:33:5: warning: variable 'triangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle triangle(Point(0, 0), Point(0, 4), Point(4, 0));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:33:14: note: FIX-IT applied suggested code changes
    Triangle triangle(Point(0, 0), Point(0, 4), Point(4, 0));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:39:5: warning: variable 'regularTriangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle regularTriangle(Point(1, 0), Point(-1, 0), Point(0, sqrt(3)));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:39:14: note: FIX-IT applied suggested code changes
    Triangle regularTriangle(Point(1, 0), Point(-1, 0), Point(0, sqrt(3)));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:40:5: warning: variable 'nonRegularTriangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle nonRegularTriangle(Point(0, 0), Point(0, 4), Point(4, 0));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:40:14: note: FIX-IT applied suggested code changes
    Triangle nonRegularTriangle(Point(0, 0), Point(0, 4), Point(4, 0));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:47:5: warning: variable 'regularTriangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle regularTriangle(Point(1, 0), Point(-1, 0), Point(0, sqrt(3)));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:47:14: note: FIX-IT applied suggested code changes
    Triangle regularTriangle(Point(1, 0), Point(-1, 0), Point(0, sqrt(3)));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:48:5: warning: variable 'nonRegularTriangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle nonRegularTriangle(Point(0, 0), Point(0, 4), Point(4, 0));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:48:14: note: FIX-IT applied suggested code changes
    Triangle nonRegularTriangle(Point(0, 0), Point(0, 4), Point(4, 0));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:55:5: warning: variable 'regularTriangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle regularTriangle(Point(1, 0), Point(-1, 0), Point(0, sqrt(3)));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:55:14: note: FIX-IT applied suggested code changes
    Triangle regularTriangle(Point(1, 0), Point(-1, 0), Point(0, sqrt(3)));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:56:5: warning: variable 'nonRegularTriangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle nonRegularTriangle(Point(0, 0), Point(0, 4), Point(4, 0));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:56:14: note: FIX-IT applied suggested code changes
    Triangle nonRegularTriangle(Point(0, 0), Point(0, 4), Point(4, 0));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:63:5: warning: variable 'regularTriangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle regularTriangle(Point(1, 0), Point(-1, 0), Point(0, sqrt(3)));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:63:14: note: FIX-IT applied suggested code changes
    Triangle regularTriangle(Point(1, 0), Point(-1, 0), Point(0, sqrt(3)));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:64:5: warning: variable 'isocelesTriangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle isocelesTriangle(Point(0, 0), Point(0, 4), Point(4, 0));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:64:14: note: FIX-IT applied suggested code changes
    Triangle isocelesTriangle(Point(0, 0), Point(0, 4), Point(4, 0));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:65:5: warning: variable 'nonIsocelesTriangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle nonIsocelesTriangle(Point(0, 0), Point(0, 4), Point(5, 0));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:65:14: note: FIX-IT applied suggested code changes
    Triangle nonIsocelesTriangle(Point(0, 0), Point(0, 4), Point(5, 0));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:73:5: warning: variable 'regularTriangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle regularTriangle(Point(1, 0), Point(-1, 0), Point(0, sqrt(3)));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:73:14: note: FIX-IT applied suggested code changes
    Triangle regularTriangle(Point(1, 0), Point(-1, 0), Point(0, sqrt(3)));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:74:5: warning: variable 'rightTriangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle rightTriangle(Point(0, 0), Point(0, 4), Point(4, 0));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:74:14: note: FIX-IT applied suggested code changes
    Triangle rightTriangle(Point(0, 0), Point(0, 4), Point(4, 0));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:81:5: warning: variable 'triangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle triangle(Point(0, 0), Point(3, 3), Point(0, 6));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Constructs\Triangle_unit.cpp:81:14: note: FIX-IT applied suggested code changes
    Triangle triangle(Point(0, 0), Point(3, 3), Point(0, 6));
             ^
[88/89] Building CXX object CMakeFiles/AprgGeometry.dir/tst/GeometryTests/TwoDimensions/Utilities/TwoDimensionsUtilities_unit.cpp.obj
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Utilities/TwoDimensionsUtilities.hpp:119:5: warning: variable 'lineSegments' of type 'LineSegments' (aka 'vector<pair<AlbaXY<double>, AlbaXY<double>>>') can be declared 'const' [misc-const-correctness]
    LineSegments lineSegments(polygon.getLineSegments());
    ^
                 const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Utilities/TwoDimensionsUtilities.hpp:119:18: note: FIX-IT applied suggested code changes
    LineSegments lineSegments(polygon.getLineSegments());
                 ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Utilities/TwoDimensionsUtilities.hpp:121:5: warning: variable 'numberOfIntersections' of type 'int' can be declared 'const' [misc-const-correctness]
    int numberOfIntersections = std::count_if(
    ^
        const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Utilities/TwoDimensionsUtilities.hpp:121:9: note: FIX-IT applied suggested code changes
    int numberOfIntersections = std::count_if(
        ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Utilities/TwoDimensionsUtilities.hpp:135:5: warning: variable 'sizeMinusOne' of type 'int' can be declared 'const' [misc-const-correctness]
    int sizeMinusOne = static_cast<int>(vertices.size()) - 1;
    ^
        const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Utilities/TwoDimensionsUtilities.hpp:135:9: note: FIX-IT applied suggested code changes
    int sizeMinusOne = static_cast<int>(vertices.size()) - 1;
        ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Utilities/TwoDimensionsUtilities.hpp:146:5: warning: variable 'slope' of type 'double' can be declared 'const' [misc-const-correctness]
    double slope = polynomial.getSlopeAt(x);
    ^
           const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Utilities/TwoDimensionsUtilities.hpp:146:12: note: FIX-IT applied suggested code changes
    double slope = polynomial.getSlopeAt(x);
           ^
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Utilities/TwoDimensionsUtilities.hpp:147:5: warning: variable 'y' of type 'double' can be declared 'const' [misc-const-correctness]
    double y = polynomial.calculateYfromX(x);
    ^
           const 
D:/a/aprg/aprg/AprgGeometry/AprgGeometry/src\Geometry/TwoDimensions/Utilities/TwoDimensionsUtilities.hpp:147:12: note: FIX-IT applied suggested code changes
    double y = polynomial.calculateYfromX(x);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:22:5: warning: variable 'points' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points points;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:22:12: note: FIX-IT applied suggested code changes
    Points points;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:23:5: warning: variable 'minimumXAndY' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point minimumXAndY(-1, -1);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:23:11: note: FIX-IT applied suggested code changes
    Point minimumXAndY(-1, -1);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:24:5: warning: variable 'maximumXAndY' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point maximumXAndY(1, 1);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:24:11: note: FIX-IT applied suggested code changes
    Point maximumXAndY(1, 1);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:35:5: warning: variable 'pointOnLine' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point pointOnLine(-2, 2);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:35:11: note: FIX-IT applied suggested code changes
    Point pointOnLine(-2, 2);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:36:5: warning: variable 'pointNotOnLine' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point pointNotOnLine(2, 2);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:36:11: note: FIX-IT applied suggested code changes
    Point pointNotOnLine(2, 2);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:37:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(0, 0), Point(-1, 1));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:37:10: note: FIX-IT applied suggested code changes
    Line line(Point(0, 0), Point(-1, 1));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:51:5: warning: variable 'commonLine' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line commonLine(Point(0, 0), Point(2, 2));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:51:10: note: FIX-IT applied suggested code changes
    Line commonLine(Point(0, 0), Point(2, 2));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:52:5: warning: variable 'crossLine' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line crossLine(Point(0, 2), Point(2, 0));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:52:10: note: FIX-IT applied suggested code changes
    Line crossLine(Point(0, 2), Point(2, 0));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:53:5: warning: variable 'parallelLine' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line parallelLine(Point(2, 2), Point(3, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:53:10: note: FIX-IT applied suggested code changes
    Line parallelLine(Point(2, 2), Point(3, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:54:5: warning: variable 'horizontal' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line horizontal(Point(0, 0), Point(5, 0));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:54:10: note: FIX-IT applied suggested code changes
    Line horizontal(Point(0, 0), Point(5, 0));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:55:5: warning: variable 'vertical' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line vertical(Point(0, 0), Point(0, 5));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:55:10: note: FIX-IT applied suggested code changes
    Line vertical(Point(0, 0), Point(0, 5));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:66:5: warning: variable 'commonLine' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line commonLine(Point(0, 0), Point(2, 2));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:66:10: note: FIX-IT applied suggested code changes
    Line commonLine(Point(0, 0), Point(2, 2));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:67:5: warning: variable 'crossLine' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line crossLine(Point(0, 2), Point(2, 0));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:67:10: note: FIX-IT applied suggested code changes
    Line crossLine(Point(0, 2), Point(2, 0));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:68:5: warning: variable 'parallelLine' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line parallelLine(Point(2, 2), Point(3, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:68:10: note: FIX-IT applied suggested code changes
    Line parallelLine(Point(2, 2), Point(3, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:69:5: warning: variable 'horizontal' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line horizontal(Point(0, 0), Point(5, 0));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:69:10: note: FIX-IT applied suggested code changes
    Line horizontal(Point(0, 0), Point(5, 0));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:70:5: warning: variable 'vertical' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line vertical(Point(0, 0), Point(0, 5));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:70:10: note: FIX-IT applied suggested code changes
    Line vertical(Point(0, 0), Point(0, 5));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:81:5: warning: variable 'commonSegment' of type 'LineSegment' (aka 'pair<AlbaXY<double>, AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    LineSegment commonSegment(Point(0, 0), Point(2, 2));
    ^
                const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:81:17: note: FIX-IT applied suggested code changes
    LineSegment commonSegment(Point(0, 0), Point(2, 2));
                ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:82:5: warning: variable 'crossSegment' of type 'LineSegment' (aka 'pair<AlbaXY<double>, AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    LineSegment crossSegment(Point(0, 2), Point(2, 0));
    ^
                const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:82:17: note: FIX-IT applied suggested code changes
    LineSegment crossSegment(Point(0, 2), Point(2, 0));
                ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:83:5: warning: variable 'parallelIntersecting' of type 'LineSegment' (aka 'pair<AlbaXY<double>, AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    LineSegment parallelIntersecting(Point(2, 2), Point(3, 3));
    ^
                const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:83:17: note: FIX-IT applied suggested code changes
    LineSegment parallelIntersecting(Point(2, 2), Point(3, 3));
                ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:84:5: warning: variable 'parallelNotIntersecting' of type 'LineSegment' (aka 'pair<AlbaXY<double>, AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    LineSegment parallelNotIntersecting(Point(2, 1), Point(3, 2));
    ^
                const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:84:17: note: FIX-IT applied suggested code changes
    LineSegment parallelNotIntersecting(Point(2, 1), Point(3, 2));
                ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:85:5: warning: variable 'perpendicularNotIntersecting' of type 'LineSegment' (aka 'pair<AlbaXY<double>, AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    LineSegment perpendicularNotIntersecting(Point(2, 1), Point(3, 0));
    ^
                const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:85:17: note: FIX-IT applied suggested code changes
    LineSegment perpendicularNotIntersecting(Point(2, 1), Point(3, 0));
                ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:94:5: warning: variable 'triangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle triangle(Point(10, 30), Point(0, 0), Point(20, 0));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:94:14: note: FIX-IT applied suggested code changes
    Triangle triangle(Point(10, 30), Point(0, 0), Point(20, 0));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:101:5: warning: variable 'triangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle triangle(Point(0, 0), Point(0, 4), Point(4, 0));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:101:14: note: FIX-IT applied suggested code changes
    Triangle triangle(Point(0, 0), Point(0, 4), Point(4, 0));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:138:5: warning: variable 'points' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points points{{1, 3}, {2, 1}, {4, 4}, {4, 2}};
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:138:12: note: FIX-IT applied suggested code changes
    Points points{{1, 3}, {2, 1}, {4, 4}, {4, 2}};
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:147:5: warning: variable 'deltaVector1' of type 'Vector' (aka 'AlbaMathVector<double, 2>') can be declared 'const' [misc-const-correctness]
    Vector deltaVector1{2, 4};
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:147:12: note: FIX-IT applied suggested code changes
    Vector deltaVector1{2, 4};
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:148:5: warning: variable 'deltaVector2' of type 'Vector' (aka 'AlbaMathVector<double, 2>') can be declared 'const' [misc-const-correctness]
    Vector deltaVector2{8, 16};
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:148:12: note: FIX-IT applied suggested code changes
    Vector deltaVector2{8, 16};
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:197:5: warning: variable 'triangle' of type 'Triangle' can be declared 'const' [misc-const-correctness]
    Triangle triangle(Point(0, 0), Point(0, 4), Point(4, 0));
    ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:197:14: note: FIX-IT applied suggested code changes
    Triangle triangle(Point(0, 0), Point(0, 4), Point(4, 0));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:202:5: warning: variable 'rectangle' of type 'Rectangle' can be declared 'const' [misc-const-correctness]
    Rectangle rectangle(Point(0, 5), Point(4, 0));
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:202:15: note: FIX-IT applied suggested code changes
    Rectangle rectangle(Point(0, 5), Point(4, 0));
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:207:5: warning: variable 'quadrilateral' of type 'Quadrilateral' can be declared 'const' [misc-const-correctness]
    Quadrilateral quadrilateral(Point(0, 0), Point(0, 2), Point(3, 2), Point(3, 0));
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:207:19: note: FIX-IT applied suggested code changes
    Quadrilateral quadrilateral(Point(0, 0), Point(0, 2), Point(3, 2), Point(3, 0));
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:212:5: warning: variable 'line1' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line1(Point(2, 4), Point(3, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:212:10: note: FIX-IT applied suggested code changes
    Line line1(Point(2, 4), Point(3, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:213:5: warning: variable 'line2' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line2(Point(4, 4), Point(3, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:213:10: note: FIX-IT applied suggested code changes
    Line line2(Point(4, 4), Point(3, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:214:5: warning: variable 'line3' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line3(Point(3, 3), Point(3, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:214:10: note: FIX-IT applied suggested code changes
    Line line3(Point(3, 3), Point(3, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:215:5: warning: variable 'line4' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line4(Point(0, 1), Point(1, 2));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:215:10: note: FIX-IT applied suggested code changes
    Line line4(Point(0, 1), Point(1, 2));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:218:5: warning: variable 'verifyIfNan' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point verifyIfNan(getIntersectionOfTwoLines(line2, line3));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:218:11: note: FIX-IT applied suggested code changes
    Point verifyIfNan(getIntersectionOfTwoLines(line2, line3));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:225:5: warning: variable 'line1' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line1(Point(4, 3), Point(3, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:225:10: note: FIX-IT applied suggested code changes
    Line line1(Point(4, 3), Point(3, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:226:5: warning: variable 'line2' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line2(Point(3, 4), Point(3, 3));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:226:10: note: FIX-IT applied suggested code changes
    Line line2(Point(3, 4), Point(3, 3));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:232:5: warning: variable 'commonSegment' of type 'LineSegment' (aka 'pair<AlbaXY<double>, AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    LineSegment commonSegment(Point(0, 0), Point(2, 2));
    ^
                const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:232:17: note: FIX-IT applied suggested code changes
    LineSegment commonSegment(Point(0, 0), Point(2, 2));
                ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:233:5: warning: variable 'crossSegment' of type 'LineSegment' (aka 'pair<AlbaXY<double>, AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    LineSegment crossSegment(Point(0, 2), Point(2, 0));
    ^
                const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:233:17: note: FIX-IT applied suggested code changes
    LineSegment crossSegment(Point(0, 2), Point(2, 0));
                ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:234:5: warning: variable 'parallelSegment' of type 'LineSegment' (aka 'pair<AlbaXY<double>, AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    LineSegment parallelSegment(Point(3, 3), Point(4, 4));
    ^
                const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:234:17: note: FIX-IT applied suggested code changes
    LineSegment parallelSegment(Point(3, 3), Point(4, 4));
                ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:235:5: warning: variable 'segmentWithPointInLine1' of type 'LineSegment' (aka 'pair<AlbaXY<double>, AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    LineSegment segmentWithPointInLine1(Point(2, 2), Point(3, 4));
    ^
                const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:235:17: note: FIX-IT applied suggested code changes
    LineSegment segmentWithPointInLine1(Point(2, 2), Point(3, 4));
                ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:236:5: warning: variable 'segmentWithPointInLine2' of type 'LineSegment' (aka 'pair<AlbaXY<double>, AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    LineSegment segmentWithPointInLine2(Point(3, 4), Point(2, 2));
    ^
                const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:236:17: note: FIX-IT applied suggested code changes
    LineSegment segmentWithPointInLine2(Point(3, 4), Point(2, 2));
                ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:239:5: warning: variable 'verifyIfNan' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point verifyIfNan(getIntersectionOfTwoLineSegment(commonSegment, parallelSegment));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:239:11: note: FIX-IT applied suggested code changes
    Point verifyIfNan(getIntersectionOfTwoLineSegment(commonSegment, parallelSegment));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:268:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola(1, -5, 4);
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:268:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola(1, -5, 4);
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:269:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(0, -0.25), Point(1, 0));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:269:10: note: FIX-IT applied suggested code changes
    Line line(Point(0, -0.25), Point(1, 0));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:279:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialY>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialY> parabola(1, -5, 4);
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:279:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialY> parabola(1, -5, 4);
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:280:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(Point(-0.25, 0), Point(0, 1));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:280:10: note: FIX-IT applied suggested code changes
    Line line(Point(-0.25, 0), Point(0, 1));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:326:5: warning: variable 'polarCoordinate1' of type 'PolarCoordinate' can be declared 'const' [misc-const-correctness]
    PolarCoordinate polarCoordinate1(convertToPolarCoordinate(Point(0, 5)));
    ^
                    const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:326:21: note: FIX-IT applied suggested code changes
    PolarCoordinate polarCoordinate1(convertToPolarCoordinate(Point(0, 5)));
                    ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:327:5: warning: variable 'polarCoordinate2' of type 'PolarCoordinate' can be declared 'const' [misc-const-correctness]
    PolarCoordinate polarCoordinate2(convertToPolarCoordinate(Point(-10, 0)));
    ^
                    const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:327:21: note: FIX-IT applied suggested code changes
    PolarCoordinate polarCoordinate2(convertToPolarCoordinate(Point(-10, 0)));
                    ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:328:5: warning: variable 'polarCoordinate3' of type 'PolarCoordinate' can be declared 'const' [misc-const-correctness]
    PolarCoordinate polarCoordinate3(convertToPolarCoordinate(Point(0, -15)));
    ^
                    const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:328:21: note: FIX-IT applied suggested code changes
    PolarCoordinate polarCoordinate3(convertToPolarCoordinate(Point(0, -15)));
                    ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:329:5: warning: variable 'polarCoordinate4' of type 'PolarCoordinate' can be declared 'const' [misc-const-correctness]
    PolarCoordinate polarCoordinate4(convertToPolarCoordinate(Point(20, 0)));
    ^
                    const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:329:21: note: FIX-IT applied suggested code changes
    PolarCoordinate polarCoordinate4(convertToPolarCoordinate(Point(20, 0)));
                    ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:342:5: warning: variable 'circle' of type 'Circle' can be declared 'const' [misc-const-correctness]
    Circle circle(Point(1, 1), 1);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:342:12: note: FIX-IT applied suggested code changes
    Circle circle(Point(1, 1), 1);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:343:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola(1, 1, 1);
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:343:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola(1, 1, 1);
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:344:5: warning: variable 'ellipse' of type 'Ellipse' can be declared 'const' [misc-const-correctness]
    Ellipse ellipse(Point(1, 1), 2, 3);
    ^
            const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:344:13: note: FIX-IT applied suggested code changes
    Ellipse ellipse(Point(1, 1), 2, 3);
            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:345:5: warning: variable 'hyperbola' of type 'Hyperbola' can be declared 'const' [misc-const-correctness]
    Hyperbola hyperbola(Point(1, 1), 2, 3);
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:345:15: note: FIX-IT applied suggested code changes
    Hyperbola hyperbola(Point(1, 1), 2, 3);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:394:5: warning: variable 's1' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point s1(0, 0);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:394:11: note: FIX-IT applied suggested code changes
    Point s1(0, 0);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:395:5: warning: variable 's2' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point s2(2, 2);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:395:11: note: FIX-IT applied suggested code changes
    Point s2(2, 2);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:449:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola{1, 2, 3};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:449:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola{1, 2, 3};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:450:5: warning: variable 'parabolaPoints' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points parabolaPoints(parabola.getPoints(-2, 2, 1));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:450:12: note: FIX-IT applied suggested code changes
    Points parabolaPoints(parabola.getPoints(-2, 2, 1));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:468:5: warning: variable 'inputPoints' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points inputPoints{{-7, 8}, {-4, 6},  {2, 6},  {6, 4},   {8, 6},   {7, -2}, {4, -6},  {8, -7}, {0, 0},
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:468:12: note: FIX-IT applied suggested code changes
    Points inputPoints{{-7, 8}, {-4, 6},  {2, 6},  {6, 4},   {8, 6},   {7, -2}, {4, -6},  {8, -7}, {0, 0},
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:470:5: warning: variable 'actualPoints' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points actualPoints(getConvexHullPointsUsingJarvisAlgorithm(inputPoints));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:470:12: note: FIX-IT applied suggested code changes
    Points actualPoints(getConvexHullPointsUsingJarvisAlgorithm(inputPoints));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:472:5: warning: variable 'expectedPoints' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points expectedPoints{Point(-10, 3), Point(-9, -5), Point(6, -10), Point(8, -7),
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:472:12: note: FIX-IT applied suggested code changes
    Points expectedPoints{Point(-10, 3), Point(-9, -5), Point(6, -10), Point(8, -7),
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:478:5: warning: variable 'inputPoints' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points inputPoints{{-7, 8}, {-4, 6},  {2, 6},  {6, 4},   {8, 6},   {7, -2}, {4, -6},  {8, -7}, {0, 0},
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:478:12: note: FIX-IT applied suggested code changes
    Points inputPoints{{-7, 8}, {-4, 6},  {2, 6},  {6, 4},   {8, 6},   {7, -2}, {4, -6},  {8, -7}, {0, 0},
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:480:5: warning: variable 'actualPoints' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points actualPoints(getConvexHullPointsUsingGrahamScan(inputPoints));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:480:12: note: FIX-IT applied suggested code changes
    Points actualPoints(getConvexHullPointsUsingGrahamScan(inputPoints));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:482:5: warning: variable 'expectedPoints' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points expectedPoints{Point(-9, -5), Point(-10, 3), Point(-10, 4), Point(-7, 8),
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:482:12: note: FIX-IT applied suggested code changes
    Points expectedPoints{Point(-9, -5), Point(-10, 3), Point(-10, 4), Point(-7, 8),
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:488:5: warning: variable 'lineInput' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line lineInput(Point(0, 0), Point(-1, 1));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:488:10: note: FIX-IT applied suggested code changes
    Line lineInput(Point(0, 0), Point(-1, 1));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:489:5: warning: variable 'expectedLine' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line expectedLine(getLineWithSameSlope(lineInput, Point(2, 2)));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:489:10: note: FIX-IT applied suggested code changes
    Line expectedLine(getLineWithSameSlope(lineInput, Point(2, 2)));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:500:5: warning: variable 'lineInput' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line lineInput(Point(0, 0), Point(1, 1));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:500:10: note: FIX-IT applied suggested code changes
    Line lineInput(Point(0, 0), Point(1, 1));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:501:5: warning: variable 'expectedLine' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line expectedLine(getLineWithPerpendicularSlope(lineInput, Point(2, 2)));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:501:10: note: FIX-IT applied suggested code changes
    Line expectedLine(getLineWithPerpendicularSlope(lineInput, Point(2, 2)));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:512:5: warning: variable 'circle' of type 'Circle' can be declared 'const' [misc-const-correctness]
    Circle circle(Point(1, 2), 3);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:512:12: note: FIX-IT applied suggested code changes
    Circle circle(Point(1, 2), 3);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:513:5: warning: variable 'expectedLine1' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line expectedLine1(getTangentLineAt(circle, Point(1, 5)));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:513:10: note: FIX-IT applied suggested code changes
    Line expectedLine1(getTangentLineAt(circle, Point(1, 5)));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:514:5: warning: variable 'expectedLine2' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line expectedLine2(getTangentLineAt(circle, Point(4, 2)));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:514:10: note: FIX-IT applied suggested code changes
    Line expectedLine2(getTangentLineAt(circle, Point(4, 2)));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:515:5: warning: variable 'expectedLine3' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line expectedLine3(getTangentLineAt(circle, Point(2.5, 3.5)));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:515:10: note: FIX-IT applied suggested code changes
    Line expectedLine3(getTangentLineAt(circle, Point(2.5, 3.5)));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:533:5: warning: variable 'parabola' of type 'Parabola<ParabolaOrientation::PolynomialX>' can be declared 'const' [misc-const-correctness]
    Parabola<ParabolaOrientation::PolynomialX> parabola{1, 2, 3};
    ^
                                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:533:48: note: FIX-IT applied suggested code changes
    Parabola<ParabolaOrientation::PolynomialX> parabola{1, 2, 3};
                                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:534:5: warning: variable 'expectedLine1' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line expectedLine1(getPolynomialTangentLineAt(parabola, -1));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:534:10: note: FIX-IT applied suggested code changes
    Line expectedLine1(getPolynomialTangentLineAt(parabola, -1));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:535:5: warning: variable 'expectedLine2' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line expectedLine2(getPolynomialTangentLineAt(parabola, 0));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:535:10: note: FIX-IT applied suggested code changes
    Line expectedLine2(getPolynomialTangentLineAt(parabola, 0));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:536:5: warning: variable 'expectedLine3' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line expectedLine3(getPolynomialTangentLineAt(parabola, 1));
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:536:10: note: FIX-IT applied suggested code changes
    Line expectedLine3(getPolynomialTangentLineAt(parabola, 1));
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:556:5: warning: variable 'minimumXAndY' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point minimumXAndY(-1, -1);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:556:11: note: FIX-IT applied suggested code changes
    Point minimumXAndY(-1, -1);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:557:5: warning: variable 'maximumXAndY' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point maximumXAndY(1, 1);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\tst\GeometryTests\TwoDimensions\Utilities\TwoDimensionsUtilities_unit.cpp:557:11: note: FIX-IT applied suggested code changes
    Point maximumXAndY(1, 1);
          ^
[89/89] Linking CXX executable AprgGeometry.exe
[35m2023-09-11T05:34:28[0m | [33mBuildAndRun.sh:218[0m | The script [BuildAndRun.sh] for [buildOnOneCore] is finished.
DONE!
