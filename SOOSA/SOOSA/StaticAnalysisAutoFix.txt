StaticAnalysisJobIdentifier: [011]
2023-09-11T19:13:03
[35m2023-09-11T19:14:12[0m | [33mBuildAndRun.sh:28[0m | The current path is [/d/a/aprg/aprg/SOOSA/SOOSA].
[35m2023-09-11T19:14:12[0m | [33mBuildAndRun.sh:29[0m | The scriptPath is [/d/a/aprg/aprg/AllCommonScripts/BuildAndRunScripts/BuildAndRun.sh].
[35m2023-09-11T19:14:12[0m | [33mBuildAndRun.sh:30[0m | The scriptOption is [buildOnOneCore].
[35m2023-09-11T19:14:12[0m | [33mBuildAndRun.sh:31[0m | The buildDirectoryName is [StaticAnalyzersBuild].
[35m2023-09-11T19:14:12[0m | [33mBuildAndRun.sh:32[0m | The argument1 is [Debug] and argument2 is [].
[35m2023-09-11T19:14:12[0m | [33mBuildAndRun.sh:33[0m | The immediateDirectoryName is [SOOSA].
[35m2023-09-11T19:14:12[0m | [33mBuildAndRun.sh:84[0m | The buildType is [Debug].
[35m2023-09-11T19:14:12[0m | [33mBuildAndRun.sh:85[0m | The numberOfCores is [2].
[35m2023-09-11T19:14:12[0m | [33mBuildAndRun.sh:68[0m | The build path is [/d/a/aprg/aprg/SOOSA/StaticAnalyzersBuild] and the output of [ls -la --color=auto]:
total 217
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 19:14 .
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 19:13 ..
-rw-r--r-- 1 runneradmin 197121  17914 Sep 11 19:14 CMakeCache.txt
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 19:14 CMakeFiles
-rw-r--r-- 1 runneradmin 197121    472 Sep 11 19:14 CTestTestfile.cmake
-rw-r--r-- 1 runneradmin 197121 181703 Sep 11 19:14 build.ninja
-rw-r--r-- 1 runneradmin 197121   2211 Sep 11 19:14 cmake_install.cmake
[1/83] Building CXX object CMakeFiles/gtest.dir/D_/a/aprg/aprg/gtest/gtest/googletest/src/gtest-all.cc.obj
In file included from D:/a/aprg/aprg/gtest/gtest/googletest/src/gtest-all.cc:49:
D:/a/aprg/aprg/gtest/gtest/googletest\src/gtest.cc:2604:3: warning: extension used [-Wlanguage-extension-token]
  __try {
  ^
1 warning generated.
[2/83] Building CXX object CMakeFiles/gtest.dir/D_/a/aprg/aprg/gtest/gtest/googletest/src/gtest_main.cc.obj
[3/83] Linking CXX static library gtest.lib
[4/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Container/AlbaContainerHelper.cpp.obj
[5/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/File/AlbaFileReader.cpp.obj
[6/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Angle/AlbaAngle.cpp.obj
[7/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/ComplexNumberHelpers.cpp.obj
[8/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/ComputationHelpers.cpp.obj
[9/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/FactorAndMulitplesHelpers.cpp.obj
[10/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/PowerHelpers.cpp.obj
[11/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/PrecisionHelpers.cpp.obj
[12/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/StatisticsHelpers.cpp.obj
[13/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/AlbaComplexNumber.cpp.obj
[14/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/AlbaNumber.cpp.obj
[15/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberInterval.cpp.obj
[16/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberIntervalEndpoint.cpp.obj
[17/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberIntervalHelpers.cpp.obj
[18/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Ratio/AlbaRatio.cpp.obj
[19/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Memory/AlbaMemoryBuffer.cpp.obj
[20/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/PathHandler/AlbaPathHandler.cpp.obj
[21/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/PathHandler/AlbaWebPathHandler.cpp.obj
[22/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Print/AlbaPrintFunctions.cpp.obj
[23/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/AlbaOldRandomizer.cpp.obj
[24/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/EntropySources/AlbaCombinedEntropySource.cpp.obj
[25/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/EntropySources/AlbaEntropySourceBasedOnTime.cpp.obj
[26/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamBitReader.cpp.obj
[27/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamBitWriter.cpp.obj
[28/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamParameterReader.cpp.obj
[29/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamParameterWriter.cpp.obj
[30/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/String/AlbaStringHelper.cpp.obj
[31/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaDateTime.cpp.obj
[32/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaDateTimeHelper.cpp.obj
[33/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimeHelper.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\Time\AlbaLocalTimeHelper.cpp:23:34: warning: 'localtime' is deprecated: This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    struct tm const localTime = *localtime(&currentTimeT);
                                 ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h:524:9: note: 'localtime' has been explicitly marked deprecated here
        _CRT_INSECURE_DEPRECATE(localtime_s)
        ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimeHelper.cpp:23:34: warning: 'localtime' is deprecated: This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    struct tm const localTime = *localtime(&currentTimeT);
                                 ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h:524:9: note: 'localtime' has been explicitly marked deprecated here
        _CRT_INSECURE_DEPRECATE(localtime_s)
        ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
1 warning generated.
[34/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimer.cpp.obj
[35/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/User/AlbaUserInterface.cpp.obj
[36/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/User/DisplayTable.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\User\DisplayTable.cpp:205:67: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
int DisplayTablePrinter::getVerticalBorderLength() const { return m_verticalBorder.length(); }
                                                                  ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\User\DisplayTable.cpp:208:12: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return ((m_maxLengthAtColumn.size() + 1) * getVerticalBorderLength()) + m_totalColumnLength;
           ^
[37/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Utility/AlbaScopeGuard.cpp.obj
[38/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities/CommonTestsUtilities/File/BaseFileReaderTest.cpp.obj
[39/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities/CommonTestsUtilities/File/FileUtilities.cpp.obj
[40/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/PathHandler/AlbaWindowsPathHandler.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:28:24: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const length = fullPath.length();
                       ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:30:45: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        int const indexWithSlashCharacter = fullPath.find_first_of(m_slashCharacterString, index);
                                            ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:270:23: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const index = m_directory.find_first_of(m_slashCharacterString + ":");
                      ^
[41/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Time/AlbaWindowsTimeHelper.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\Time\AlbaWindowsTimeHelper.cpp:6:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return AlbaDateTime(
           ^
[42/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Time/AlbaWindowsTimer.cpp.obj
[43/83] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Windows/AlbaWindowsHelper.cpp.obj
[44/83] Linking CXX static library APRG_COMMON.lib
[45/83] Building CXX object CMakeFiles/APRG_STATISTICS.dir/D_/a/aprg/aprg/AprgStatistics/AprgStatistics/src/Statistics/FrequencyStatistics.cpp.obj
[46/83] Building CXX object CMakeFiles/APRG_STATISTICS.dir/D_/a/aprg/aprg/AprgStatistics/AprgStatistics/src/Statistics/KMeansClustering.cpp.obj
[47/83] Building CXX object CMakeFiles/APRG_STATISTICS.dir/D_/a/aprg/aprg/AprgStatistics/AprgStatistics/src/Statistics/OneDimensionsStatistics.cpp.obj
[48/83] Building CXX object CMakeFiles/APRG_STATISTICS.dir/D_/a/aprg/aprg/AprgStatistics/AprgStatistics/src/Statistics/TwoDimensionsStatistics.cpp.obj
[49/83] Linking CXX static library APRG_STATISTICS.lib
[50/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/Ellipsoid.cpp.obj
[51/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/EllipticCone.cpp.obj
[52/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/EllipticHyperboloid.cpp.obj
[53/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/EllipticParaboloid.cpp.obj
[54/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/HyperbolicParaboloid.cpp.obj
[55/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/Line.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Line.cpp:20:9: warning: narrowing conversion from '_Iter_diff_t<_Vector_const_iterator<_Vector_val<_Simple_types<double>>>>' (aka 'long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        std::count_if(deltas.cbegin(), deltas.cend(), [&](double const delta) { return delta < 0; });
        ^
[56/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/Plane.cpp.obj
[57/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/Sphere.cpp.obj
[58/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Utilities/ThreeDimensionsUtilities.cpp.obj
[59/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Circle.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:106:5: warning: Variable 'y' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
    for (double y = 0; y <= m_radius; y += interval) {
    ^                  ~              ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:106:5: note: Variable 'y' with floating point type 'double' should not be used as a loop counter
    for (double y = 0; y <= m_radius; y += interval) {
    ^                  ~              ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:109:13: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
            for (double x = 0; x <= xAtTheEdgeOfCircleOptional.value(); x += interval) {
            ^                  ~                                        ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:109:13: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
            for (double x = 0; x <= xAtTheEdgeOfCircleOptional.value(); x += interval) {
            ^                  ~                                        ~
[60/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Ellipse.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:188:5: warning: Variable 'y' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
    for (double y = 0; y <= m_bValue; y += interval) {
    ^                  ~              ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:188:5: note: Variable 'y' with floating point type 'double' should not be used as a loop counter
    for (double y = 0; y <= m_bValue; y += interval) {
    ^                  ~              ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:190:9: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
        for (double x = 0; x <= xAtTheEdgeOfEllipse; x += interval) {
        ^                  ~                         ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:190:9: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
        for (double x = 0; x <= xAtTheEdgeOfEllipse; x += interval) {
        ^                  ~                         ~
[61/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Hyperbola.cpp.obj
[62/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Limacon.cpp.obj
[63/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Line.cpp.obj
[64/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Polygon.cpp.obj
[65/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Quadrilateral.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:31:27: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const groupSize = groupOfPointsBasedOnYValue.size();
                          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:65:29: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const points1Size = points1.size();
                            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:66:29: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const points2Size = points2.size();
                            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:105:29: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const points1Size = points1.size();
                            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:106:29: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const points2Size = points2.size();
                            ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:107:29: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const points3Size = points3.size();
                            ^
[66/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Rectangle.cpp.obj
[67/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Triangle.cpp.obj
[68/83] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Utilities/TwoDimensionsUtilities.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:579:5: warning: Variable 'y' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
    for (double y = 0; y < outerRadius; y += interval) {
    ^                  ~                ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:579:5: note: Variable 'y' with floating point type 'double' should not be used as a loop counter
    for (double y = 0; y < outerRadius; y += interval) {
    ^                  ~                ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:583:13: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
            for (double x = xAtInnerCircleOptional.value(); x < xAtOuterCircleOptional.value(); x += interval) {
            ^                                               ~                                   ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:583:13: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
            for (double x = xAtInnerCircleOptional.value(); x < xAtOuterCircleOptional.value(); x += interval) {
            ^                                               ~                                   ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:742:24: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        int endIndex = (startIndex + 1) % points.size();
                       ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:761:31: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const auxiliarySize = auxiliary.size();
                              ^
[69/83] Linking CXX static library APRG_GEOMETRY.lib
[70/83] Building CXX object CMakeFiles/APRG_BITMAP.dir/D_/a/aprg/aprg/AprgBitmap/AprgBitmap/src/Bitmap/Bitmap.cpp.obj
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\Bitmap.cpp:95:38: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long long') to signed type 'off_type' (aka 'long long') is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                    streamFile.seekg(fileOffsetForStart, std::fstream::beg);
                                     ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\Bitmap.cpp:124:45: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    adjustToTargetLength(left, right, side, m_configuration.getBitmapWidth());
                                            ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\Bitmap.cpp:134:53: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    adjustToTargetLength(top, bottom, ySizeInBytes, m_configuration.getBitmapHeight());
                                                    ^
[71/83] Building CXX object CMakeFiles/APRG_BITMAP.dir/D_/a/aprg/aprg/AprgBitmap/AprgBitmap/src/Bitmap/BitmapConfiguration.cpp.obj
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:26:61: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const maxX = m_bitmapWidth == 0 ? 0 : m_bitmapWidth - 1;
                                                            ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:27:63: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const maxY = m_bitmapHeight == 0 ? 0 : m_bitmapHeight - 1;
                                                              ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:60:49: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return getCoordinateWithinRange(coordinate, m_bitmapWidth);
                                                ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:64:49: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return getCoordinateWithinRange(coordinate, m_bitmapHeight);
                                                ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:68:12: warning: narrowing conversion from 'std::size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return (pixels * m_numberOfBitsPerPixel) / AlbaBitConstants::BYTE_SIZE_IN_BITS;
           ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:72:12: warning: narrowing conversion from 'std::size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return ((pixels * m_numberOfBitsPerPixel) + AlbaBitConstants::BYTE_SIZE_IN_BITS - 1) /
           ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:77:12: warning: narrowing conversion from 'std::size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return (bytes * AlbaBitConstants::BYTE_SIZE_IN_BITS) / m_numberOfBitsPerPixel;
           ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:97:22: warning: narrowing conversion from 'std::size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    double const b = (1 + getMinimumNumberOfBytesForOnePixel()) * AlbaBitConstants::BYTE_SIZE_IN_BITS;
                     ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:259:69: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    m_numberOfBytesForDataInRow = convertPixelsToBytesRoundedToCeil(m_bitmapWidth);
                                                                    ^
[72/83] Building CXX object CMakeFiles/APRG_BITMAP.dir/D_/a/aprg/aprg/AprgBitmap/AprgBitmap/src/Bitmap/BitmapSnippet.cpp.obj
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapSnippet.cpp:45:54: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
int BitmapSnippet::getPixelDataSize() const { return m_pixelData.getSize(); }
                                                     ^
[73/83] Linking CXX static library APRG_BITMAP.lib
[74/83] Building CXX object CMakeFiles/SOOSA.dir/src/InputConfiguration.cpp.obj
D:\a\aprg\aprg\SOOSA\SOOSA\src\InputConfiguration.cpp:27:61: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
int InputConfiguration::getNumberOfColumns() const { return m_formDetails.columnToNumberOfQuestionsMap.size(); }
                                                            ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\InputConfiguration.cpp:28:63: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
int InputConfiguration::getNumberOfQuestions() const { return m_formDetails.questions.size(); }
                                                              ^
[75/83] Building CXX object CMakeFiles/SOOSA.dir/src/SOOSA.cpp.obj
FAILED: CMakeFiles/SOOSA.dir/src/SOOSA.cpp.obj 
"C:\Program Files\CMake\bin\cmake.exe" -E __run_co_compile --tidy="C:/Program Files/LLVM/bin/clang-tidy.exe;--fix;--header-filter=D:\/a\/aprg\/aprg\/SOOSA\/SOOSA.*;--config-file=D:/a/aprg/aprg/Clang/ClangTidyFiles/autofix.clang-tidy;--extra-arg-before=--driver-mode=g++" --source=D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp -- C:\PROGRA~1\LLVM\bin\CLANG_~1.EXE -DAPRG_CODE_REVISION=\"7b55c36289e288fbaf988784373a9b18fcc2e268\" -DAPRG_DEBUG -DAPRG_DIR=\"D:/a/aprg/aprg\" -DAPRG_TEST_MODE_ON -DOS_WINDOWS -ID:/a/aprg/aprg/AprgCommon/AprgCommon/src -ID:/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows -ID:/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities -ID:/a/aprg/aprg/AprgStatistics/AprgStatistics/src -ID:/a/aprg/aprg/AprgGeometry/AprgGeometry/src -ID:/a/aprg/aprg/AprgBitmap/AprgBitmap/src -ID:/a/aprg/aprg/SOOSA/SOOSA/src -ID:/a/aprg/aprg/SOOSA/SOOSA/tst -ID:/a/aprg/aprg/gtest/gtest/googletest/include -ID:/a/aprg/aprg/gtest/gtest/googletest -Wall -Wextra -pedantic -fcolor-diagnostics -std=c++20  -O0 -g -Xclang -gcodeview -D_DEBUG -D_DLL -D_MT -Xclang --dependent-lib=msvcrtd -MD -MT CMakeFiles/SOOSA.dir/src/SOOSA.cpp.obj -MF CMakeFiles\SOOSA.dir\src\SOOSA.cpp.obj.d -o CMakeFiles/SOOSA.dir/src/SOOSA.cpp.obj -c D:/a/aprg/aprg/SOOSA/SOOSA/src/SOOSA.cpp
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:87:5: warning: variable 'instance' of type 'Status' can be declared 'const' [misc-const-correctness]
    static Status instance;
    ^
                  const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:87:19: note: FIX-IT applied suggested code changes
    static Status instance;
                  ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:111:48: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
int SOOSA::getNumberOfAnswers() const { return m_questionToAnswersMap.size(); }
                                               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:131:5: warning: variable 'pathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler pathHandler(m_inputConfiguration.getPath());
    ^
                         const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:131:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler pathHandler(m_inputConfiguration.getPath());
                         ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:149:37: warning: unnecessary temporary object created while calling emplace_back [hicpp-use-emplace,modernize-use-emplace]
            barHeights.emplace_back(OneDimensionSample{getHeight(barPoints)});
                                    ^~~~~~~~~~~~~~~~~~~                    ~
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:149:37: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:149:76: note: FIX-IT applied suggested code changes
            barHeights.emplace_back(OneDimensionSample{getHeight(barPoints)});
                                                                           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:160:5: warning: variable 'removalSize' of type 'int' can be declared 'const' [misc-const-correctness]
    int removalSize = ceil(size * removalRatio);
    ^
        const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:160:9: note: FIX-IT applied suggested code changes
    int removalSize = ceil(size * removalRatio);
        ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:165:5: warning: variable 'emptyLine' of type 'Line' (aka 'alba::TwoDimensions::Line') can be declared 'const' [misc-const-correctness]
    Line emptyLine;
    ^
         const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:165:10: note: FIX-IT applied suggested code changes
    Line emptyLine;
         ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:220:5: warning: variable 'groupOfBarPoints' of type 'GroupOfTwoDimensionSamples' (aka 'vector<vector<DataSample<2>>>') can be declared 'const' [misc-const-correctness]
    GroupOfTwoDimensionSamples groupOfBarPoints(
    ^
                               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:220:32: note: FIX-IT applied suggested code changes
    GroupOfTwoDimensionSamples groupOfBarPoints(
                               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:230:17: warning: unnecessary temporary object created while calling emplace_back [hicpp-use-emplace,modernize-use-emplace]
                QuestionBarCoordinate(convertToPoint(barPoints.front()), convertToPoint(barPoints.back())));
                ^~~~~~~~~~~~~~~~~~~~~~                                                                   ~
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:230:17: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:230:106: note: FIX-IT applied suggested code changes
                QuestionBarCoordinate(convertToPoint(barPoints.front()), convertToPoint(barPoints.back())));
                                                                                                         ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:301:9: warning: variable 'numbers' of type 'int' can be declared 'const' [misc-const-correctness]
        int numbers = getIntegerAfterRoundingADoubleValue<int>(numerator / denominator * 1000);
        ^
            const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:301:13: note: FIX-IT applied suggested code changes
        int numbers = getIntegerAfterRoundingADoubleValue<int>(numerator / denominator * 1000);
            ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:315:5: warning: variable 'leftPoint' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point leftPoint = getMidpoint(leftCoordinate.first, leftCoordinate.second);
    ^
          const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:315:11: note: FIX-IT applied suggested code changes
    Point leftPoint = getMidpoint(leftCoordinate.first, leftCoordinate.second);
          ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:316:5: warning: variable 'rightPoint' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point rightPoint = getMidpoint(rightCoordinate.first, rightCoordinate.second);
    ^
          const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:316:11: note: FIX-IT applied suggested code changes
    Point rightPoint = getMidpoint(rightCoordinate.first, rightCoordinate.second);
          ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:317:5: warning: variable 'radiusForChoiceChecking' of type 'double' can be declared 'const' [misc-const-correctness]
    double radiusForChoiceChecking = getRadiusForChoiceChecking(leftCoordinate, rightCoordinate);
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:317:12: note: FIX-IT applied suggested code changes
    double radiusForChoiceChecking = getRadiusForChoiceChecking(leftCoordinate, rightCoordinate);
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:318:5: warning: variable 'numberOfChoices' of type 'int' can be declared 'const' [misc-const-correctness]
    int numberOfChoices = m_soosaConfiguration.getNumberOfChoices();
    ^
        const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:318:9: note: FIX-IT applied suggested code changes
    int numberOfChoices = m_soosaConfiguration.getNumberOfChoices();
        ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:323:9: warning: variable 'shadePercentage' of type 'double' can be declared 'const' [misc-const-correctness]
        double shadePercentage =
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:323:16: note: FIX-IT applied suggested code changes
        double shadePercentage =
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:325:46: warning: unnecessary temporary object created while calling emplace_back [hicpp-use-emplace,modernize-use-emplace]
        shadePercentagesSamples.emplace_back(OneDimensionSample{shadePercentage});
                                             ^~~~~~~~~~~~~~~~~~~               ~
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:325:46: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:325:80: note: FIX-IT applied suggested code changes
        shadePercentagesSamples.emplace_back(OneDimensionSample{shadePercentage});
                                                                               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:330:5: warning: variable 'sd' of type 'double' can be declared 'const' [misc-const-correctness]
    double sd = shadePercentagesStatistics.getSampleStandardDeviation().getValueAt(0);
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:330:12: note: FIX-IT applied suggested code changes
    double sd = shadePercentagesStatistics.getSampleStandardDeviation().getValueAt(0);
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:331:5: warning: variable 'mean' of type 'double' can be declared 'const' [misc-const-correctness]
    double mean = shadePercentagesStatistics.getMean().getValueAt(0);
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:331:12: note: FIX-IT applied suggested code changes
    double mean = shadePercentagesStatistics.getMean().getValueAt(0);
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:332:5: warning: variable 'relativeLimit' of type 'double' can be declared 'const' [misc-const-correctness]
    double relativeLimit = mean + sd / 2;  // must be an outlier and positive deviation
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:332:12: note: FIX-IT applied suggested code changes
    double relativeLimit = mean + sd / 2;  // must be an outlier and positive deviation
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:334:9: warning: variable 'shadePercentage' of type 'double' can be declared 'const' [misc-const-correctness]
        double shadePercentage = shadePercentageAndChoicePair.first;
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:334:16: note: FIX-IT applied suggested code changes
        double shadePercentage = shadePercentageAndChoicePair.first;
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:347:5: warning: variable 'retainSize' of type 'int' can be declared 'const' [misc-const-correctness]
    int retainSize = getRetainSizeInLineModel(
    ^
        const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:347:9: note: FIX-IT applied suggested code changes
    int retainSize = getRetainSizeInLineModel(
        ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:348:9: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        squareErrorToSampleMultimap.size(), m_soosaConfiguration.getRemovalRatioForLineModel());
        ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:360:5: warning: variable 'rangeForX' of type 'RangeOfInts' (aka 'AlbaValueRange<int>') can be declared 'const' [misc-const-correctness]
    RangeOfInts rangeForX(snippet.getTopLeftCorner().getX(), snippet.getBottomRightCorner().getX(), 1);
    ^
                const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:360:17: note: FIX-IT applied suggested code changes
    RangeOfInts rangeForX(snippet.getTopLeftCorner().getX(), snippet.getBottomRightCorner().getX(), 1);
                ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:366:5: warning: variable 'rangeForX' of type 'RangeOfInts' (aka 'AlbaValueRange<int>') can be declared 'const' [misc-const-correctness]
    RangeOfInts rangeForX(snippet.getBottomRightCorner().getX(), snippet.getTopLeftCorner().getX(), -1);
    ^
                const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:366:17: note: FIX-IT applied suggested code changes
    RangeOfInts rangeForX(snippet.getBottomRightCorner().getX(), snippet.getTopLeftCorner().getX(), -1);
                ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:372:5: warning: variable 'rangeForY' of type 'RangeOfInts' (aka 'AlbaValueRange<int>') can be declared 'const' [misc-const-correctness]
    RangeOfInts rangeForY(snippet.getTopLeftCorner().getY(), snippet.getBottomRightCorner().getY(), 1);
    ^
                const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:372:17: note: FIX-IT applied suggested code changes
    RangeOfInts rangeForY(snippet.getTopLeftCorner().getY(), snippet.getBottomRightCorner().getY(), 1);
                ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:378:5: warning: variable 'rangeForY' of type 'RangeOfInts' (aka 'AlbaValueRange<int>') can be declared 'const' [misc-const-correctness]
    RangeOfInts rangeForY(snippet.getBottomRightCorner().getY(), snippet.getTopLeftCorner().getY(), -1);
    ^
                const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:378:17: note: FIX-IT applied suggested code changes
    RangeOfInts rangeForY(snippet.getBottomRightCorner().getY(), snippet.getTopLeftCorner().getY(), -1);
                ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:384:5: warning: variable 'rangeForX' of type 'RangeOfInts' (aka 'AlbaValueRange<int>') can be declared 'const' [misc-const-correctness]
    RangeOfInts rangeForX(snippet.getTopLeftCorner().getX(), snippet.getBottomRightCorner().getX(), 1);
    ^
                const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:384:17: note: FIX-IT applied suggested code changes
    RangeOfInts rangeForX(snippet.getTopLeftCorner().getX(), snippet.getBottomRightCorner().getX(), 1);
                ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:389:5: warning: variable 'rangeForX' of type 'RangeOfInts' (aka 'AlbaValueRange<int>') can be declared 'const' [misc-const-correctness]
    RangeOfInts rangeForX(snippet.getBottomRightCorner().getX(), snippet.getTopLeftCorner().getX(), -1);
    ^
                const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:389:17: note: FIX-IT applied suggested code changes
    RangeOfInts rangeForX(snippet.getBottomRightCorner().getX(), snippet.getTopLeftCorner().getX(), -1);
                ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:395:5: warning: variable 'conditionForX' of type 'RangeOfInts::TerminationCondition' (aka 'function<bool (int, int)>') can be declared 'const' [misc-const-correctness]
    RangeOfInts::TerminationCondition conditionForX(rangeForX.getTerminationCondition());
    ^
                                      const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:395:39: note: FIX-IT applied suggested code changes
    RangeOfInts::TerminationCondition conditionForX(rangeForX.getTerminationCondition());
                                      ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:399:9: warning: variable 'xInLine' of type 'double' can be declared 'const' [misc-const-correctness]
        double xInLine = round(startingLine.calculateXFromY(y));
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:399:16: note: FIX-IT applied suggested code changes
        double xInLine = round(startingLine.calculateXFromY(y));
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:409:21: warning: unnecessary temporary object created while calling emplace_back [hicpp-use-emplace,modernize-use-emplace]
                    TwoDimensionSample{consecutiveBlackPixels.getMidpointValue(), static_cast<double>(y)});
                    ^~~~~~~~~~~~~~~~~~~                                                                 ~
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:409:21: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:409:105: note: FIX-IT applied suggested code changes
                    TwoDimensionSample{consecutiveBlackPixels.getMidpointValue(), static_cast<double>(y)});
                                                                                                        ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:458:5: warning: variable 'lineModel' of type 'LineModel' can be declared 'const' [misc-const-correctness]
    LineModel lineModel = calculateLineModelUsingLeastSquares(samples);
    ^
              const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:458:15: note: FIX-IT applied suggested code changes
    LineModel lineModel = calculateLineModelUsingLeastSquares(samples);
              ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:465:5: warning: variable 'choiceIndexRatio' of type 'double' can be declared 'const' [misc-const-correctness]
    double choiceIndexRatio =
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:465:12: note: FIX-IT applied suggested code changes
    double choiceIndexRatio =
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:467:5: warning: variable 'differenceFromLeftToRightInX' of type 'double' can be declared 'const' [misc-const-correctness]
    double differenceFromLeftToRightInX = rightPoint.getX() - leftPoint.getX();
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:467:12: note: FIX-IT applied suggested code changes
    double differenceFromLeftToRightInX = rightPoint.getX() - leftPoint.getX();
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:468:5: warning: variable 'differenceFromLeftToRightInY' of type 'double' can be declared 'const' [misc-const-correctness]
    double differenceFromLeftToRightInY = rightPoint.getY() - leftPoint.getY();
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:468:12: note: FIX-IT applied suggested code changes
    double differenceFromLeftToRightInY = rightPoint.getY() - leftPoint.getY();
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:469:5: warning: variable 'originalCenter' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point originalCenter(
    ^
          const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:469:11: note: FIX-IT applied suggested code changes
    Point originalCenter(
          ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:477:9: warning: variable 'circle' of type 'Circle' can be declared 'const' [misc-const-correctness]
        Circle circle(result, radius);
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:477:16: note: FIX-IT applied suggested code changes
        Circle circle(result, radius);
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:487:31: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        numberOfBlackPoints = blackPointSamples.size();
                              ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:495:5: warning: variable 'perpendicularLine' of type 'Line' (aka 'alba::TwoDimensions::Line') can be declared 'const' [misc-const-correctness]
    Line perpendicularLine(getLineWithPerpendicularSlope(line, pointInLine));
    ^
         const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:495:10: note: FIX-IT applied suggested code changes
    Line perpendicularLine(getLineWithPerpendicularSlope(line, pointInLine));
         ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:496:5: warning: variable 'maxLineAndBarWidth' of type 'int' can be declared 'const' [misc-const-correctness]
    int maxLineAndBarWidth = getMaximumLineAndBarWidth(snippet);
    ^
        const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:496:9: note: FIX-IT applied suggested code changes
    int maxLineAndBarWidth = getMaximumLineAndBarWidth(snippet);
        ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:498:9: warning: variable 'lowerDeviatedInX' of type 'double' can be declared 'const' [misc-const-correctness]
        double lowerDeviatedInX = pointInLine.getX() - deviation;
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:498:16: note: FIX-IT applied suggested code changes
        double lowerDeviatedInX = pointInLine.getX() - deviation;
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:499:9: warning: variable 'lowerDeviatedPoint' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point lowerDeviatedPoint(lowerDeviatedInX, perpendicularLine.calculateYFromX(lowerDeviatedInX));
        ^
              const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:499:15: note: FIX-IT applied suggested code changes
        Point lowerDeviatedPoint(lowerDeviatedInX, perpendicularLine.calculateYFromX(lowerDeviatedInX));
              ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:504:9: warning: variable 'higherDeviatedInX' of type 'double' can be declared 'const' [misc-const-correctness]
        double higherDeviatedInX = pointInLine.getX() + deviation;
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:504:16: note: FIX-IT applied suggested code changes
        double higherDeviatedInX = pointInLine.getX() + deviation;
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:505:9: warning: variable 'higherDeviatedPoint' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point higherDeviatedPoint(higherDeviatedInX, perpendicularLine.calculateYFromX(higherDeviatedInX));
        ^
              const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:505:15: note: FIX-IT applied suggested code changes
        Point higherDeviatedPoint(higherDeviatedInX, perpendicularLine.calculateYFromX(higherDeviatedInX));
              ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:518:22: warning: narrowing conversion from 'double' to 'int' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int blackCount = m_soosaConfiguration.getLineBarWidthSearchInitialBlackPointsValue();
                     ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:522:9: warning: variable 'possibleBlackPointInX' of type 'double' can be declared 'const' [misc-const-correctness]
        double possibleBlackPointInX = nearestBlackPoint.getX() + (static_cast<int>(offset) * sign);
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:522:16: note: FIX-IT applied suggested code changes
        double possibleBlackPointInX = nearestBlackPoint.getX() + (static_cast<int>(offset) * sign);
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:523:9: warning: variable 'possibleBlackPoint' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point possibleBlackPoint(possibleBlackPointInX, perpendicularLine.calculateYFromX(possibleBlackPointInX));
        ^
              const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:523:15: note: FIX-IT applied suggested code changes
        Point possibleBlackPoint(possibleBlackPointInX, perpendicularLine.calculateYFromX(possibleBlackPointInX));
              ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:537:5: warning: variable 'pointsInLine' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points pointsInLine(line.getPoints(startPoint, endPoint, 1));
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:537:12: note: FIX-IT applied suggested code changes
    Points pointsInLine(line.getPoints(startPoint, endPoint, 1));
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:549:5: warning: variable 'pointAndWidthPairs' of type 'PointAndWidthPairs' (aka 'vector<pair<AlbaXY<double>, double>>') can be declared 'const' [misc-const-correctness]
    PointAndWidthPairs pointAndWidthPairs(getAcceptablePointAndWidthPairs(snippet, line, startPoint, endPoint));
    ^
                       const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:549:24: note: FIX-IT applied suggested code changes
    PointAndWidthPairs pointAndWidthPairs(getAcceptablePointAndWidthPairs(snippet, line, startPoint, endPoint));
                       ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:552:9: warning: variable 'minMaxCriteriaForBar' of type 'RangeOfDoubles' (aka 'AlbaValueRange<double>') can be declared 'const' [misc-const-correctness]
        RangeOfDoubles minMaxCriteriaForBar(getMinMaxCriteriaForBar(pointAndWidthPairs));
        ^
                       const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:552:24: note: FIX-IT applied suggested code changes
        RangeOfDoubles minMaxCriteriaForBar(getMinMaxCriteriaForBar(pointAndWidthPairs));
                       ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:571:9: warning: variable 'firstSdOverMean' of type 'double' can be declared 'const' [misc-const-correctness]
        double firstSdOverMean = firstGroupStatistics.getSampleStandardDeviation().getValueAt(0) /
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:571:16: note: FIX-IT applied suggested code changes
        double firstSdOverMean = firstGroupStatistics.getSampleStandardDeviation().getValueAt(0) /
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:573:9: warning: variable 'secondSdOverMean' of type 'double' can be declared 'const' [misc-const-correctness]
        double secondSdOverMean = secondGroupStatistics.getSampleStandardDeviation().getValueAt(0) /
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:573:16: note: FIX-IT applied suggested code changes
        double secondSdOverMean = secondGroupStatistics.getSampleStandardDeviation().getValueAt(0) /
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:579:13: warning: variable 'sizeBefore' of type 'int' can be declared 'const' [misc-const-correctness]
            int sizeBefore = kMeansForWidths.getSamples().size();
            ^
                const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:579:17: note: FIX-IT applied suggested code changes
            int sizeBefore = kMeansForWidths.getSamples().size();
                ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:579:30: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
            int sizeBefore = kMeansForWidths.getSamples().size();
                             ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:596:5: warning: variable 'conditionForX' of type 'RangeOfInts::TerminationCondition' (aka 'function<bool (int, int)>') can be declared 'const' [misc-const-correctness]
    RangeOfInts::TerminationCondition conditionForX(rangeForX.getTerminationCondition());
    ^
                                      const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:596:39: note: FIX-IT applied suggested code changes
    RangeOfInts::TerminationCondition conditionForX(rangeForX.getTerminationCondition());
                                      ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:619:5: warning: variable 'conditionForY' of type 'RangeOfInts::TerminationCondition' (aka 'function<bool (int, int)>') can be declared 'const' [misc-const-correctness]
    RangeOfInts::TerminationCondition conditionForY(rangeForY.getTerminationCondition());
    ^
                                      const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:619:39: note: FIX-IT applied suggested code changes
    RangeOfInts::TerminationCondition conditionForY(rangeForY.getTerminationCondition());
                                      ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:631:21: warning: unnecessary temporary object created while calling emplace_back [hicpp-use-emplace,modernize-use-emplace]
                    TwoDimensionSample{static_cast<double>(x), consecutiveBlackPixels.getMidpointValue()});
                    ^~~~~~~~~~~~~~~~~~~                                                                 ~
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:631:21: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:631:105: note: FIX-IT applied suggested code changes
                    TwoDimensionSample{static_cast<double>(x), consecutiveBlackPixels.getMidpointValue()});
                                                                                                        ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:654:5: warning: variable 'centerOfCircle' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point centerOfCircle = getCenterOfCircleForChoiceChecking(snippet, leftPoint, rightPoint, radius, choiceIndex);
    ^
          const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:654:11: note: FIX-IT applied suggested code changes
    Point centerOfCircle = getCenterOfCircleForChoiceChecking(snippet, leftPoint, rightPoint, radius, choiceIndex);
          ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:655:5: warning: variable 'circle' of type 'Circle' can be declared 'const' [misc-const-correctness]
    Circle circle(centerOfCircle, radius);
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:655:12: note: FIX-IT applied suggested code changes
    Circle circle(centerOfCircle, radius);
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:668:5: warning: variable 'leftBarHeight' of type 'double' can be declared 'const' [misc-const-correctness]
    double leftBarHeight = getDistance(leftCoordinate.first, leftCoordinate.second);
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:668:12: note: FIX-IT applied suggested code changes
    double leftBarHeight = getDistance(leftCoordinate.first, leftCoordinate.second);
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:669:5: warning: variable 'rightBarHeight' of type 'double' can be declared 'const' [misc-const-correctness]
    double rightBarHeight = getDistance(rightCoordinate.first, rightCoordinate.second);
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:669:12: note: FIX-IT applied suggested code changes
    double rightBarHeight = getDistance(rightCoordinate.first, rightCoordinate.second);
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:670:5: warning: variable 'lowestHeightOfQuestion' of type 'double' can be declared 'const' [misc-const-correctness]
    double lowestHeightOfQuestion = min(leftBarHeight, rightBarHeight);
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:670:12: note: FIX-IT applied suggested code changes
    double lowestHeightOfQuestion = min(leftBarHeight, rightBarHeight);
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:680:12: warning: narrowing conversion from 'double' to 'int' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return m_soosaConfiguration.getBitmapWidthToBarWidthMultiplier() *
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:686:5: warning: variable 'color' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
    uint32_t color = snippet.getColorAt(bitmapXy);
    ^
             const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:686:14: note: FIX-IT applied suggested code changes
    uint32_t color = snippet.getColorAt(bitmapXy);
             ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:687:5: warning: variable 'minColorIntensity' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
    uint32_t minColorIntensity =
    ^
             const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:687:14: note: FIX-IT applied suggested code changes
    uint32_t minColorIntensity =
             ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:698:9: warning: variable 'lineModel' of type 'LineModel' can be declared 'const' [misc-const-correctness]
        LineModel lineModel = calculateLineModelUsingLeastSquares(samples);
        ^
                  const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:698:19: note: FIX-IT applied suggested code changes
        LineModel lineModel = calculateLineModelUsingLeastSquares(samples);
                  ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:699:9: warning: variable 'retainSize' of type 'int' can be declared 'const' [misc-const-correctness]
        int retainSize = getRetainSizeInLineModel(samples.size(), m_soosaConfiguration.getRemovalRatioForLineModel());
        ^
            const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:699:13: note: FIX-IT applied suggested code changes
        int retainSize = getRetainSizeInLineModel(samples.size(), m_soosaConfiguration.getRemovalRatioForLineModel());
            ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:699:51: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        int retainSize = getRetainSizeInLineModel(samples.size(), m_soosaConfiguration.getRemovalRatioForLineModel());
                                                  ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:701:9: warning: variable 'doesOrientationMatch' of type 'bool' can be declared 'const' [misc-const-correctness]
        bool doesOrientationMatch = (LineOrientation::ConsideredVertical == lineOrientation)
        ^
             const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:701:14: note: FIX-IT applied suggested code changes
        bool doesOrientationMatch = (LineOrientation::ConsideredVertical == lineOrientation)
             ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:716:9: warning: variable 'lineModel' of type 'LineModel' can be declared 'const' [misc-const-correctness]
        LineModel lineModel = calculateLineModelUsingLeastSquares(samples);
        ^
                  const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:716:19: note: FIX-IT applied suggested code changes
        LineModel lineModel = calculateLineModelUsingLeastSquares(samples);
                  ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:717:9: warning: variable 'squareErrorToSampleMultimap' of type 'ValueToTwoDimensionSampleMultimap' (aka 'multimap<double, DataSample<2>>') can be declared 'const' [misc-const-correctness]
        ValueToTwoDimensionSampleMultimap squareErrorToSampleMultimap =
        ^
                                          const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:717:43: note: FIX-IT applied suggested code changes
        ValueToTwoDimensionSampleMultimap squareErrorToSampleMultimap =
                                          ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:719:9: warning: variable 'acceptableSquareErrorCollection' of type 'DoubleCollection' (aka 'DataCollection<double>') can be declared 'const' [misc-const-correctness]
        DoubleCollection acceptableSquareErrorCollection =
        ^
                         const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:719:26: note: FIX-IT applied suggested code changes
        DoubleCollection acceptableSquareErrorCollection =
                         ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:726:13: warning: variable 'sizeBefore' of type 'int' can be declared 'const' [misc-const-correctness]
            int sizeBefore = samples.size();
            ^
                const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:726:17: note: FIX-IT applied suggested code changes
            int sizeBefore = samples.size();
                ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:726:30: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
            int sizeBefore = samples.size();
                             ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:738:5: warning: variable 'sdOverMean' of type 'double' can be declared 'const' [misc-const-correctness]
    double sdOverMean =
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:738:12: note: FIX-IT applied suggested code changes
    double sdOverMean =
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:741:9: warning: variable 'widthMean' of type 'double' can be declared 'const' [misc-const-correctness]
        double widthMean = groupStatistics.getMean().getValueAt(0);
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:741:16: note: FIX-IT applied suggested code changes
        double widthMean = groupStatistics.getMean().getValueAt(0);
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:744:13: warning: variable 'width' of type 'double' can be declared 'const' [misc-const-correctness]
            double width(widthSample.getValueAt(0));
            ^
                   const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:744:20: note: FIX-IT applied suggested code changes
            double width(widthSample.getValueAt(0));
                   ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:748:9: warning: variable 'retainSize' of type 'int' can be declared 'const' [misc-const-correctness]
        int retainSize = getRetainSizeInLineModel(
        ^
            const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:748:13: note: FIX-IT applied suggested code changes
        int retainSize = getRetainSizeInLineModel(
            ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:749:13: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
            deviationToWidthMultimap.size(), m_soosaConfiguration.getRemovalRatioForLineAndBar());
            ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:765:5: warning: variable 'nearestBlackPoint' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point nearestBlackPoint(getNearestBlackPointFromLine(snippet, line, pointInLine));
    ^
          const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:765:11: note: FIX-IT applied suggested code changes
    Point nearestBlackPoint(getNearestBlackPointFromLine(snippet, line, pointInLine));
          ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:766:5: warning: variable 'perpendicularLine' of type 'Line' (aka 'alba::TwoDimensions::Line') can be declared 'const' [misc-const-correctness]
    Line perpendicularLine(getLineWithPerpendicularSlope(line, nearestBlackPoint));
    ^
         const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:766:10: note: FIX-IT applied suggested code changes
    Line perpendicularLine(getLineWithPerpendicularSlope(line, nearestBlackPoint));
         ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:767:5: warning: variable 'maxLineAndBarWidth' of type 'int' can be declared 'const' [misc-const-correctness]
    int maxLineAndBarWidth = getMaximumLineAndBarWidth(snippet);
    ^
        const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:767:9: note: FIX-IT applied suggested code changes
    int maxLineAndBarWidth = getMaximumLineAndBarWidth(snippet);
        ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:768:5: warning: variable 'leftMostBlack' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point leftMostBlack =
    ^
          const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:768:11: note: FIX-IT applied suggested code changes
    Point leftMostBlack =
          ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:770:5: warning: variable 'rightMostBlack' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point rightMostBlack =
    ^
          const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:770:11: note: FIX-IT applied suggested code changes
    Point rightMostBlack =
          ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:773:5: warning: variable 'width' of type 'double' can be declared 'const' [misc-const-correctness]
    double width = getDistance(leftMostBlack, rightMostBlack);
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:773:12: note: FIX-IT applied suggested code changes
    double width = getDistance(leftMostBlack, rightMostBlack);
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:774:5: warning: variable 'widthMidPoint' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point widthMidPoint = getMidpoint(leftMostBlack, rightMostBlack);
    ^
          const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:774:11: note: FIX-IT applied suggested code changes
    Point widthMidPoint = getMidpoint(leftMostBlack, rightMostBlack);
          ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:775:5: warning: variable 'acceptableDistance' of type 'double' can be declared 'const' [misc-const-correctness]
    double acceptableDistance = m_soosaConfiguration.getAcceptableDistanceOverWidthRatioFromWidthMidpoint() * width +
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:775:12: note: FIX-IT applied suggested code changes
    double acceptableDistance = m_soosaConfiguration.getAcceptableDistanceOverWidthRatioFromWidthMidpoint() * width +
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:777:5: warning: variable 'distanceFromWidthMidpoint' of type 'double' can be declared 'const' [misc-const-correctness]
    double distanceFromWidthMidpoint = getDistance(pointInLine, widthMidPoint);
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:777:12: note: FIX-IT applied suggested code changes
    double distanceFromWidthMidpoint = getDistance(pointInLine, widthMidPoint);
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:786:5: warning: variable 'countToEndPointsIndexesMultiMap' of type 'CountToEndPointIndexesMultiMap' (aka 'multimap<int, pair<int, int>>') can be declared 'const' [misc-const-correctness]
    CountToEndPointIndexesMultiMap countToEndPointsIndexesMultiMap(
    ^
                                   const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:786:36: note: FIX-IT applied suggested code changes
    CountToEndPointIndexesMultiMap countToEndPointsIndexesMultiMap(
                                   ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:801:9: warning: variable 'barHeights' of type 'OneDimensionSamples' (aka 'vector<DataSample<1>>') can be declared 'const' [misc-const-correctness]
        OneDimensionSamples barHeights(getBarHeights(listOfGroupOfBarPoints));
        ^
                            const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:801:29: note: FIX-IT applied suggested code changes
        OneDimensionSamples barHeights(getBarHeights(listOfGroupOfBarPoints));
                            ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:803:9: warning: variable 'mean' of type 'double' can be declared 'const' [misc-const-correctness]
        double mean = barHeightsStatistics.getMean().getValueAt(0);
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:803:16: note: FIX-IT applied suggested code changes
        double mean = barHeightsStatistics.getMean().getValueAt(0);
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:804:9: warning: variable 'sd' of type 'double' can be declared 'const' [misc-const-correctness]
        double sd = barHeightsStatistics.getSampleStandardDeviation().getValueAt(0);
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:804:16: note: FIX-IT applied suggested code changes
        double sd = barHeightsStatistics.getSampleStandardDeviation().getValueAt(0);
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:805:9: warning: variable 'sdOverMean' of type 'double' can be declared 'const' [misc-const-correctness]
        double sdOverMean = sd / mean;
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:805:16: note: FIX-IT applied suggested code changes
        double sdOverMean = sd / mean;
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:815:21: warning: variable 'signedDeviation' of type 'double' can be declared 'const' [misc-const-correctness]
                    double signedDeviation = getHeight(barPoints) - mean;
                    ^
                           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:815:28: note: FIX-IT applied suggested code changes
                    double signedDeviation = getHeight(barPoints) - mean;
                           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:824:17: warning: variable 'sizeBefore' of type 'int' can be declared 'const' [misc-const-correctness]
                int sizeBefore = kMeansForBarPoints.getSamples().size();
                ^
                    const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:824:21: note: FIX-IT applied suggested code changes
                int sizeBefore = kMeansForBarPoints.getSamples().size();
                    ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:824:34: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                int sizeBefore = kMeansForBarPoints.getSamples().size();
                                 ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:844:13: warning: variable 'center' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
            Point center = convertToPoint(barPointsStatistics.getMean());
            ^
                  const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:844:19: note: FIX-IT applied suggested code changes
            Point center = convertToPoint(barPointsStatistics.getMean());
                  ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:848:17: warning: variable 'barPoint' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
                Point barPoint = convertToPoint(barPointsSample);
                ^
                      const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:848:23: note: FIX-IT applied suggested code changes
                Point barPoint = convertToPoint(barPointsSample);
                      ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:854:13: warning: variable 'retainSize' of type 'int' can be declared 'const' [misc-const-correctness]
            int retainSize =
            ^
                const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:854:17: note: FIX-IT applied suggested code changes
            int retainSize =
                ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:855:42: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                getRetainSizeInLineModel(barPointsSamples.size(), m_soosaConfiguration.getRemovalRatioForBarHeight());
                                         ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:902:9: warning: variable 'outputHtmlFilePath' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
        string outputHtmlFilePath = getReportHtmlFilePath(processedFilePath);
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:902:16: note: FIX-IT applied suggested code changes
        string outputHtmlFilePath = getReportHtmlFilePath(processedFilePath);
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:906:13: warning: variable 'line' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
            string line(htmlBasisFileReader.getLineAndIgnoreWhiteSpaces());
            ^
                   const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:906:20: note: FIX-IT applied suggested code changes
            string line(htmlBasisFileReader.getLineAndIgnoreWhiteSpaces());
                   ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:917:17: warning: variable 'dischargeValue' of type 'double' can be declared 'const' [misc-const-correctness]
                double dischargeValue(m_inputConfiguration.getDischarge());
                ^
                       const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:917:24: note: FIX-IT applied suggested code changes
                double dischargeValue(m_inputConfiguration.getDischarge());
                       ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:942:9: warning: variable 'numberOfSamplesForQuestion' of type 'int' can be declared 'const' [misc-const-correctness]
        int numberOfSamplesForQuestion = calculateNumberOfSamples(samples);
        ^
            const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:942:13: note: FIX-IT applied suggested code changes
        int numberOfSamplesForQuestion = calculateNumberOfSamples(samples);
            ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:943:9: warning: variable 'median' of type 'double' can be declared 'const' [misc-const-correctness]
        double median = calculateMedian(samples);
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:943:16: note: FIX-IT applied suggested code changes
        double median = calculateMedian(samples);
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:984:9: warning: variable 'currentHeight' of type 'double' can be declared 'const' [misc-const-correctness]
        double currentHeight =
        ^
               const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:984:16: note: FIX-IT applied suggested code changes
        double currentHeight =
               ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1005:5: warning: variable 'directoryPathToBeProcessed' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler directoryPathToBeProcessed(directoryPath);
    ^
                         const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1005:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler directoryPathToBeProcessed(directoryPath);
                         ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1020:5: warning: variable 'bitmap' of type 'Bitmap' (aka 'alba::AprgBitmap::Bitmap') can be declared 'const' [misc-const-correctness]
    Bitmap bitmap(filePath);
    ^
           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1020:12: note: FIX-IT applied suggested code changes
    Bitmap bitmap(filePath);
           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1035:5: warning: variable 'globalSnippet' of type 'BitmapSnippet' (aka 'alba::AprgBitmap::BitmapSnippet') can be declared 'const' [misc-const-correctness]
    BitmapSnippet globalSnippet(bitmap.getSnippetReadFromFileWholeBitmap());
    ^
                  const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1035:19: note: FIX-IT applied suggested code changes
    BitmapSnippet globalSnippet(bitmap.getSnippetReadFromFileWholeBitmap());
                  ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1081:5: warning: variable 'centerLine' of type 'Line' (aka 'alba::TwoDimensions::Line') can be declared 'const' [misc-const-correctness]
    Line centerLine(edgePoints[0][1], edgePoints[1][1]);
    ^
         const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1081:10: note: FIX-IT applied suggested code changes
    Line centerLine(edgePoints[0][1], edgePoints[1][1]);
         ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1082:5: warning: variable 'centerLeftLine' of type 'Line' (aka 'alba::TwoDimensions::Line') can be declared 'const' [misc-const-correctness]
    Line centerLeftLine = findRightLineUsingStartingLine(globalSnippet, centerLine);
    ^
         const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1082:10: note: FIX-IT applied suggested code changes
    Line centerLeftLine = findRightLineUsingStartingLine(globalSnippet, centerLine);
         ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1083:5: warning: variable 'centerRightLine' of type 'Line' (aka 'alba::TwoDimensions::Line') can be declared 'const' [misc-const-correctness]
    Line centerRightLine = findLeftLineUsingStartingLine(globalSnippet, centerLine);
    ^
         const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1083:10: note: FIX-IT applied suggested code changes
    Line centerRightLine = findLeftLineUsingStartingLine(globalSnippet, centerLine);
         ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1101:5: warning: variable 'topLeft' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point topLeft = getIntersectionOfTwoLines(leftLine, topLine);
    ^
          const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1101:11: note: FIX-IT applied suggested code changes
    Point topLeft = getIntersectionOfTwoLines(leftLine, topLine);
          ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1102:5: warning: variable 'topRight' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point topRight = getIntersectionOfTwoLines(rightLine, topLine);
    ^
          const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1102:11: note: FIX-IT applied suggested code changes
    Point topRight = getIntersectionOfTwoLines(rightLine, topLine);
          ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1103:5: warning: variable 'bottomLeft' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point bottomLeft = getIntersectionOfTwoLines(leftLine, bottomLine);
    ^
          const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1103:11: note: FIX-IT applied suggested code changes
    Point bottomLeft = getIntersectionOfTwoLines(leftLine, bottomLine);
          ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1104:5: warning: variable 'bottomRight' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point bottomRight = getIntersectionOfTwoLines(rightLine, bottomLine);
    ^
          const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1104:11: note: FIX-IT applied suggested code changes
    Point bottomRight = getIntersectionOfTwoLines(rightLine, bottomLine);
          ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1106:5: warning: variable 'numberQuestionsInColumn' of type 'int' can be declared 'const' [misc-const-correctness]
    int numberQuestionsInColumn = m_inputConfiguration.getNumberOfQuestionsAtColumn(columnNumber);
    ^
        const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1106:9: note: FIX-IT applied suggested code changes
    int numberQuestionsInColumn = m_inputConfiguration.getNumberOfQuestionsAtColumn(columnNumber);
        ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1107:5: warning: variable 'questionBarsOnTheLeft' of type 'QuestionBarCoordinates' (aka 'vector<pair<AlbaXY<double>, AlbaXY<double>>>') can be declared 'const' [misc-const-correctness]
    QuestionBarCoordinates questionBarsOnTheLeft =
    ^
                           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1107:28: note: FIX-IT applied suggested code changes
    QuestionBarCoordinates questionBarsOnTheLeft =
                           ^
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1109:5: warning: variable 'questionsBarsOnTheRight' of type 'QuestionBarCoordinates' (aka 'vector<pair<AlbaXY<double>, AlbaXY<double>>>') can be declared 'const' [misc-const-correctness]
    QuestionBarCoordinates questionsBarsOnTheRight =
    ^
                           const 
D:\a\aprg\aprg\SOOSA\SOOSA\src\SOOSA.cpp:1109:28: note: FIX-IT applied suggested code changes
    QuestionBarCoordinates questionsBarsOnTheRight =
                           ^
In file included from D:/a/aprg/aprg/SOOSA/SOOSA/src/SOOSA.cpp:1:
In file included from D:/a/aprg/aprg/SOOSA/SOOSA/src/SOOSA.hpp:3:
In file included from D:/a/aprg/aprg/AprgBitmap/AprgBitmap/src\Bitmap/Bitmap.hpp:3:
In file included from D:/a/aprg/aprg/AprgBitmap/AprgBitmap/src\Bitmap/BitmapConfiguration.hpp:3:
In file included from D:/a/aprg/aprg/AprgBitmap/AprgBitmap/src\Bitmap/CommonTypes.hpp:3:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Container/AlbaXY.hpp:3:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Math/Helpers/PrecisionHelpers.hpp:4:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Math/Helpers/SignRelatedHelpers.hpp:3:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Math/Number/AlbaNumber.hpp:3:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Container/AlbaConfigurationHolder.hpp:4:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Utility/AlbaScopeGuard.hpp:3:
In file included from C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\functional:14:
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\xmemory:717:9: error: no matching function for call to 'construct_at'
        _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
        ^~~~~~~~~~~~~~~~~
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\yvals_core.h:1853:20: note: expanded from macro '_STD'
#define _STD       ::std::
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vector:800:27: note: in instantiation of function template specialization 'std::_Default_allocator_traits<std::allocator<alba::DataSample<1>>>::construct<alba::DataSample<1>, double>' requested here
            _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
                          ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vector:782:20: note: in instantiation of function template specialization 'std::vector<alba::DataSample<1>>::_Emplace_back_with_unused_capacity<double>' requested here
            return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vector:864:24: note: in instantiation of function template specialization 'std::vector<alba::DataSample<1>>::_Emplace_one_at_back<double>' requested here
        _Ty& _Result = _Emplace_one_at_back(_STD forward<_Valty>(_Val)...);
                       ^
D:/a/aprg/aprg/SOOSA/SOOSA/src/SOOSA.cpp:149:24: note: in instantiation of function template specialization 'std::vector<alba::DataSample<1>>::emplace_back<double>' requested here
            barHeights.emplace_back(getHeight(barPoints));
                       ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\xutility:239:16: note: candidate template ignored: substitution failure [with _Ty = alba::DataSample<1>, _Types = <double>]: no matching constructor for initialization of 'alba::DataSample<1>'
constexpr _Ty* construct_at(_Ty* const _Location, _Types&&... _Args) noexcept(
               ^
In file included from D:/a/aprg/aprg/SOOSA/SOOSA/src/SOOSA.cpp:1:
In file included from D:/a/aprg/aprg/SOOSA/SOOSA/src/SOOSA.hpp:3:
In file included from D:/a/aprg/aprg/AprgBitmap/AprgBitmap/src\Bitmap/Bitmap.hpp:3:
In file included from D:/a/aprg/aprg/AprgBitmap/AprgBitmap/src\Bitmap/BitmapConfiguration.hpp:3:
In file included from D:/a/aprg/aprg/AprgBitmap/AprgBitmap/src\Bitmap/CommonTypes.hpp:3:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Container/AlbaXY.hpp:3:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Math/Helpers/PrecisionHelpers.hpp:4:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Math/Helpers/SignRelatedHelpers.hpp:3:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Math/Number/AlbaNumber.hpp:3:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Container/AlbaConfigurationHolder.hpp:4:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Utility/AlbaScopeGuard.hpp:3:
In file included from C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\functional:14:
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\xmemory:717:9: error: no matching function for call to 'construct_at'
        _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
        ^~~~~~~~~~~~~~~~~
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\yvals_core.h:1853:20: note: expanded from macro '_STD'
#define _STD       ::std::
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vector:800:27: note: in instantiation of function template specialization 'std::_Default_allocator_traits<std::allocator<alba::DataSample<1>>>::construct<alba::DataSample<1>, const double &>' requested here
            _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
                          ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vector:782:20: note: in instantiation of function template specialization 'std::vector<alba::DataSample<1>>::_Emplace_back_with_unused_capacity<const double &>' requested here
            return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vector:864:24: note: in instantiation of function template specialization 'std::vector<alba::DataSample<1>>::_Emplace_one_at_back<const double &>' requested here
        _Ty& _Result = _Emplace_one_at_back(_STD forward<_Valty>(_Val)...);
                       ^
D:/a/aprg/aprg/SOOSA/SOOSA/src/SOOSA.cpp:325:33: note: in instantiation of function template specialization 'std::vector<alba::DataSample<1>>::emplace_back<const double &>' requested here
        shadePercentagesSamples.emplace_back(shadePercentage);
                                ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\xutility:239:16: note: candidate template ignored: substitution failure [with _Ty = alba::DataSample<1>, _Types = <const double &>]: no matching constructor for initialization of 'alba::DataSample<1>'
constexpr _Ty* construct_at(_Ty* const _Location, _Types&&... _Args) noexcept(
               ^
In file included from D:/a/aprg/aprg/SOOSA/SOOSA/src/SOOSA.cpp:1:
In file included from D:/a/aprg/aprg/SOOSA/SOOSA/src/SOOSA.hpp:3:
In file included from D:/a/aprg/aprg/AprgBitmap/AprgBitmap/src\Bitmap/Bitmap.hpp:3:
In file included from D:/a/aprg/aprg/AprgBitmap/AprgBitmap/src\Bitmap/BitmapConfiguration.hpp:3:
In file included from D:/a/aprg/aprg/AprgBitmap/AprgBitmap/src\Bitmap/CommonTypes.hpp:3:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Container/AlbaXY.hpp:3:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Math/Helpers/PrecisionHelpers.hpp:4:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Math/Helpers/SignRelatedHelpers.hpp:3:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Math/Number/AlbaNumber.hpp:3:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Container/AlbaConfigurationHolder.hpp:4:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Utility/AlbaScopeGuard.hpp:3:
In file included from C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\functional:14:
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\xmemory:717:9: error: no matching function for call to 'construct_at'
        _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
        ^~~~~~~~~~~~~~~~~
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\yvals_core.h:1853:20: note: expanded from macro '_STD'
#define _STD       ::std::
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vector:800:27: note: in instantiation of function template specialization 'std::_Default_allocator_traits<std::allocator<alba::DataSample<2>>>::construct<alba::DataSample<2>, double, double>' requested here
            _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
                          ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vector:782:20: note: in instantiation of function template specialization 'std::vector<alba::DataSample<2>>::_Emplace_back_with_unused_capacity<double, double>' requested here
            return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vector:864:24: note: in instantiation of function template specialization 'std::vector<alba::DataSample<2>>::_Emplace_one_at_back<double, double>' requested here
        _Ty& _Result = _Emplace_one_at_back(_STD forward<_Valty>(_Val)...);
                       ^
D:/a/aprg/aprg/SOOSA/SOOSA/src/SOOSA.cpp:408:25: note: in instantiation of function template specialization 'std::vector<alba::DataSample<2>>::emplace_back<double, double>' requested here
                samples.emplace_back(
                        ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\xutility:239:16: note: candidate template ignored: substitution failure [with _Ty = alba::DataSample<2>, _Types = <double, double>]: no matching constructor for initialization of 'alba::DataSample<2>'
constexpr _Ty* construct_at(_Ty* const _Location, _Types&&... _Args) noexcept(
               ^
3 errors generated.
ninja: build stopped: subcommand failed.
DONE!
