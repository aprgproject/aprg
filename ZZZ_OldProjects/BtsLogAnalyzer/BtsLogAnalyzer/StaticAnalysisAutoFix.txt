StaticAnalysisJobIdentifier: [011]
2023-09-11T21:34:57
[35m2023-09-11T21:36:10[0m | [33mBuildAndRun.sh:28[0m | The current path is [/d/a/aprg/aprg/ZZZ_OldProjects/BtsLogAnalyzer/BtsLogAnalyzer].
[35m2023-09-11T21:36:10[0m | [33mBuildAndRun.sh:29[0m | The scriptPath is [/d/a/aprg/aprg/AllCommonScripts/BuildAndRunScripts/BuildAndRun.sh].
[35m2023-09-11T21:36:10[0m | [33mBuildAndRun.sh:30[0m | The scriptOption is [buildOnOneCore].
[35m2023-09-11T21:36:10[0m | [33mBuildAndRun.sh:31[0m | The buildDirectoryName is [StaticAnalyzersBuild].
[35m2023-09-11T21:36:10[0m | [33mBuildAndRun.sh:32[0m | The argument1 is [Debug] and argument2 is [].
[35m2023-09-11T21:36:10[0m | [33mBuildAndRun.sh:33[0m | The immediateDirectoryName is [BtsLogAnalyzer].
[35m2023-09-11T21:36:10[0m | [33mBuildAndRun.sh:84[0m | The buildType is [Debug].
[35m2023-09-11T21:36:10[0m | [33mBuildAndRun.sh:85[0m | The numberOfCores is [2].
[35m2023-09-11T21:36:11[0m | [33mBuildAndRun.sh:68[0m | The build path is [/d/a/aprg/aprg/ZZZ_OldProjects/BtsLogAnalyzer/StaticAnalyzersBuild] and the output of [ls -la --color=auto]:
total 176
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 21:36 .
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 21:34 ..
-rw-r--r-- 1 runneradmin 197121  18143 Sep 11 21:36 CMakeCache.txt
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 21:36 CMakeFiles
-rw-r--r-- 1 runneradmin 197121    626 Sep 11 21:36 CTestTestfile.cmake
-rw-r--r-- 1 runneradmin 197121 143188 Sep 11 21:36 build.ninja
-rw-r--r-- 1 runneradmin 197121   2356 Sep 11 21:36 cmake_install.cmake
[1/57] Building CXX object CMakeFiles/gtest.dir/D_/a/aprg/aprg/gtest/gtest/googletest/src/gtest-all.cc.obj
In file included from D:/a/aprg/aprg/gtest/gtest/googletest/src/gtest-all.cc:49:
D:/a/aprg/aprg/gtest/gtest/googletest\src/gtest.cc:2604:3: warning: extension used [-Wlanguage-extension-token]
  __try {
  ^
1 warning generated.
[2/57] Building CXX object CMakeFiles/gtest.dir/D_/a/aprg/aprg/gtest/gtest/googletest/src/gtest_main.cc.obj
[3/57] Linking CXX static library gtest.lib
[4/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Container/AlbaContainerHelper.cpp.obj
[5/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/File/AlbaFileReader.cpp.obj
[6/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Angle/AlbaAngle.cpp.obj
[7/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/ComplexNumberHelpers.cpp.obj
[8/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/ComputationHelpers.cpp.obj
[9/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/FactorAndMulitplesHelpers.cpp.obj
[10/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/PowerHelpers.cpp.obj
[11/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/PrecisionHelpers.cpp.obj
[12/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/StatisticsHelpers.cpp.obj
[13/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/AlbaComplexNumber.cpp.obj
[14/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/AlbaNumber.cpp.obj
[15/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberInterval.cpp.obj
[16/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberIntervalEndpoint.cpp.obj
[17/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberIntervalHelpers.cpp.obj
[18/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Ratio/AlbaRatio.cpp.obj
[19/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Memory/AlbaMemoryBuffer.cpp.obj
[20/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/PathHandler/AlbaPathHandler.cpp.obj
[21/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/PathHandler/AlbaWebPathHandler.cpp.obj
[22/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Print/AlbaPrintFunctions.cpp.obj
[23/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/AlbaOldRandomizer.cpp.obj
[24/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/EntropySources/AlbaCombinedEntropySource.cpp.obj
[25/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/EntropySources/AlbaEntropySourceBasedOnTime.cpp.obj
[26/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamBitReader.cpp.obj
[27/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamBitWriter.cpp.obj
[28/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamParameterReader.cpp.obj
[29/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamParameterWriter.cpp.obj
[30/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/String/AlbaStringHelper.cpp.obj
[31/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaDateTime.cpp.obj
[32/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaDateTimeHelper.cpp.obj
[33/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimeHelper.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\Time\AlbaLocalTimeHelper.cpp:23:34: warning: 'localtime' is deprecated: This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    struct tm const localTime = *localtime(&currentTimeT);
                                 ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h:524:9: note: 'localtime' has been explicitly marked deprecated here
        _CRT_INSECURE_DEPRECATE(localtime_s)
        ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimeHelper.cpp:23:34: warning: 'localtime' is deprecated: This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    struct tm const localTime = *localtime(&currentTimeT);
                                 ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h:524:9: note: 'localtime' has been explicitly marked deprecated here
        _CRT_INSECURE_DEPRECATE(localtime_s)
        ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
1 warning generated.
[34/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimer.cpp.obj
[35/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/User/AlbaUserInterface.cpp.obj
[36/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/User/DisplayTable.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\User\DisplayTable.cpp:205:67: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
int DisplayTablePrinter::getVerticalBorderLength() const { return m_verticalBorder.length(); }
                                                                  ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\User\DisplayTable.cpp:208:12: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return ((m_maxLengthAtColumn.size() + 1) * getVerticalBorderLength()) + m_totalColumnLength;
           ^
[37/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Utility/AlbaScopeGuard.cpp.obj
[38/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities/CommonTestsUtilities/File/BaseFileReaderTest.cpp.obj
[39/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities/CommonTestsUtilities/File/FileUtilities.cpp.obj
[40/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/PathHandler/AlbaWindowsPathHandler.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:28:24: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const length = fullPath.length();
                       ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:30:45: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        int const indexWithSlashCharacter = fullPath.find_first_of(m_slashCharacterString, index);
                                            ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:270:23: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const index = m_directory.find_first_of(m_slashCharacterString + ":");
                      ^
[41/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Time/AlbaWindowsTimeHelper.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\Time\AlbaWindowsTimeHelper.cpp:6:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return AlbaDateTime(
           ^
[42/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Time/AlbaWindowsTimer.cpp.obj
[43/57] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Windows/AlbaWindowsHelper.cpp.obj
[44/57] Linking CXX static library APRG_COMMON.lib
[45/57] Building CXX object CMakeFiles/WCDMA_TOOLS_BACKEND.dir/D_/a/aprg/aprg/WcdmaTools/WcdmaToolsBackend/src/WcdmaToolsBackend/BtsLogPrint.cpp.obj
D:\a\aprg\aprg\WcdmaTools\WcdmaToolsBackend\src\WcdmaToolsBackend\BtsLogPrint.cpp:246:24: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const length = lineInLogs.length();
                       ^
[46/57] Building CXX object CMakeFiles/WCDMA_TOOLS_BACKEND.dir/D_/a/aprg/aprg/WcdmaTools/WcdmaToolsBackend/src/WcdmaToolsBackend/BtsLogSorter.cpp.obj
D:\a\aprg\aprg\WcdmaTools\WcdmaToolsBackend\src\WcdmaToolsBackend\BtsLogSorter.cpp:72:73: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        ProgressCounters::totalSizeReadForCombine = previousTotalSize + fileReader.getCurrentLocation();
                                                                        ^
[47/57] Building CXX object CMakeFiles/WCDMA_TOOLS_BACKEND.dir/D_/a/aprg/aprg/WcdmaTools/WcdmaToolsBackend/src/WcdmaToolsBackend/BtsLogTime.cpp.obj
[48/57] Building CXX object CMakeFiles/WCDMA_TOOLS_BACKEND.dir/D_/a/aprg/aprg/WcdmaTools/WcdmaToolsBackend/src/WcdmaToolsBackend/BtsPrintReaderWithRollback.cpp.obj
D:\a\aprg\aprg\WcdmaTools\WcdmaToolsBackend\src\WcdmaToolsBackend\BtsPrintReaderWithRollback.cpp:42:66: warning: narrowing conversion from 'streamoff' (aka 'long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
double BtsPrintReaderWithRollback::getCurrentLocation() { return m_inputStream.tellg(); }
                                                                 ^
[49/57] Linking CXX static library WCDMA_TOOLS_BACKEND.lib
[50/57] Building CXX object CMakeFiles/APRG_GREP_STRING_EVALUATOR.dir/D_/a/aprg/aprg/AprgGrepStringEvaluator/AprgGrepStringEvaluator/src/GrepStringEvaluator/AlbaGrepStringEvaluator.cpp.obj
[51/57] Building CXX object CMakeFiles/APRG_GREP_STRING_EVALUATOR.dir/D_/a/aprg/aprg/AprgGrepStringEvaluator/AprgGrepStringEvaluator/src/GrepStringEvaluator/AlbaGrepStringEvaluatorPerformOperations.cpp.obj
[52/57] Building CXX object CMakeFiles/APRG_GREP_STRING_EVALUATOR.dir/D_/a/aprg/aprg/AprgGrepStringEvaluator/AprgGrepStringEvaluator/src/GrepStringEvaluator/AlbaGrepStringEvaluatorTerm.cpp.obj
[53/57] Building CXX object CMakeFiles/APRG_GREP_STRING_EVALUATOR.dir/D_/a/aprg/aprg/AprgGrepStringEvaluator/AprgGrepStringEvaluator/src/GrepStringEvaluator/AlbaGrepStringToken.cpp.obj
[54/57] Linking CXX static library APRG_GREP_STRING_EVALUATOR.lib
[55/57] Building CXX object CMakeFiles/BtsLogAnalyzer.dir/src/BtsLogAnalyzer/BtsLogAnalyzer.cpp.obj
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:28:5: warning: variable 'filePathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler filePathHandler(filePath);
    ^
                         const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:28:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler filePathHandler(filePath);
                         ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:35:9: warning: variable 'lineInLogs' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
        string lineInLogs(fileReader.getLineAndIgnoreWhiteSpaces());
        ^
               const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:35:16: note: FIX-IT applied suggested code changes
        string lineInLogs(fileReader.getLineAndIgnoreWhiteSpaces());
               ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:37:13: warning: variable 'msgType' of type 'int' can be declared 'const' [misc-const-correctness]
            int msgType =
            ^
                const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:37:17: note: FIX-IT applied suggested code changes
            int msgType =
                ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:39:13: warning: variable 'nbccId' of type 'int' can be declared 'const' [misc-const-correctness]
            int nbccId = stringHelper::convertStringToNumber<int>(getNumberAfterThisString(lineInLogs, "nbccId: "));
            ^
                const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:39:17: note: FIX-IT applied suggested code changes
            int nbccId = stringHelper::convertStringToNumber<int>(getNumberAfterThisString(lineInLogs, "nbccId: "));
                ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:54:5: warning: variable 'filePathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler filePathHandler(filePath);
    ^
                         const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:54:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler filePathHandler(filePath);
                         ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:100:9: warning: variable 'lineInLogs' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
        string lineInLogs(fileReader.getLineAndIgnoreWhiteSpaces());
        ^
               const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:100:16: note: FIX-IT applied suggested code changes
        string lineInLogs(fileReader.getLineAndIgnoreWhiteSpaces());
               ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:103:13: warning: variable 'crnccId' of type 'int' can be declared 'const' [misc-const-correctness]
            int crnccId = stringHelper::convertStringToNumber<int>(getNumberAfterThisString(lineInLogs, "crnccId: "));
            ^
                const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:103:17: note: FIX-IT applied suggested code changes
            int crnccId = stringHelper::convertStringToNumber<int>(getNumberAfterThisString(lineInLogs, "crnccId: "));
                ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:104:13: warning: variable 'nbccId' of type 'int' can be declared 'const' [misc-const-correctness]
            int nbccId = stringHelper::convertStringToNumber<int>(getNumberAfterThisString(lineInLogs, "nbccId: "));
            ^
                const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:104:17: note: FIX-IT applied suggested code changes
            int nbccId = stringHelper::convertStringToNumber<int>(getNumberAfterThisString(lineInLogs, "nbccId: "));
                ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:105:13: warning: variable 'transactionId' of type 'int' can be declared 'const' [misc-const-correctness]
            int transactionId =
            ^
                const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:105:17: note: FIX-IT applied suggested code changes
            int transactionId =
                ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:107:13: warning: variable 'difference' of type 'unsigned int' can be declared 'const' [misc-const-correctness]
            unsigned int difference =
            ^
                         const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:107:26: note: FIX-IT applied suggested code changes
            unsigned int difference =
                         ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:124:13: warning: variable 'logPrint' of type 'BtsLogPrint' can be declared 'const' [misc-const-correctness]
            BtsLogPrint logPrint(lineInLogs);
            ^
                        const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:124:25: note: FIX-IT applied suggested code changes
            BtsLogPrint logPrint(lineInLogs);
                        ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:137:13: warning: variable 'logPrint' of type 'BtsLogPrint' can be declared 'const' [misc-const-correctness]
            BtsLogPrint logPrint(lineInLogs);
            ^
                        const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:137:25: note: FIX-IT applied suggested code changes
            BtsLogPrint logPrint(lineInLogs);
                        ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:151:13: warning: variable 'logPrint' of type 'BtsLogPrint' can be declared 'const' [misc-const-correctness]
            BtsLogPrint logPrint(lineInLogs);
            ^
                        const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:151:25: note: FIX-IT applied suggested code changes
            BtsLogPrint logPrint(lineInLogs);
                        ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:164:13: warning: variable 'logPrint' of type 'BtsLogPrint' can be declared 'const' [misc-const-correctness]
            BtsLogPrint logPrint(lineInLogs);
            ^
                        const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:164:25: note: FIX-IT applied suggested code changes
            BtsLogPrint logPrint(lineInLogs);
                        ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:173:17: warning: variable 'delayTime' of type 'BtsLogTime' can be declared 'const' [misc-const-correctness]
                BtsLogTime delayTime =
                ^
                           const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:173:28: note: FIX-IT applied suggested code changes
                BtsLogTime delayTime =
                           ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:175:17: warning: variable 'delay' of type 'int' can be declared 'const' [misc-const-correctness]
                int delay = static_cast<int>(delayTime.getMicroSeconds() + delayTime.getSeconds() * 1000000);
                ^
                    const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:175:21: note: FIX-IT applied suggested code changes
                int delay = static_cast<int>(delayTime.getMicroSeconds() + delayTime.getSeconds() * 1000000);
                    ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:187:17: warning: variable 'delayTime' of type 'BtsLogTime' can be declared 'const' [misc-const-correctness]
                BtsLogTime delayTime =
                ^
                           const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:187:28: note: FIX-IT applied suggested code changes
                BtsLogTime delayTime =
                           ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:189:17: warning: variable 'delay' of type 'int' can be declared 'const' [misc-const-correctness]
                int delay = static_cast<int>(delayTime.getMicroSeconds() + delayTime.getSeconds() * 1000000);
                ^
                    const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:189:21: note: FIX-IT applied suggested code changes
                int delay = static_cast<int>(delayTime.getMicroSeconds() + delayTime.getSeconds() * 1000000);
                    ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:201:17: warning: variable 'delayTime' of type 'BtsLogTime' can be declared 'const' [misc-const-correctness]
                BtsLogTime delayTime =
                ^
                           const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:201:28: note: FIX-IT applied suggested code changes
                BtsLogTime delayTime =
                           ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:203:17: warning: variable 'delay' of type 'int' can be declared 'const' [misc-const-correctness]
                int delay = static_cast<int>(delayTime.getMicroSeconds() + delayTime.getSeconds() * 1000000);
                ^
                    const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:203:21: note: FIX-IT applied suggested code changes
                int delay = static_cast<int>(delayTime.getMicroSeconds() + delayTime.getSeconds() * 1000000);
                    ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:224:5: warning: variable 'firstIndexOfFirstString' of type 'int' can be declared 'const' [misc-const-correctness]
    int firstIndexOfFirstString = mainString.find(stringToSearch);
    ^
        const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:224:9: note: FIX-IT applied suggested code changes
    int firstIndexOfFirstString = mainString.find(stringToSearch);
        ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:224:35: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int firstIndexOfFirstString = mainString.find(stringToSearch);
                                  ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:226:9: warning: variable 'lastIndexOfFirstString' of type 'int' can be declared 'const' [misc-const-correctness]
        int lastIndexOfFirstString = static_cast<int>(firstIndexOfFirstString + stringToSearch.length());
        ^
            const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:226:13: note: FIX-IT applied suggested code changes
        int lastIndexOfFirstString = static_cast<int>(firstIndexOfFirstString + stringToSearch.length());
            ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:238:5: warning: variable 'length' of type 'int' can be declared 'const' [misc-const-correctness]
    int length(lineInLogs.length());
    ^
        const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:238:9: note: FIX-IT applied suggested code changes
    int length(lineInLogs.length());
        ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:238:16: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int length(lineInLogs.length());
               ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:283:9: warning: variable 'lineInLogs' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
        string lineInLogs(fileReader.getLineAndIgnoreWhiteSpaces());
        ^
               const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:283:16: note: FIX-IT applied suggested code changes
        string lineInLogs(fileReader.getLineAndIgnoreWhiteSpaces());
               ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:291:13: warning: variable 'crnccId' of type 'int' can be declared 'const' [misc-const-correctness]
            int crnccId = stringHelper::convertStringToNumber<int>(
            ^
                const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:291:17: note: FIX-IT applied suggested code changes
            int crnccId = stringHelper::convertStringToNumber<int>(
                ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:304:17: warning: variable 'delay' of type 'double' can be declared 'const' [misc-const-correctness]
                double delay = delayForCrnccId.endTimeOptional.value() - delayForCrnccId.startTimeOptional.value();
                ^
                       const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:304:24: note: FIX-IT applied suggested code changes
                double delay = delayForCrnccId.endTimeOptional.value() - delayForCrnccId.startTimeOptional.value();
                       ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:320:5: warning: variable 'filePathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler filePathHandler(filePath);
    ^
                         const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:320:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler filePathHandler(filePath);
                         ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:329:9: warning: variable 'lineInLogs' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
        string lineInLogs(fileReader.getLineAndIgnoreWhiteSpaces());
        ^
               const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:329:16: note: FIX-IT applied suggested code changes
        string lineInLogs(fileReader.getLineAndIgnoreWhiteSpaces());
               ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:331:13: warning: variable 'msgQueuingTime' of type 'int' can be declared 'const' [misc-const-correctness]
            int msgQueuingTime =
            ^
                const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:331:17: note: FIX-IT applied suggested code changes
            int msgQueuingTime =
                ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:347:5: warning: variable 'filePathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler filePathHandler(filePath);
    ^
                         const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:347:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler filePathHandler(filePath);
                         ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:356:9: warning: variable 'lineInLogs' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
        string lineInLogs(fileReader.getLineAndIgnoreWhiteSpaces());
        ^
               const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:356:16: note: FIX-IT applied suggested code changes
        string lineInLogs(fileReader.getLineAndIgnoreWhiteSpaces());
               ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:366:13: warning: variable 'logPrint' of type 'BtsLogPrint' can be declared 'const' [misc-const-correctness]
            BtsLogPrint logPrint(lineInLogs);
            ^
                        const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:366:25: note: FIX-IT applied suggested code changes
            BtsLogPrint logPrint(lineInLogs);
                        ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:379:13: warning: variable 'logPrint' of type 'BtsLogPrint' can be declared 'const' [misc-const-correctness]
            BtsLogPrint logPrint(lineInLogs);
            ^
                        const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:379:25: note: FIX-IT applied suggested code changes
            BtsLogPrint logPrint(lineInLogs);
                        ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:386:17: warning: variable 'delayTime' of type 'BtsLogTime' can be declared 'const' [misc-const-correctness]
                BtsLogTime delayTime =
                ^
                           const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:386:28: note: FIX-IT applied suggested code changes
                BtsLogTime delayTime =
                           ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:388:17: warning: variable 'delay' of type 'int' can be declared 'const' [misc-const-correctness]
                int delay = static_cast<int>(delayTime.getMicroSeconds() + delayTime.getSeconds() * 1000000);
                ^
                    const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:388:21: note: FIX-IT applied suggested code changes
                int delay = static_cast<int>(delayTime.getMicroSeconds() + delayTime.getSeconds() * 1000000);
                    ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:404:5: warning: variable 'filePathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler filePathHandler(filePath);
    ^
                         const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:404:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler filePathHandler(filePath);
                         ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:412:9: warning: variable 'lineInLogs' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
        string lineInLogs(fileReader.getLineAndIgnoreWhiteSpaces());
        ^
               const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:412:16: note: FIX-IT applied suggested code changes
        string lineInLogs(fileReader.getLineAndIgnoreWhiteSpaces());
               ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:422:13: warning: variable 'logPrint' of type 'BtsLogPrint' can be declared 'const' [misc-const-correctness]
            BtsLogPrint logPrint(lineInLogs);
            ^
                        const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:422:25: note: FIX-IT applied suggested code changes
            BtsLogPrint logPrint(lineInLogs);
                        ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:435:13: warning: variable 'logPrint' of type 'BtsLogPrint' can be declared 'const' [misc-const-correctness]
            BtsLogPrint logPrint(lineInLogs);
            ^
                        const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:435:25: note: FIX-IT applied suggested code changes
            BtsLogPrint logPrint(lineInLogs);
                        ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:442:17: warning: variable 'delayTime' of type 'BtsLogTime' can be declared 'const' [misc-const-correctness]
                BtsLogTime delayTime =
                ^
                           const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:442:28: note: FIX-IT applied suggested code changes
                BtsLogTime delayTime =
                           ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:444:17: warning: variable 'delay' of type 'int' can be declared 'const' [misc-const-correctness]
                int delay = static_cast<int>(delayTime.getMicroSeconds() + delayTime.getSeconds() * 1000000);
                ^
                    const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:444:21: note: FIX-IT applied suggested code changes
                int delay = static_cast<int>(delayTime.getMicroSeconds() + delayTime.getSeconds() * 1000000);
                    ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:460:5: warning: variable 'filePathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler filePathHandler(filePath);
    ^
                         const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:460:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler filePathHandler(filePath);
                         ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:468:9: warning: variable 'lineInLogs' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
        string lineInLogs(fileReader.getLineAndIgnoreWhiteSpaces());
        ^
               const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:468:16: note: FIX-IT applied suggested code changes
        string lineInLogs(fileReader.getLineAndIgnoreWhiteSpaces());
               ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:470:13: warning: variable 'nbccId' of type 'int' can be declared 'const' [misc-const-correctness]
            int nbccId = stringHelper::convertStringToNumber<int>(getNumberAfterThisString(lineInLogs, "nbccId: "));
            ^
                const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:470:17: note: FIX-IT applied suggested code changes
            int nbccId = stringHelper::convertStringToNumber<int>(getNumberAfterThisString(lineInLogs, "nbccId: "));
                ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:472:13: warning: variable 'logPrint' of type 'BtsLogPrint' can be declared 'const' [misc-const-correctness]
            BtsLogPrint logPrint(lineInLogs);
            ^
                        const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:472:25: note: FIX-IT applied suggested code changes
            BtsLogPrint logPrint(lineInLogs);
                        ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:477:13: warning: variable 'crnccId' of type 'int' can be declared 'const' [misc-const-correctness]
            int crnccId = stringHelper::convertStringToNumber<int>(getNumberAfterThisString(lineInLogs, "crnccId: "));
            ^
                const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:477:17: note: FIX-IT applied suggested code changes
            int crnccId = stringHelper::convertStringToNumber<int>(getNumberAfterThisString(lineInLogs, "crnccId: "));
                ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:478:13: warning: variable 'nbccId' of type 'int' can be declared 'const' [misc-const-correctness]
            int nbccId = stringHelper::convertStringToNumber<int>(getNumberAfterThisString(lineInLogs, "nbccId: "));
            ^
                const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:478:17: note: FIX-IT applied suggested code changes
            int nbccId = stringHelper::convertStringToNumber<int>(getNumberAfterThisString(lineInLogs, "nbccId: "));
                ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:479:13: warning: variable 'transactionId' of type 'int' can be declared 'const' [misc-const-correctness]
            int transactionId =
            ^
                const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:479:17: note: FIX-IT applied suggested code changes
            int transactionId =
                ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:482:13: warning: variable 'logPrint' of type 'BtsLogPrint' can be declared 'const' [misc-const-correctness]
            BtsLogPrint logPrint(lineInLogs);
            ^
                        const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:482:25: note: FIX-IT applied suggested code changes
            BtsLogPrint logPrint(lineInLogs);
                        ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:489:17: warning: variable 'delayTime' of type 'BtsLogTime' can be declared 'const' [misc-const-correctness]
                BtsLogTime delayTime =
                ^
                           const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:489:28: note: FIX-IT applied suggested code changes
                BtsLogTime delayTime =
                           ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:491:17: warning: variable 'delay' of type 'int' can be declared 'const' [misc-const-correctness]
                int delay = static_cast<int>(delayTime.getMicroSeconds() + delayTime.getSeconds() * 1000000);
                ^
                    const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\src\BtsLogAnalyzer\BtsLogAnalyzer.cpp:491:21: note: FIX-IT applied suggested code changes
                int delay = static_cast<int>(delayTime.getMicroSeconds() + delayTime.getSeconds() * 1000000);
                    ^
[56/57] Building CXX object CMakeFiles/BtsLogAnalyzer.dir/tst/BtsLogAnalyzerTests/BtsLogAnalyzer_unit.cpp.obj
D:/a/aprg/aprg/ZZZ_OldProjects/BtsLogAnalyzer/BtsLogAnalyzer/src\BtsLogAnalyzer/BtsLogAnalyzer.hpp:50:5: warning: function 'getComputedAverageDelay' should be marked [[nodiscard]] [modernize-use-nodiscard]
    double getComputedAverageDelay() const;
    ^
    [[nodiscard]] 
D:/a/aprg/aprg/ZZZ_OldProjects/BtsLogAnalyzer/BtsLogAnalyzer/src\BtsLogAnalyzer/BtsLogAnalyzer.hpp:50:5: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:12:5: warning: variable 'reader' of type 'BtsLogAnalyzer' can be declared 'const' [misc-const-correctness]
    BtsLogAnalyzer reader;
    ^
                   const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:12:20: note: FIX-IT applied suggested code changes
    BtsLogAnalyzer reader;
                   ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:13:5: warning: variable 'timeStamp' of type 'double' can be declared 'const' [misc-const-correctness]
    double timeStamp = alba::BtsLogAnalyzer::getWireSharkTime(
    ^
           const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:13:12: note: FIX-IT applied suggested code changes
    double timeStamp = alba::BtsLogAnalyzer::getWireSharkTime(
           ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:21:5: warning: variable 'reader' of type 'BtsLogAnalyzer' can be declared 'const' [misc-const-correctness]
    BtsLogAnalyzer reader;
    ^
                   const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:21:20: note: FIX-IT applied suggested code changes
    BtsLogAnalyzer reader;
                   ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:22:5: warning: variable 'timeStamp' of type 'double' can be declared 'const' [misc-const-correctness]
    double timeStamp = alba::BtsLogAnalyzer::getWireSharkTime(
    ^
           const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:22:12: note: FIX-IT applied suggested code changes
    double timeStamp = alba::BtsLogAnalyzer::getWireSharkTime(
           ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:30:5: warning: variable 'reader' of type 'BtsLogAnalyzer' can be declared 'const' [misc-const-correctness]
    BtsLogAnalyzer reader;
    ^
                   const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:30:20: note: FIX-IT applied suggested code changes
    BtsLogAnalyzer reader;
                   ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:31:5: warning: variable 'crnccIdString' of type 'string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') can be declared 'const' [misc-const-correctness]
    string crnccIdString = alba::BtsLogAnalyzer::getNumberAfterThisString(
    ^
           const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:31:12: note: FIX-IT applied suggested code changes
    string crnccIdString = alba::BtsLogAnalyzer::getNumberAfterThisString(
           ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:35:5: warning: variable 'crnccId' of type 'int' can be declared 'const' [misc-const-correctness]
    int crnccId = stringHelper::convertStringToNumber<int>(crnccIdString);
    ^
        const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:35:9: note: FIX-IT applied suggested code changes
    int crnccId = stringHelper::convertStringToNumber<int>(crnccIdString);
        ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:86:5: warning: variable 'reader' of type 'BtsLogAnalyzer' can be declared 'const' [misc-const-correctness]
    BtsLogAnalyzer reader(R"(D:\W\ZZZ_Useless_Logs\wireshark_challenge\WBTS17Knife\bts_logs\RlhBtsLogTimeResults.csv)");
    ^
                   const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:86:20: note: FIX-IT applied suggested code changes
    BtsLogAnalyzer reader(R"(D:\W\ZZZ_Useless_Logs\wireshark_challenge\WBTS17Knife\bts_logs\RlhBtsLogTimeResults.csv)");
                   ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:105:5: warning: variable 'reader' of type 'BtsLogAnalyzer' can be declared 'const' [misc-const-correctness]
    BtsLogAnalyzer reader(R"(D:\W\ZZZ_Useless_Logs\RAN2861\WBTS17\TRACING_REPORT.csv)");
    ^
                   const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:105:20: note: FIX-IT applied suggested code changes
    BtsLogAnalyzer reader(R"(D:\W\ZZZ_Useless_Logs\RAN2861\WBTS17\TRACING_REPORT.csv)");
                   ^
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:122:5: warning: variable 'traceReportHeader' of type 'TraceReportHeader' can be declared 'const' [misc-const-correctness]
    TraceReportHeader traceReportHeader{};
    ^
                      const 
D:\a\aprg\aprg\ZZZ_OldProjects\BtsLogAnalyzer\BtsLogAnalyzer\tst\BtsLogAnalyzerTests\BtsLogAnalyzer_unit.cpp:122:23: note: FIX-IT applied suggested code changes
    TraceReportHeader traceReportHeader{};
                      ^
[57/57] Linking CXX executable BtsLogAnalyzer.exe
[35m2023-09-11T21:50:22[0m | [33mBuildAndRun.sh:218[0m | The script [BuildAndRun.sh] for [buildOnOneCore] is finished.
DONE!
