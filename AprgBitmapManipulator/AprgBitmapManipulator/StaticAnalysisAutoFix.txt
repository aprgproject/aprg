StaticAnalysisJobIdentifier: [011]
2023-09-11T02:19:20
[35m2023-09-11T02:20:35[0m | [33mBuildAndRun.sh:28[0m | The current path is [/d/a/aprg/aprg/AprgBitmapManipulator/AprgBitmapManipulator].
[35m2023-09-11T02:20:35[0m | [33mBuildAndRun.sh:29[0m | The scriptPath is [/d/a/aprg/aprg/AllCommonScripts/BuildAndRunScripts/BuildAndRun.sh].
[35m2023-09-11T02:20:35[0m | [33mBuildAndRun.sh:30[0m | The scriptOption is [buildOnOneCore].
[35m2023-09-11T02:20:35[0m | [33mBuildAndRun.sh:31[0m | The buildDirectoryName is [StaticAnalyzersBuild].
[35m2023-09-11T02:20:35[0m | [33mBuildAndRun.sh:32[0m | The argument1 is [Debug] and argument2 is [].
[35m2023-09-11T02:20:35[0m | [33mBuildAndRun.sh:33[0m | The immediateDirectoryName is [AprgBitmapManipulator].
[35m2023-09-11T02:20:35[0m | [33mBuildAndRun.sh:84[0m | The buildType is [Debug].
[35m2023-09-11T02:20:35[0m | [33mBuildAndRun.sh:85[0m | The numberOfCores is [2].
[35m2023-09-11T02:20:35[0m | [33mBuildAndRun.sh:68[0m | The build path is [/d/a/aprg/aprg/AprgBitmapManipulator/StaticAnalyzersBuild] and the output of [ls -la --color=auto]:
total 264
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 02:20 .
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 02:19 ..
-rw-r--r-- 1 runneradmin 197121  18199 Sep 11 02:20 CMakeCache.txt
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 02:20 CMakeFiles
-rw-r--r-- 1 runneradmin 197121    632 Sep 11 02:20 CTestTestfile.cmake
-rw-r--r-- 1 runneradmin 197121 228109 Sep 11 02:20 build.ninja
-rw-r--r-- 1 runneradmin 197121   2355 Sep 11 02:20 cmake_install.cmake
[1/98] Building CXX object CMakeFiles/gtest.dir/D_/a/aprg/aprg/gtest/gtest/googletest/src/gtest-all.cc.obj
In file included from D:/a/aprg/aprg/gtest/gtest/googletest/src/gtest-all.cc:49:
D:/a/aprg/aprg/gtest/gtest/googletest\src/gtest.cc:2604:3: warning: extension used [-Wlanguage-extension-token]
  __try {
  ^
1 warning generated.
[2/98] Building CXX object CMakeFiles/gtest.dir/D_/a/aprg/aprg/gtest/gtest/googletest/src/gtest_main.cc.obj
[3/98] Linking CXX static library gtest.lib
[4/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Container/AlbaContainerHelper.cpp.obj
[5/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/File/AlbaFileReader.cpp.obj
[6/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Angle/AlbaAngle.cpp.obj
[7/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/ComplexNumberHelpers.cpp.obj
[8/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/ComputationHelpers.cpp.obj
[9/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/FactorAndMulitplesHelpers.cpp.obj
[10/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/PowerHelpers.cpp.obj
[11/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/PrecisionHelpers.cpp.obj
[12/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/StatisticsHelpers.cpp.obj
[13/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/AlbaComplexNumber.cpp.obj
[14/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/AlbaNumber.cpp.obj
[15/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberInterval.cpp.obj
[16/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberIntervalEndpoint.cpp.obj
[17/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberIntervalHelpers.cpp.obj
[18/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Ratio/AlbaRatio.cpp.obj
[19/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Memory/AlbaMemoryBuffer.cpp.obj
[20/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/PathHandler/AlbaPathHandler.cpp.obj
[21/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/PathHandler/AlbaWebPathHandler.cpp.obj
[22/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Print/AlbaPrintFunctions.cpp.obj
[23/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/AlbaOldRandomizer.cpp.obj
[24/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/EntropySources/AlbaCombinedEntropySource.cpp.obj
[25/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/EntropySources/AlbaEntropySourceBasedOnTime.cpp.obj
[26/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamBitReader.cpp.obj
[27/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamBitWriter.cpp.obj
[28/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamParameterReader.cpp.obj
[29/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamParameterWriter.cpp.obj
[30/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/String/AlbaStringHelper.cpp.obj
[31/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaDateTime.cpp.obj
[32/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaDateTimeHelper.cpp.obj
[33/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimeHelper.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\Time\AlbaLocalTimeHelper.cpp:23:34: warning: 'localtime' is deprecated: This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    struct tm const localTime = *localtime(&currentTimeT);
                                 ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h:524:9: note: 'localtime' has been explicitly marked deprecated here
        _CRT_INSECURE_DEPRECATE(localtime_s)
        ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimeHelper.cpp:23:34: warning: 'localtime' is deprecated: This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    struct tm const localTime = *localtime(&currentTimeT);
                                 ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h:524:9: note: 'localtime' has been explicitly marked deprecated here
        _CRT_INSECURE_DEPRECATE(localtime_s)
        ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
1 warning generated.
[34/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimer.cpp.obj
[35/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/User/AlbaUserInterface.cpp.obj
[36/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/User/DisplayTable.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\User\DisplayTable.cpp:205:67: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
int DisplayTablePrinter::getVerticalBorderLength() const { return m_verticalBorder.length(); }
                                                                  ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\User\DisplayTable.cpp:208:12: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return ((m_maxLengthAtColumn.size() + 1) * getVerticalBorderLength()) + m_totalColumnLength;
           ^
[37/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Utility/AlbaScopeGuard.cpp.obj
[38/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities/CommonTestsUtilities/File/BaseFileReaderTest.cpp.obj
[39/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities/CommonTestsUtilities/File/FileUtilities.cpp.obj
[40/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/PathHandler/AlbaWindowsPathHandler.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:28:24: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const length = fullPath.length();
                       ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:30:45: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        int const indexWithSlashCharacter = fullPath.find_first_of(m_slashCharacterString, index);
                                            ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:270:23: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const index = m_directory.find_first_of(m_slashCharacterString + ":");
                      ^
[41/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Time/AlbaWindowsTimeHelper.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\Time\AlbaWindowsTimeHelper.cpp:6:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return AlbaDateTime(
           ^
[42/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Time/AlbaWindowsTimer.cpp.obj
[43/98] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Windows/AlbaWindowsHelper.cpp.obj
[44/98] Linking CXX static library APRG_COMMON.lib
[45/98] Building CXX object CMakeFiles/APRG_BITMAP.dir/D_/a/aprg/aprg/AprgBitmap/AprgBitmap/src/Bitmap/Bitmap.cpp.obj
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\Bitmap.cpp:95:38: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long long') to signed type 'off_type' (aka 'long long') is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                    streamFile.seekg(fileOffsetForStart, std::fstream::beg);
                                     ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\Bitmap.cpp:124:45: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    adjustToTargetLength(left, right, side, m_configuration.getBitmapWidth());
                                            ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\Bitmap.cpp:134:53: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    adjustToTargetLength(top, bottom, ySizeInBytes, m_configuration.getBitmapHeight());
                                                    ^
[46/98] Building CXX object CMakeFiles/APRG_BITMAP.dir/D_/a/aprg/aprg/AprgBitmap/AprgBitmap/src/Bitmap/BitmapConfiguration.cpp.obj
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:26:61: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const maxX = m_bitmapWidth == 0 ? 0 : m_bitmapWidth - 1;
                                                            ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:27:63: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const maxY = m_bitmapHeight == 0 ? 0 : m_bitmapHeight - 1;
                                                              ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:60:49: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return getCoordinateWithinRange(coordinate, m_bitmapWidth);
                                                ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:64:49: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return getCoordinateWithinRange(coordinate, m_bitmapHeight);
                                                ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:68:12: warning: narrowing conversion from 'std::size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return (pixels * m_numberOfBitsPerPixel) / AlbaBitConstants::BYTE_SIZE_IN_BITS;
           ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:72:12: warning: narrowing conversion from 'std::size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return ((pixels * m_numberOfBitsPerPixel) + AlbaBitConstants::BYTE_SIZE_IN_BITS - 1) /
           ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:77:12: warning: narrowing conversion from 'std::size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return (bytes * AlbaBitConstants::BYTE_SIZE_IN_BITS) / m_numberOfBitsPerPixel;
           ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:97:22: warning: narrowing conversion from 'std::size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    double const b = (1 + getMinimumNumberOfBytesForOnePixel()) * AlbaBitConstants::BYTE_SIZE_IN_BITS;
                     ^
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapConfiguration.cpp:259:69: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    m_numberOfBytesForDataInRow = convertPixelsToBytesRoundedToCeil(m_bitmapWidth);
                                                                    ^
[47/98] Building CXX object CMakeFiles/APRG_BITMAP.dir/D_/a/aprg/aprg/AprgBitmap/AprgBitmap/src/Bitmap/BitmapSnippet.cpp.obj
D:\a\aprg\aprg\AprgBitmap\AprgBitmap\src\Bitmap\BitmapSnippet.cpp:45:54: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
int BitmapSnippet::getPixelDataSize() const { return m_pixelData.getSize(); }
                                                     ^
[48/98] Linking CXX static library APRG_BITMAP.lib
[49/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/Ellipsoid.cpp.obj
[50/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/EllipticCone.cpp.obj
[51/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/EllipticHyperboloid.cpp.obj
[52/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/EllipticParaboloid.cpp.obj
[53/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/HyperbolicParaboloid.cpp.obj
[54/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/Line.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Line.cpp:14:5: warning: variable 'deltaX' of type 'double' can be declared 'const' [misc-const-correctness]
    double deltaX = second.getX() - first.getX();
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Line.cpp:14:12: note: FIX-IT applied suggested code changes
    double deltaX = second.getX() - first.getX();
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Line.cpp:15:5: warning: variable 'deltaY' of type 'double' can be declared 'const' [misc-const-correctness]
    double deltaY = second.getY() - first.getY();
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Line.cpp:15:12: note: FIX-IT applied suggested code changes
    double deltaY = second.getY() - first.getY();
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Line.cpp:16:5: warning: variable 'deltaZ' of type 'double' can be declared 'const' [misc-const-correctness]
    double deltaZ = second.getZ() - first.getZ();
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Line.cpp:16:12: note: FIX-IT applied suggested code changes
    double deltaZ = second.getZ() - first.getZ();
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Line.cpp:18:5: warning: variable 'deltas' of type 'vector<double>' can be declared 'const' [misc-const-correctness]
    vector<double> deltas = {deltaX, deltaY, deltaZ};
    ^
                   const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Line.cpp:18:20: note: FIX-IT applied suggested code changes
    vector<double> deltas = {deltaX, deltaY, deltaZ};
                   ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Line.cpp:19:5: warning: variable 'negativeNumbers' of type 'int' can be declared 'const' [misc-const-correctness]
    int negativeNumbers = std::count_if(deltas.cbegin(), deltas.cend(), [&](double const delta) { return delta < 0; });
    ^
        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Line.cpp:19:9: note: FIX-IT applied suggested code changes
    int negativeNumbers = std::count_if(deltas.cbegin(), deltas.cend(), [&](double const delta) { return delta < 0; });
        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Line.cpp:19:27: warning: narrowing conversion from '_Iter_diff_t<_Vector_const_iterator<_Vector_val<_Simple_types<double>>>>' (aka 'long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int negativeNumbers = std::count_if(deltas.cbegin(), deltas.cend(), [&](double const delta) { return delta < 0; });
                          ^
[55/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/Plane.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Plane.cpp:19:5: warning: variable 'perpendicularVector' of type 'Vector' (aka 'AlbaMathVector<double, 3>') can be declared 'const' [misc-const-correctness]
    Vector perpendicularVector(getCrossProduct(
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Plane.cpp:19:12: note: FIX-IT applied suggested code changes
    Vector perpendicularVector(getCrossProduct(
           ^
[56/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Constructs/Sphere.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Sphere.cpp:32:5: warning: variable 'discriminant' of type 'double' can be declared 'const' [misc-const-correctness]
    double discriminant = m_radiusSquared - pow(y - m_center.getY(), 2) - pow(z - m_center.getZ(), 2);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Sphere.cpp:32:12: note: FIX-IT applied suggested code changes
    double discriminant = m_radiusSquared - pow(y - m_center.getY(), 2) - pow(z - m_center.getZ(), 2);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Sphere.cpp:41:5: warning: variable 'discriminant' of type 'double' can be declared 'const' [misc-const-correctness]
    double discriminant = m_radiusSquared - pow(x - m_center.getX(), 2) - pow(z - m_center.getZ(), 2);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Sphere.cpp:41:12: note: FIX-IT applied suggested code changes
    double discriminant = m_radiusSquared - pow(x - m_center.getX(), 2) - pow(z - m_center.getZ(), 2);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Sphere.cpp:50:5: warning: variable 'discriminant' of type 'double' can be declared 'const' [misc-const-correctness]
    double discriminant = m_radiusSquared - pow(x - m_center.getX(), 2) - pow(y - m_center.getY(), 2);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Constructs\Sphere.cpp:50:12: note: FIX-IT applied suggested code changes
    double discriminant = m_radiusSquared - pow(x - m_center.getX(), 2) - pow(y - m_center.getY(), 2);
           ^
[57/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/ThreeDimensions/Utilities/ThreeDimensionsUtilities.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:25:5: warning: variable 'denominator' of type 'double' can be declared 'const' [misc-const-correctness]
    double denominator = (firstCoordinateCoefficientLine2 * secondCoordinateCoefficientLine1) -
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:25:12: note: FIX-IT applied suggested code changes
    double denominator = (firstCoordinateCoefficientLine2 * secondCoordinateCoefficientLine1) -
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:27:5: warning: variable 'numerator' of type 'double' can be declared 'const' [misc-const-correctness]
    double numerator =
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:27:12: note: FIX-IT applied suggested code changes
    double numerator =
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:38:5: warning: variable 'numerator' of type 'double' can be declared 'const' [misc-const-correctness]
    double numerator =
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:38:12: note: FIX-IT applied suggested code changes
    double numerator =
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:40:5: warning: variable 'denominator' of type 'double' can be declared 'const' [misc-const-correctness]
    double denominator = (coefficientOfCommonCoordinate2 * coefficientOfCoordinateToDetermine1) -
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:40:12: note: FIX-IT applied suggested code changes
    double denominator = (coefficientOfCommonCoordinate2 * coefficientOfCoordinateToDetermine1) -
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:76:5: warning: variable 'deltaBA' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point deltaBA(pointB - pointA);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:76:11: note: FIX-IT applied suggested code changes
    Point deltaBA(pointB - pointA);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:77:5: warning: variable 'deltaCA' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point deltaCA(pointC - pointA);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:77:11: note: FIX-IT applied suggested code changes
    Point deltaCA(pointC - pointA);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:97:5: warning: variable 'smallerAngle' of type 'AlbaAngle' can be declared 'const' [misc-const-correctness]
    AlbaAngle smallerAngle(getTheSmallerAngleBetweenTwoLines(line1, line2));
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:97:15: note: FIX-IT applied suggested code changes
    AlbaAngle smallerAngle(getTheSmallerAngleBetweenTwoLines(line1, line2));
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:114:5: warning: variable 'smallerAngle' of type 'AlbaAngle' can be declared 'const' [misc-const-correctness]
    AlbaAngle smallerAngle(getTheSmallerDihedralAngleBetweenTwoPlanes(plane1, plane2));
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:114:15: note: FIX-IT applied suggested code changes
    AlbaAngle smallerAngle(getTheSmallerDihedralAngleBetweenTwoPlanes(plane1, plane2));
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:123:5: warning: variable 'perpendicularVector' of type 'Vector' (aka 'AlbaMathVector<double, 3>') can be declared 'const' [misc-const-correctness]
    Vector perpendicularVector = getCrossProduct(constructNormalVector(plane1), constructNormalVector(plane2));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:123:12: note: FIX-IT applied suggested code changes
    Vector perpendicularVector = getCrossProduct(constructNormalVector(plane1), constructNormalVector(plane2));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:124:5: warning: variable 'yCoordinateIntersection' of type 'double' can be declared 'const' [misc-const-correctness]
    double yCoordinateIntersection = getCoordinateinLineIntersection(
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:124:12: note: FIX-IT applied suggested code changes
    double yCoordinateIntersection = getCoordinateinLineIntersection(
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:132:5: warning: variable 'xCoordinateIntersection' of type 'double' can be declared 'const' [misc-const-correctness]
    double xCoordinateIntersection = plane1.calculateXFromYAndZ(yCoordinateIntersection, 0.0).value();
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:132:12: note: FIX-IT applied suggested code changes
    double xCoordinateIntersection = plane1.calculateXFromYAndZ(yCoordinateIntersection, 0.0).value();
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:133:5: warning: variable 'point1' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point point1(xCoordinateIntersection, yCoordinateIntersection, 0.0);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:133:11: note: FIX-IT applied suggested code changes
    Point point1(xCoordinateIntersection, yCoordinateIntersection, 0.0);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:134:5: warning: variable 'point2' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point point2(
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:134:11: note: FIX-IT applied suggested code changes
    Point point2(
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:150:5: warning: variable 'planeCoefficients' of type 'Vector' (aka 'AlbaMathVector<double, 3>') can be declared 'const' [misc-const-correctness]
    Vector planeCoefficients{plane.getACoefficient(), plane.getBCoefficient(), plane.getCCoefficient()};
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:150:12: note: FIX-IT applied suggested code changes
    Vector planeCoefficients{plane.getACoefficient(), plane.getBCoefficient(), plane.getCCoefficient()};
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:151:5: warning: variable 'lineCoefficients' of type 'Vector' (aka 'AlbaMathVector<double, 3>') can be declared 'const' [misc-const-correctness]
    Vector lineCoefficients{line.getACoefficient(), line.getBCoefficient(), line.getCCoefficient()};
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:151:12: note: FIX-IT applied suggested code changes
    Vector lineCoefficients{line.getACoefficient(), line.getBCoefficient(), line.getCCoefficient()};
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:152:5: warning: variable 'perpendicularVectorPlaneAndLine' of type 'Vector' (aka 'AlbaMathVector<double, 3>') can be declared 'const' [misc-const-correctness]
    Vector perpendicularVectorPlaneAndLine(getCrossProduct(planeCoefficients, lineCoefficients));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:152:12: note: FIX-IT applied suggested code changes
    Vector perpendicularVectorPlaneAndLine(getCrossProduct(planeCoefficients, lineCoefficients));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:153:5: warning: variable 'directionCoefficients' of type 'Vector' (aka 'AlbaMathVector<double, 3>') can be declared 'const' [misc-const-correctness]
    Vector directionCoefficients(getCrossProduct(planeCoefficients, perpendicularVectorPlaneAndLine));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:153:12: note: FIX-IT applied suggested code changes
    Vector directionCoefficients(getCrossProduct(planeCoefficients, perpendicularVectorPlaneAndLine));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:154:5: warning: variable 'pointInLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointInLine(getPointOfIntersectionOfAPlaneAndALine(plane, line));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:154:11: note: FIX-IT applied suggested code changes
    Point pointInLine(getPointOfIntersectionOfAPlaneAndALine(plane, line));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:161:5: warning: variable 'point1InLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point point1InLine(line.getXInitialValue(), line.getYInitialValue(), line.getZInitialValue());
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:161:11: note: FIX-IT applied suggested code changes
    Point point1InLine(line.getXInitialValue(), line.getYInitialValue(), line.getZInitialValue());
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:162:5: warning: variable 'point2InLine' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point point2InLine(point1InLine + Point(line.getACoefficient(), line.getBCoefficient(), line.getCCoefficient()));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:162:11: note: FIX-IT applied suggested code changes
    Point point2InLine(point1InLine + Point(line.getACoefficient(), line.getBCoefficient(), line.getCCoefficient()));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:167:5: warning: variable 'pointOfIntersection' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointOfIntersection(getPointOfIntersectionOfTwoLines(line1, line2));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:167:11: note: FIX-IT applied suggested code changes
    Point pointOfIntersection(getPointOfIntersectionOfTwoLines(line1, line2));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:168:5: warning: variable 'pointInLine1' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointInLine1(
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:168:11: note: FIX-IT applied suggested code changes
    Point pointInLine1(
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:170:5: warning: variable 'pointInLine2' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointInLine2(
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:170:11: note: FIX-IT applied suggested code changes
    Point pointInLine2(
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:176:5: warning: variable 'pointInLine1' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointInLine1(line1.getXInitialValue(), line1.getYInitialValue(), line1.getZInitialValue());
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:176:11: note: FIX-IT applied suggested code changes
    Point pointInLine1(line1.getXInitialValue(), line1.getYInitialValue(), line1.getZInitialValue());
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:177:5: warning: variable 'secondPointInLine1' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point secondPointInLine1(
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:177:11: note: FIX-IT applied suggested code changes
    Point secondPointInLine1(
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:179:5: warning: variable 'pointInLine2' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point pointInLine2(line2.getXInitialValue(), line2.getYInitialValue(), line2.getZInitialValue());
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:179:11: note: FIX-IT applied suggested code changes
    Point pointInLine2(line2.getXInitialValue(), line2.getYInitialValue(), line2.getZInitialValue());
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:193:5: warning: variable 'multiplier1' of type 'double' can be declared 'const' [misc-const-correctness]
    double multiplier1 = calculateMultiplierForIntersection(
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:193:12: note: FIX-IT applied suggested code changes
    double multiplier1 = calculateMultiplierForIntersection(
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:213:5: warning: variable 'multiplierInLineNumeratorPart' of type 'double' can be declared 'const' [misc-const-correctness]
    double multiplierInLineNumeratorPart = plane.getACoefficient() * line.getXInitialValue() +
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:213:12: note: FIX-IT applied suggested code changes
    double multiplierInLineNumeratorPart = plane.getACoefficient() * line.getXInitialValue() +
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:216:5: warning: variable 'multiplierInLineDenominatorPart' of type 'double' can be declared 'const' [misc-const-correctness]
    double multiplierInLineDenominatorPart = plane.getACoefficient() * line.getACoefficient() +
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:216:12: note: FIX-IT applied suggested code changes
    double multiplierInLineDenominatorPart = plane.getACoefficient() * line.getACoefficient() +
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:219:5: warning: variable 'multiplier' of type 'double' can be declared 'const' [misc-const-correctness]
    double multiplier = multiplierInLineNumeratorPart / multiplierInLineDenominatorPart;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:219:12: note: FIX-IT applied suggested code changes
    double multiplier = multiplierInLineNumeratorPart / multiplierInLineDenominatorPart;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:237:5: warning: variable 'delta' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point delta(point2 - point1);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:237:11: note: FIX-IT applied suggested code changes
    Point delta(point2 - point1);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:242:5: warning: variable 'perpendicularPlane' of type 'Plane' can be declared 'const' [misc-const-correctness]
    Plane perpendicularPlane(getPerpendicularPlaneOfALineAndUsingAPointInThePlane(line, point));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:242:11: note: FIX-IT applied suggested code changes
    Plane perpendicularPlane(getPerpendicularPlaneOfALineAndUsingAPointInThePlane(line, point));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:243:5: warning: variable 'nearestPoint' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point nearestPoint(getPointOfIntersectionOfAPlaneAndALine(perpendicularPlane, line));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:243:11: note: FIX-IT applied suggested code changes
    Point nearestPoint(getPointOfIntersectionOfAPlaneAndALine(perpendicularPlane, line));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:250:9: warning: variable 'pointInLine1' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
        Point pointInLine1(line1.getXInitialValue(), line1.getYInitialValue(), line1.getZInitialValue());
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:250:15: note: FIX-IT applied suggested code changes
        Point pointInLine1(line1.getXInitialValue(), line1.getYInitialValue(), line1.getZInitialValue());
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:251:9: warning: variable 'perpendicularPlane' of type 'Plane' can be declared 'const' [misc-const-correctness]
        Plane perpendicularPlane = getPerpendicularPlaneOfALineAndUsingAPointInThePlane(line1, pointInLine1);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:251:15: note: FIX-IT applied suggested code changes
        Plane perpendicularPlane = getPerpendicularPlaneOfALineAndUsingAPointInThePlane(line1, pointInLine1);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:252:9: warning: variable 'pointInLine2' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
        Point pointInLine2 = getPointOfIntersectionOfAPlaneAndALine(perpendicularPlane, line2);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:252:15: note: FIX-IT applied suggested code changes
        Point pointInLine2 = getPointOfIntersectionOfAPlaneAndALine(perpendicularPlane, line2);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:255:9: warning: variable 'perpendicularVector' of type 'Vector' (aka 'AlbaMathVector<double, 3>') can be declared 'const' [misc-const-correctness]
        Vector perpendicularVector(getCrossProduct(constructDeltaVector(line1), constructDeltaVector(line2)));
        ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:255:16: note: FIX-IT applied suggested code changes
        Vector perpendicularVector(getCrossProduct(constructDeltaVector(line1), constructDeltaVector(line2)));
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:256:9: warning: variable 'pointInLine1' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
        Point pointInLine1(line1.getXInitialValue(), line1.getYInitialValue(), line1.getZInitialValue());
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:256:15: note: FIX-IT applied suggested code changes
        Point pointInLine1(line1.getXInitialValue(), line1.getYInitialValue(), line1.getZInitialValue());
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:257:9: warning: variable 'pointInLine2' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
        Point pointInLine2(line2.getXInitialValue(), line2.getYInitialValue(), line2.getZInitialValue());
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:257:15: note: FIX-IT applied suggested code changes
        Point pointInLine2(line2.getXInitialValue(), line2.getYInitialValue(), line2.getZInitialValue());
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:259:9: warning: variable 'plane1' of type 'Plane' can be declared 'const' [misc-const-correctness]
        Plane plane1(
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:259:15: note: FIX-IT applied suggested code changes
        Plane plane1(
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:262:9: warning: variable 'plane2' of type 'Plane' can be declared 'const' [misc-const-correctness]
        Plane plane2(
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:262:15: note: FIX-IT applied suggested code changes
        Plane plane2(
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:274:9: warning: variable 'perpendicularLine' of type 'Line' can be declared 'const' [misc-const-correctness]
        Line perpendicularLine(
        ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:274:14: note: FIX-IT applied suggested code changes
        Line perpendicularLine(
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:276:9: warning: variable 'point1' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
        Point point1(getPointOfIntersectionOfAPlaneAndALine(plane1, perpendicularLine));
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:276:15: note: FIX-IT applied suggested code changes
        Point point1(getPointOfIntersectionOfAPlaneAndALine(plane1, perpendicularLine));
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:277:9: warning: variable 'point2' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
        Point point2(getPointOfIntersectionOfAPlaneAndALine(plane2, perpendicularLine));
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:277:15: note: FIX-IT applied suggested code changes
        Point point2(getPointOfIntersectionOfAPlaneAndALine(plane2, perpendicularLine));
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:285:5: warning: variable 'numeratorPart' of type 'double' can be declared 'const' [misc-const-correctness]
    double numeratorPart = getDotProduct(deltaVector1, deltaVector2);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:285:12: note: FIX-IT applied suggested code changes
    double numeratorPart = getDotProduct(deltaVector1, deltaVector2);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:286:5: warning: variable 'denominatorPart' of type 'double' can be declared 'const' [misc-const-correctness]
    double denominatorPart = deltaVector1.getMagnitude() * deltaVector2.getMagnitude();
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:286:12: note: FIX-IT applied suggested code changes
    double denominatorPart = deltaVector1.getMagnitude() * deltaVector2.getMagnitude();
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:310:5: warning: variable 'point1' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point point1(line.getXInitialValue(), line.getYInitialValue(), line.getZInitialValue());
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:310:11: note: FIX-IT applied suggested code changes
    Point point1(line.getXInitialValue(), line.getYInitialValue(), line.getZInitialValue());
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:311:5: warning: variable 'point2' of type 'Point' (aka 'AlbaXYZ<double>') can be declared 'const' [misc-const-correctness]
    Point point2(point1 + Point(line.getACoefficient(), line.getBCoefficient(), line.getCCoefficient()));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\ThreeDimensions\Utilities\ThreeDimensionsUtilities.cpp:311:11: note: FIX-IT applied suggested code changes
    Point point2(point1 + Point(line.getACoefficient(), line.getBCoefficient(), line.getCCoefficient()));
          ^
[58/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Circle.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:42:5: warning: variable 'pointsInFirstQuarter' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points pointsInFirstQuarter(getPointsInTraversingXAndY(1, 1, interval));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:42:12: note: FIX-IT applied suggested code changes
    Points pointsInFirstQuarter(getPointsInTraversingXAndY(1, 1, interval));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:43:5: warning: variable 'pointsInSecondQuarter' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points pointsInSecondQuarter(getPointsInTraversingXAndY(-1, 1, interval));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:43:12: note: FIX-IT applied suggested code changes
    Points pointsInSecondQuarter(getPointsInTraversingXAndY(-1, 1, interval));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:44:5: warning: variable 'pointsInThirdQuarter' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points pointsInThirdQuarter(getPointsInTraversingXAndY(-1, -1, interval));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:44:12: note: FIX-IT applied suggested code changes
    Points pointsInThirdQuarter(getPointsInTraversingXAndY(-1, -1, interval));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:45:5: warning: variable 'pointsInFourthQuarter' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points pointsInFourthQuarter(getPointsInTraversingXAndY(1, -1, interval));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:45:12: note: FIX-IT applied suggested code changes
    Points pointsInFourthQuarter(getPointsInTraversingXAndY(1, -1, interval));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:66:5: warning: variable 'discriminant' of type 'double' can be declared 'const' [misc-const-correctness]
    double discriminant = m_radiusSquared - pow(x - m_center.getX(), 2);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:66:12: note: FIX-IT applied suggested code changes
    double discriminant = m_radiusSquared - pow(x - m_center.getX(), 2);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:75:5: warning: variable 'discriminant' of type 'double' can be declared 'const' [misc-const-correctness]
    double discriminant = m_radiusSquared - pow(y - m_center.getY(), 2);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:75:12: note: FIX-IT applied suggested code changes
    double discriminant = m_radiusSquared - pow(y - m_center.getY(), 2);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:84:5: warning: variable 'discriminant' of type 'double' can be declared 'const' [misc-const-correctness]
    double discriminant = m_radiusSquared - pow(x, 2);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:84:12: note: FIX-IT applied suggested code changes
    double discriminant = m_radiusSquared - pow(x, 2);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:93:5: warning: variable 'discriminant' of type 'double' can be declared 'const' [misc-const-correctness]
    double discriminant = m_radiusSquared - pow(y, 2);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:93:12: note: FIX-IT applied suggested code changes
    double discriminant = m_radiusSquared - pow(y, 2);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:106:5: warning: Variable 'y' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
    for (double y = 0; y <= m_radius; y += interval) {
    ^                  ~              ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:106:5: note: Variable 'y' with floating point type 'double' should not be used as a loop counter
    for (double y = 0; y <= m_radius; y += interval) {
    ^                  ~              ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:109:13: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
            for (double x = 0; x <= xAtTheEdgeOfCircleOptional.value(); x += interval) {
            ^                  ~                                        ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:109:13: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
            for (double x = 0; x <= xAtTheEdgeOfCircleOptional.value(); x += interval) {
            ^                  ~                                        ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:130:5: warning: variable 'deltaX' of type 'double' can be declared 'const' [misc-const-correctness]
    double deltaX = cos(angleInRadians) * m_radius;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:130:12: note: FIX-IT applied suggested code changes
    double deltaX = cos(angleInRadians) * m_radius;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:131:5: warning: variable 'deltaY' of type 'double' can be declared 'const' [misc-const-correctness]
    double deltaY = sin(angleInRadians) * m_radius;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:131:12: note: FIX-IT applied suggested code changes
    double deltaY = sin(angleInRadians) * m_radius;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:137:5: warning: variable 'pointsFromTraversingX' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points pointsFromTraversingX(getPointsInTraversingX(signOfX, signOfY, interval));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:137:12: note: FIX-IT applied suggested code changes
    Points pointsFromTraversingX(getPointsInTraversingX(signOfX, signOfY, interval));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:138:5: warning: variable 'pointsFromTraversingY' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points pointsFromTraversingY(getPointsInTraversingY(signOfX, signOfY, interval));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:138:12: note: FIX-IT applied suggested code changes
    Points pointsFromTraversingY(getPointsInTraversingY(signOfX, signOfY, interval));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:153:5: warning: variable 'yRange' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
    AlbaValueRange<double> yRange(m_center.getY(), m_center.getY() + (m_radius * signOfY), interval);
    ^
                           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:153:28: note: FIX-IT applied suggested code changes
    AlbaValueRange<double> yRange(m_center.getY(), m_center.getY() + (m_radius * signOfY), interval);
                           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:165:5: warning: variable 'xRange' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
    AlbaValueRange<double> xRange(m_center.getX(), m_center.getX() + (m_radius * signOfX), interval);
    ^
                           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:165:28: note: FIX-IT applied suggested code changes
    AlbaValueRange<double> xRange(m_center.getX(), m_center.getX() + (m_radius * signOfX), interval);
                           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:177:5: warning: variable 'xPart' of type 'double' can be declared 'const' [misc-const-correctness]
    double xPart = d / a / 2;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:177:12: note: FIX-IT applied suggested code changes
    double xPart = d / a / 2;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:178:5: warning: variable 'yPart' of type 'double' can be declared 'const' [misc-const-correctness]
    double yPart = e / a / 2;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:178:12: note: FIX-IT applied suggested code changes
    double yPart = e / a / 2;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:190:5: warning: variable 'deltaPoint' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point deltaPoint(point.getX() - m_center.getX(), point.getY() - m_center.getY());
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:190:11: note: FIX-IT applied suggested code changes
    Point deltaPoint(point.getX() - m_center.getX(), point.getY() - m_center.getY());
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:191:5: warning: variable 'angle' of type 'double' can be declared 'const' [misc-const-correctness]
    double angle = atan(deltaPoint.getY() / deltaPoint.getX());
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:191:12: note: FIX-IT applied suggested code changes
    double angle = atan(deltaPoint.getY() / deltaPoint.getX());
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:192:5: warning: variable 'nearestDeltaPointX' of type 'double' can be declared 'const' [misc-const-correctness]
    double nearestDeltaPointX = cos(angle) * m_radius * getSign(deltaPoint.getX());
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:192:12: note: FIX-IT applied suggested code changes
    double nearestDeltaPointX = cos(angle) * m_radius * getSign(deltaPoint.getX());
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:193:5: warning: variable 'nearestDeltaPointY' of type 'double' can be declared 'const' [misc-const-correctness]
    double nearestDeltaPointY = sin(angle) * m_radius * getSign(deltaPoint.getY());
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Circle.cpp:193:12: note: FIX-IT applied suggested code changes
    double nearestDeltaPointY = sin(angle) * m_radius * getSign(deltaPoint.getY());
           ^
[59/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Ellipse.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:48:5: warning: variable 'a' of type 'double' can be declared 'const' [misc-const-correctness]
    double a(m_aValue);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:48:12: note: FIX-IT applied suggested code changes
    double a(m_aValue);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:49:5: warning: variable 'b' of type 'double' can be declared 'const' [misc-const-correctness]
    double b(m_bValue);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:49:12: note: FIX-IT applied suggested code changes
    double b(m_bValue);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:53:9: warning: variable 'c' of type 'double' can be declared 'const' [misc-const-correctness]
        double c(getCValue());
        ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:53:16: note: FIX-IT applied suggested code changes
        double c(getCValue());
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:57:9: warning: variable 'c' of type 'double' can be declared 'const' [misc-const-correctness]
        double c(getCValue());
        ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:57:16: note: FIX-IT applied suggested code changes
        double c(getCValue());
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:95:9: warning: variable 'pointsInFirstQuarter' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
        Points pointsInFirstQuarter(getPointsInTraversingXAndY(1, 1, interval));
        ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:95:16: note: FIX-IT applied suggested code changes
        Points pointsInFirstQuarter(getPointsInTraversingXAndY(1, 1, interval));
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:96:9: warning: variable 'pointsInSecondQuarter' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
        Points pointsInSecondQuarter(getPointsInTraversingXAndY(-1, 1, interval));
        ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:96:16: note: FIX-IT applied suggested code changes
        Points pointsInSecondQuarter(getPointsInTraversingXAndY(-1, 1, interval));
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:97:9: warning: variable 'pointsInThirdQuarter' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
        Points pointsInThirdQuarter(getPointsInTraversingXAndY(-1, -1, interval));
        ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:97:16: note: FIX-IT applied suggested code changes
        Points pointsInThirdQuarter(getPointsInTraversingXAndY(-1, -1, interval));
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:98:9: warning: variable 'pointsInFourthQuarter' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
        Points pointsInFourthQuarter(getPointsInTraversingXAndY(1, -1, interval));
        ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:98:16: note: FIX-IT applied suggested code changes
        Points pointsInFourthQuarter(getPointsInTraversingXAndY(1, -1, interval));
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:117:5: warning: variable 'aSquared' of type 'double' can be declared 'const' [misc-const-correctness]
    double aSquared(pow(m_aValue, 2));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:117:12: note: FIX-IT applied suggested code changes
    double aSquared(pow(m_aValue, 2));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:118:5: warning: variable 'bSquared' of type 'double' can be declared 'const' [misc-const-correctness]
    double bSquared(pow(m_bValue, 2));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:118:12: note: FIX-IT applied suggested code changes
    double bSquared(pow(m_bValue, 2));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:134:5: warning: variable 'c' of type 'double' can be declared 'const' [misc-const-correctness]
    double c(getCValue());
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:134:12: note: FIX-IT applied suggested code changes
    double c(getCValue());
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:188:5: warning: Variable 'y' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
    for (double y = 0; y <= m_bValue; y += interval) {
    ^                  ~              ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:188:5: note: Variable 'y' with floating point type 'double' should not be used as a loop counter
    for (double y = 0; y <= m_bValue; y += interval) {
    ^                  ~              ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:189:9: warning: variable 'xAtTheEdgeOfEllipse' of type 'double' can be declared 'const' [misc-const-correctness]
        double xAtTheEdgeOfEllipse(calculateXFromYWithoutCenter(y, 1));
        ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:189:16: note: FIX-IT applied suggested code changes
        double xAtTheEdgeOfEllipse(calculateXFromYWithoutCenter(y, 1));
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:190:9: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
        for (double x = 0; x <= xAtTheEdgeOfEllipse; x += interval) {
        ^                  ~                         ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:190:9: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
        for (double x = 0; x <= xAtTheEdgeOfEllipse; x += interval) {
        ^                  ~                         ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:205:5: warning: variable 'pointsFromTraversingX' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points pointsFromTraversingX(getPointsInTraversingX(signOfX, signOfY, interval));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:205:12: note: FIX-IT applied suggested code changes
    Points pointsFromTraversingX(getPointsInTraversingX(signOfX, signOfY, interval));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:206:5: warning: variable 'pointsFromTraversingY' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points pointsFromTraversingY(getPointsInTraversingY(signOfX, signOfY, interval));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:206:12: note: FIX-IT applied suggested code changes
    Points pointsFromTraversingY(getPointsInTraversingY(signOfX, signOfY, interval));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:221:5: warning: variable 'yRange' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
    AlbaValueRange<double> yRange(m_center.getY(), m_center.getY() + (m_bValue * signOfY), interval);
    ^
                           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:221:28: note: FIX-IT applied suggested code changes
    AlbaValueRange<double> yRange(m_center.getY(), m_center.getY() + (m_bValue * signOfY), interval);
                           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:228:5: warning: variable 'xRange' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
    AlbaValueRange<double> xRange(m_center.getX(), m_center.getX() + (m_aValue * signOfX), interval);
    ^
                           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Ellipse.cpp:228:28: note: FIX-IT applied suggested code changes
    AlbaValueRange<double> xRange(m_center.getX(), m_center.getX() + (m_aValue * signOfX), interval);
                           ^
[60/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Hyperbola.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:39:9: warning: variable 'c' of type 'double' can be declared 'const' [misc-const-correctness]
        double c(getCValue());
        ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:39:16: note: FIX-IT applied suggested code changes
        double c(getCValue());
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:43:9: warning: variable 'c' of type 'double' can be declared 'const' [misc-const-correctness]
        double c(getCValue());
        ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:43:16: note: FIX-IT applied suggested code changes
        double c(getCValue());
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:56:9: warning: variable 'bPositive' of type 'double' can be declared 'const' [misc-const-correctness]
        double bPositive = getAbsoluteValue(m_bValue);
        ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:56:16: note: FIX-IT applied suggested code changes
        double bPositive = getAbsoluteValue(m_bValue);
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:66:9: warning: variable 'pointsInFirstQuarter' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
        Points pointsInFirstQuarter(getPointsInTraversingXAndY(1, 1, interval));
        ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:66:16: note: FIX-IT applied suggested code changes
        Points pointsInFirstQuarter(getPointsInTraversingXAndY(1, 1, interval));
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:67:9: warning: variable 'pointsInFourthQuarter' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
        Points pointsInFourthQuarter(getPointsInTraversingXAndY(1, -1, interval));
        ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:67:16: note: FIX-IT applied suggested code changes
        Points pointsInFourthQuarter(getPointsInTraversingXAndY(1, -1, interval));
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:68:9: warning: variable 'pointsInSecondQuarter' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
        Points pointsInSecondQuarter(getPointsInTraversingXAndY(-1, 1, interval));
        ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:68:16: note: FIX-IT applied suggested code changes
        Points pointsInSecondQuarter(getPointsInTraversingXAndY(-1, 1, interval));
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:69:9: warning: variable 'pointsInThirdQuarter' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
        Points pointsInThirdQuarter(getPointsInTraversingXAndY(-1, -1, interval));
        ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:69:16: note: FIX-IT applied suggested code changes
        Points pointsInThirdQuarter(getPointsInTraversingXAndY(-1, -1, interval));
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:105:5: warning: variable 'pointsFromTraversingX' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points pointsFromTraversingX(getPointsInTraversingX(signOfX, signOfY, interval));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:105:12: note: FIX-IT applied suggested code changes
    Points pointsFromTraversingX(getPointsInTraversingX(signOfX, signOfY, interval));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:106:5: warning: variable 'pointsFromTraversingY' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points pointsFromTraversingY(getPointsInTraversingY(signOfX, signOfY, interval));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:106:12: note: FIX-IT applied suggested code changes
    Points pointsFromTraversingY(getPointsInTraversingY(signOfX, signOfY, interval));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:125:5: warning: variable 'yRange' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
    AlbaValueRange<double> yRange(m_center.getY(), m_center.getY() + (m_bValue * signOfY), interval);
    ^
                           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:125:28: note: FIX-IT applied suggested code changes
    AlbaValueRange<double> yRange(m_center.getY(), m_center.getY() + (m_bValue * signOfY), interval);
                           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:132:5: warning: variable 'stepValue' of type 'double' can be declared 'const' [misc-const-correctness]
    double stepValue(m_aValue * signOfX);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:132:12: note: FIX-IT applied suggested code changes
    double stepValue(m_aValue * signOfX);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:133:5: warning: variable 'xRange' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
    AlbaValueRange<double> xRange(
    ^
                           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Hyperbola.cpp:133:28: note: FIX-IT applied suggested code changes
    AlbaValueRange<double> xRange(
                           ^
[61/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Limacon.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Limacon.cpp:34:5: warning: variable 'ratio' of type 'double' can be declared 'const' [misc-const-correctness]
    double ratio(getAbsoluteValue(m_aValue / m_bValue));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Limacon.cpp:34:12: note: FIX-IT applied suggested code changes
    double ratio(getAbsoluteValue(m_aValue / m_bValue));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Limacon.cpp:52:9: warning: variable 'limit' of type 'AlbaAngle' can be declared 'const' [misc-const-correctness]
        AlbaAngle limit(AngleUnitType::Degrees, 360);
        ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Limacon.cpp:52:19: note: FIX-IT applied suggested code changes
        AlbaAngle limit(AngleUnitType::Degrees, 360);
                  ^
[62/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Line.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:20:5: warning: variable 'deltaY' of type 'double' can be declared 'const' [misc-const-correctness]
    double deltaY = second.getY() - first.getY();
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:20:12: note: FIX-IT applied suggested code changes
    double deltaY = second.getY() - first.getY();
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:21:5: warning: variable 'deltaX' of type 'double' can be declared 'const' [misc-const-correctness]
    double deltaX = second.getX() - first.getX();
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:21:12: note: FIX-IT applied suggested code changes
    double deltaX = second.getX() - first.getX();
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:32:5: warning: variable 'deltaX' of type 'double' can be declared 'const' [misc-const-correctness]
    double deltaX = aCoefficient;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:32:12: note: FIX-IT applied suggested code changes
    double deltaX = aCoefficient;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:33:5: warning: variable 'deltaY' of type 'double' can be declared 'const' [misc-const-correctness]
    double deltaY = bCoefficient;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:33:12: note: FIX-IT applied suggested code changes
    double deltaY = bCoefficient;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:38:5: warning: variable 'commonFactor1' of type 'double' can be declared 'const' [misc-const-correctness]
    double commonFactor1 = (m_aCoefficient != 0)   ? m_aCoefficient
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:38:12: note: FIX-IT applied suggested code changes
    double commonFactor1 = (m_aCoefficient != 0)   ? m_aCoefficient
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:42:5: warning: variable 'commonFactor2' of type 'double' can be declared 'const' [misc-const-correctness]
    double commonFactor2 = (line.m_aCoefficient != 0)   ? line.m_aCoefficient
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:42:12: note: FIX-IT applied suggested code changes
    double commonFactor2 = (line.m_aCoefficient != 0)   ? line.m_aCoefficient
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:139:5: warning: variable 'isNegativeDeltaY' of type 'bool' can be declared 'const' [misc-const-correctness]
    bool isNegativeDeltaY = (deltaY < 0);
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:139:10: note: FIX-IT applied suggested code changes
    bool isNegativeDeltaY = (deltaY < 0);
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:140:5: warning: variable 'isNegativeDeltaX' of type 'bool' can be declared 'const' [misc-const-correctness]
    bool isNegativeDeltaX = (deltaX < 0);
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:140:10: note: FIX-IT applied suggested code changes
    bool isNegativeDeltaX = (deltaX < 0);
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:157:5: warning: variable 'isNegativeA' of type 'bool' can be declared 'const' [misc-const-correctness]
    bool isNegativeA = (aCoefficient < 0);
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:157:10: note: FIX-IT applied suggested code changes
    bool isNegativeA = (aCoefficient < 0);
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:158:5: warning: variable 'isNegativeB' of type 'bool' can be declared 'const' [misc-const-correctness]
    bool isNegativeB = (bCoefficient < 0);
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:158:10: note: FIX-IT applied suggested code changes
    bool isNegativeB = (bCoefficient < 0);
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:176:5: warning: variable 'range' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
    AlbaValueRange<double> range(first.getY(), second.getY(), interval);
    ^
                           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:176:28: note: FIX-IT applied suggested code changes
    AlbaValueRange<double> range(first.getY(), second.getY(), interval);
                           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:183:5: warning: variable 'range' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
    AlbaValueRange<double> range(first.getX(), second.getX(), interval);
    ^
                           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:183:28: note: FIX-IT applied suggested code changes
    AlbaValueRange<double> range(first.getX(), second.getX(), interval);
                           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:204:9: warning: variable 'startingPoint' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point startingPoint(popNearestPoint(pointsAtBorder, first));
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:204:15: note: FIX-IT applied suggested code changes
        Point startingPoint(popNearestPoint(pointsAtBorder, first));
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:205:9: warning: variable 'endPoint' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point endPoint(popNearestPoint(pointsAtBorder, second));
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:205:15: note: FIX-IT applied suggested code changes
        Point endPoint(popNearestPoint(pointsAtBorder, second));
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:206:9: warning: variable 'isDirectionAscendingForX' of type 'bool' can be declared 'const' [misc-const-correctness]
        bool isDirectionAscendingForX = startingPoint.getX() <= endPoint.getX();
        ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:206:14: note: FIX-IT applied suggested code changes
        bool isDirectionAscendingForX = startingPoint.getX() <= endPoint.getX();
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:209:9: warning: variable 'rangeForX' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
        AlbaValueRange<double> rangeForX(startingPoint.getX(), endPoint.getX(), interval);
        ^
                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:209:32: note: FIX-IT applied suggested code changes
        AlbaValueRange<double> rangeForX(startingPoint.getX(), endPoint.getX(), interval);
                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:215:9: warning: variable 'rangeForY' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
        AlbaValueRange<double> rangeForY(startingPoint.getY(), endPoint.getY(), interval);
        ^
                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Line.cpp:215:32: note: FIX-IT applied suggested code changes
        AlbaValueRange<double> rangeForY(startingPoint.getY(), endPoint.getY(), interval);
                               ^
[63/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Polygon.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:17:5: warning: variable 'limit' of type 'int' can be declared 'const' [misc-const-correctness]
    int limit = min(numberOfVertices, static_cast<int>(vertices.size()));
    ^
        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:17:9: note: FIX-IT applied suggested code changes
    int limit = min(numberOfVertices, static_cast<int>(vertices.size()));
        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:23:5: warning: variable 'lengthOfSides' of type 'Distances' (aka 'array<double, 3>') can be declared 'const' [misc-const-correctness]
    Distances lengthOfSides(getLengthOfSides());
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:23:15: note: FIX-IT applied suggested code changes
    Distances lengthOfSides(getLengthOfSides());
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:31:5: warning: variable 'anglesAtVertices' of type 'AlbaAngles' (aka 'vector<AlbaAngle>') can be declared 'const' [misc-const-correctness]
    AlbaAngles anglesAtVertices(getAnglesAtVertices());
    ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:31:16: note: FIX-IT applied suggested code changes
    AlbaAngles anglesAtVertices(getAnglesAtVertices());
               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:47:5: warning: variable 'sizeMinusOne' of type 'int' can be declared 'const' [misc-const-correctness]
    int sizeMinusOne = static_cast<int>(m_vertices.size()) - 1;
    ^
        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:47:9: note: FIX-IT applied suggested code changes
    int sizeMinusOne = static_cast<int>(m_vertices.size()) - 1;
        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:58:5: warning: variable 'sizeMinusOne' of type 'int' can be declared 'const' [misc-const-correctness]
    int sizeMinusOne = static_cast<int>(m_vertices.size()) - 1;
    ^
        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:58:9: note: FIX-IT applied suggested code changes
    int sizeMinusOne = static_cast<int>(m_vertices.size()) - 1;
        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:69:5: warning: variable 'sizeMinusOne' of type 'int' can be declared 'const' [misc-const-correctness]
    int sizeMinusOne = static_cast<int>(m_vertices.size()) - 1;
    ^
        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:69:9: note: FIX-IT applied suggested code changes
    int sizeMinusOne = static_cast<int>(m_vertices.size()) - 1;
        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:85:5: warning: variable 'sizeMinusOne' of type 'int' can be declared 'const' [misc-const-correctness]
    int sizeMinusOne = static_cast<int>(m_vertices.size()) - 1;
    ^
        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:85:9: note: FIX-IT applied suggested code changes
    int sizeMinusOne = static_cast<int>(m_vertices.size()) - 1;
        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:105:5: warning: variable 'sizeMinusOne' of type 'int' can be declared 'const' [misc-const-correctness]
    int sizeMinusOne = static_cast<int>(m_vertices.size()) - 1;
    ^
        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:105:9: note: FIX-IT applied suggested code changes
    int sizeMinusOne = static_cast<int>(m_vertices.size()) - 1;
        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:118:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(firstPoint, secondPoint);
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:118:10: note: FIX-IT applied suggested code changes
    Line line(firstPoint, secondPoint);
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:119:5: warning: variable 'pointsFromCurrentLine' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points pointsFromCurrentLine(line.getPointsWithoutLastPoint(firstPoint, secondPoint, interval));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Polygon.cpp:119:12: note: FIX-IT applied suggested code changes
    Points pointsFromCurrentLine(line.getPointsWithoutLastPoint(firstPoint, secondPoint, interval));
           ^
[64/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Quadrilateral.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:20:5: warning: variable 'groupOfPointsBasedOnYValue' of type 'GroupOfPoints' (aka 'vector<vector<AlbaXY<double>>>') can be declared 'const' [misc-const-correctness]
    GroupOfPoints groupOfPointsBasedOnYValue(getGroupOfPointsBasedOnYValue());
    ^
                  const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:20:19: note: FIX-IT applied suggested code changes
    GroupOfPoints groupOfPointsBasedOnYValue(getGroupOfPointsBasedOnYValue());
                  ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:21:5: warning: variable 'listOfStartEndOfXAndY' of type 'ListOfStartEndOfXAndY' (aka 'vector<StartEndOfXAndY>') can be declared 'const' [misc-const-correctness]
    ListOfStartEndOfXAndY listOfStartEndOfXAndY(getStartEndForXs(groupOfPointsBasedOnYValue, interval));
    ^
                          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:21:27: note: FIX-IT applied suggested code changes
    ListOfStartEndOfXAndY listOfStartEndOfXAndY(getStartEndForXs(groupOfPointsBasedOnYValue, interval));
                          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:23:9: warning: variable 'rangeForX' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
        AlbaValueRange<double> rangeForX(startEndOfXAndY.xStart, startEndOfXAndY.xEnd, interval);
        ^
                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:23:32: note: FIX-IT applied suggested code changes
        AlbaValueRange<double> rangeForX(startEndOfXAndY.xStart, startEndOfXAndY.xEnd, interval);
                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:31:5: warning: variable 'groupSize' of type 'int' can be declared 'const' [misc-const-correctness]
    int groupSize = groupOfPointsBasedOnYValue.size();
    ^
        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:31:9: note: FIX-IT applied suggested code changes
    int groupSize = groupOfPointsBasedOnYValue.size();
        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:31:21: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int groupSize = groupOfPointsBasedOnYValue.size();
                    ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:65:5: warning: variable 'points1Size' of type 'int' can be declared 'const' [misc-const-correctness]
    int points1Size = points1.size();
    ^
        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:65:9: note: FIX-IT applied suggested code changes
    int points1Size = points1.size();
        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:65:23: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int points1Size = points1.size();
                      ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:66:5: warning: variable 'points2Size' of type 'int' can be declared 'const' [misc-const-correctness]
    int points2Size = points2.size();
    ^
        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:66:9: note: FIX-IT applied suggested code changes
    int points2Size = points2.size();
        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:66:23: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int points2Size = points2.size();
                      ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:68:9: warning: variable 'point1' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point1(points1[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:68:15: note: FIX-IT applied suggested code changes
        Point point1(points1[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:69:9: warning: variable 'point21' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point21(points2[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:69:15: note: FIX-IT applied suggested code changes
        Point point21(points2[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:70:9: warning: variable 'point23' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point23(points2[2]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:70:15: note: FIX-IT applied suggested code changes
        Point point23(points2[2]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:73:9: warning: variable 'rangeForY' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
        AlbaValueRange<double> rangeForY(point1.getY(), point21.getY(), interval);
        ^
                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:73:32: note: FIX-IT applied suggested code changes
        AlbaValueRange<double> rangeForY(point1.getY(), point21.getY(), interval);
                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:78:9: warning: variable 'point11' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point11(points1[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:78:15: note: FIX-IT applied suggested code changes
        Point point11(points1[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:79:9: warning: variable 'point12' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point12(points1[1]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:79:15: note: FIX-IT applied suggested code changes
        Point point12(points1[1]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:80:9: warning: variable 'point21' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point21(points2[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:80:15: note: FIX-IT applied suggested code changes
        Point point21(points2[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:81:9: warning: variable 'point22' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point22(points2[1]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:81:15: note: FIX-IT applied suggested code changes
        Point point22(points2[1]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:84:9: warning: variable 'rangeForY' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
        AlbaValueRange<double> rangeForY(point11.getY(), point21.getY(), interval);
        ^
                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:84:32: note: FIX-IT applied suggested code changes
        AlbaValueRange<double> rangeForY(point11.getY(), point21.getY(), interval);
                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:89:9: warning: variable 'point11' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point11(points1[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:89:15: note: FIX-IT applied suggested code changes
        Point point11(points1[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:90:9: warning: variable 'point13' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point13(points1[2]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:90:15: note: FIX-IT applied suggested code changes
        Point point13(points1[2]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:91:9: warning: variable 'point2' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point2(points2[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:91:15: note: FIX-IT applied suggested code changes
        Point point2(points2[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:94:9: warning: variable 'rangeForY' of type 'AlbaValueRange<double>' can be declared 'const' [misc-const-correctness]
        AlbaValueRange<double> rangeForY(point11.getY(), point2.getY(), interval);
        ^
                               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:94:32: note: FIX-IT applied suggested code changes
        AlbaValueRange<double> rangeForY(point11.getY(), point2.getY(), interval);
                               ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:105:5: warning: variable 'points1Size' of type 'int' can be declared 'const' [misc-const-correctness]
    int points1Size = points1.size();
    ^
        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:105:9: note: FIX-IT applied suggested code changes
    int points1Size = points1.size();
        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:105:23: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int points1Size = points1.size();
                      ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:106:5: warning: variable 'points2Size' of type 'int' can be declared 'const' [misc-const-correctness]
    int points2Size = points2.size();
    ^
        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:106:9: note: FIX-IT applied suggested code changes
    int points2Size = points2.size();
        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:106:23: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int points2Size = points2.size();
                      ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:107:5: warning: variable 'points3Size' of type 'int' can be declared 'const' [misc-const-correctness]
    int points3Size = points3.size();
    ^
        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:107:9: note: FIX-IT applied suggested code changes
    int points3Size = points3.size();
        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:107:23: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int points3Size = points3.size();
                      ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:109:9: warning: variable 'point1' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point1(points1[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:109:15: note: FIX-IT applied suggested code changes
        Point point1(points1[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:110:9: warning: variable 'point2' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point2(points2[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:110:15: note: FIX-IT applied suggested code changes
        Point point2(points2[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:111:9: warning: variable 'point31' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point31(points3[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:111:15: note: FIX-IT applied suggested code changes
        Point point31(points3[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:112:9: warning: variable 'point32' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point32(points3[1]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:112:15: note: FIX-IT applied suggested code changes
        Point point32(points3[1]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:139:9: warning: variable 'point1' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point1(points1[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:139:15: note: FIX-IT applied suggested code changes
        Point point1(points1[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:140:9: warning: variable 'point21' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point21(points2[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:140:15: note: FIX-IT applied suggested code changes
        Point point21(points2[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:141:9: warning: variable 'point22' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point22(points2[1]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:141:15: note: FIX-IT applied suggested code changes
        Point point22(points2[1]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:142:9: warning: variable 'point3' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point3(points3[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:142:15: note: FIX-IT applied suggested code changes
        Point point3(points3[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:156:9: warning: variable 'point11' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point11(points1[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:156:15: note: FIX-IT applied suggested code changes
        Point point11(points1[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:157:9: warning: variable 'point12' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point12(points1[1]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:157:15: note: FIX-IT applied suggested code changes
        Point point12(points1[1]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:158:9: warning: variable 'point2' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point2(points2[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:158:15: note: FIX-IT applied suggested code changes
        Point point2(points2[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:159:9: warning: variable 'point3' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point3(points3[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:159:15: note: FIX-IT applied suggested code changes
        Point point3(points3[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:193:9: warning: variable 'point1' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point1(points1[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:193:15: note: FIX-IT applied suggested code changes
        Point point1(points1[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:194:9: warning: variable 'point2' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point2(points2[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:194:15: note: FIX-IT applied suggested code changes
        Point point2(points2[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:195:9: warning: variable 'point3' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point3(points3[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:195:15: note: FIX-IT applied suggested code changes
        Point point3(points3[0]);
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:196:9: warning: variable 'point4' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point point4(points4[0]);
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Quadrilateral.cpp:196:15: note: FIX-IT applied suggested code changes
        Point point4(points4[0]);
              ^
[65/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Rectangle.cpp.obj
[66/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Constructs/Triangle.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Triangle.cpp:21:5: warning: variable 'anglesAtVertices' of type 'AlbaAngles' (aka 'vector<AlbaAngle>') can be declared 'const' [misc-const-correctness]
    AlbaAngles anglesAtVertices(getAnglesAtVertices());
    ^
               const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Constructs\Triangle.cpp:21:16: note: FIX-IT applied suggested code changes
    AlbaAngles anglesAtVertices(getAnglesAtVertices());
               ^
[67/98] Building CXX object CMakeFiles/APRG_GEOMETRY.dir/D_/a/aprg/aprg/AprgGeometry/AprgGeometry/src/Geometry/TwoDimensions/Utilities/TwoDimensionsUtilities.cpp.obj
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:30:9: warning: variable 'quadrant' of type 'Quadrant' can be declared 'const' [misc-const-correctness]
        Quadrant quadrant(getQuadrantOfAPoint(point));
        ^
                 const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:30:18: note: FIX-IT applied suggested code changes
        Quadrant quadrant(getQuadrantOfAPoint(point));
                 ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:46:5: warning: variable 'deltaBA' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point deltaBA(firstPoint - commonPoint);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:46:11: note: FIX-IT applied suggested code changes
    Point deltaBA(firstPoint - commonPoint);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:47:5: warning: variable 'deltaCA' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point deltaCA(secondPoint - commonPoint);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:47:11: note: FIX-IT applied suggested code changes
    Point deltaCA(secondPoint - commonPoint);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:69:5: warning: variable 'smallerAngle' of type 'AlbaAngle' can be declared 'const' [misc-const-correctness]
    AlbaAngle smallerAngle(getTheSmallerAngleBetweenTwoLines(line1, line2));
    ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:69:15: note: FIX-IT applied suggested code changes
    AlbaAngle smallerAngle(getTheSmallerAngleBetweenTwoLines(line1, line2));
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:114:5: warning: variable 'abVector1' of type 'Vector' (aka 'AlbaMathVector<double, 2>') can be declared 'const' [misc-const-correctness]
    Vector abVector1{line1.getACoefficient(), line1.getBCoefficient()};
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:114:12: note: FIX-IT applied suggested code changes
    Vector abVector1{line1.getACoefficient(), line1.getBCoefficient()};
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:115:5: warning: variable 'abVector2' of type 'Vector' (aka 'AlbaMathVector<double, 2>') can be declared 'const' [misc-const-correctness]
    Vector abVector2{line2.getACoefficient(), line2.getBCoefficient()};
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:115:12: note: FIX-IT applied suggested code changes
    Vector abVector2{line2.getACoefficient(), line2.getBCoefficient()};
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:116:5: warning: variable 'bcVector1' of type 'Vector' (aka 'AlbaMathVector<double, 2>') can be declared 'const' [misc-const-correctness]
    Vector bcVector1{line1.getBCoefficient(), line1.getCCoefficient()};
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:116:12: note: FIX-IT applied suggested code changes
    Vector bcVector1{line1.getBCoefficient(), line1.getCCoefficient()};
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:117:5: warning: variable 'bcVector2' of type 'Vector' (aka 'AlbaMathVector<double, 2>') can be declared 'const' [misc-const-correctness]
    Vector bcVector2{line2.getBCoefficient(), line2.getCCoefficient()};
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:117:12: note: FIX-IT applied suggested code changes
    Vector bcVector2{line2.getBCoefficient(), line2.getCCoefficient()};
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:118:5: warning: variable 'acVector1' of type 'Vector' (aka 'AlbaMathVector<double, 2>') can be declared 'const' [misc-const-correctness]
    Vector acVector1{line1.getACoefficient(), line1.getCCoefficient()};
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:118:12: note: FIX-IT applied suggested code changes
    Vector acVector1{line1.getACoefficient(), line1.getCCoefficient()};
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:119:5: warning: variable 'acVector2' of type 'Vector' (aka 'AlbaMathVector<double, 2>') can be declared 'const' [misc-const-correctness]
    Vector acVector2{line2.getACoefficient(), line2.getCCoefficient()};
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:119:12: note: FIX-IT applied suggested code changes
    Vector acVector2{line2.getACoefficient(), line2.getCCoefficient()};
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:120:5: warning: variable 'abCrossProduct' of type 'double' can be declared 'const' [misc-const-correctness]
    double abCrossProduct = getCrossProduct(abVector1, abVector2);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:120:12: note: FIX-IT applied suggested code changes
    double abCrossProduct = getCrossProduct(abVector1, abVector2);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:122:5: warning: variable 'xOfIntersection' of type 'double' can be declared 'const' [misc-const-correctness]
    double xOfIntersection = getCrossProduct(bcVector1, bcVector2) / abCrossProduct;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:122:12: note: FIX-IT applied suggested code changes
    double xOfIntersection = getCrossProduct(bcVector1, bcVector2) / abCrossProduct;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:123:5: warning: variable 'yOfIntersection' of type 'double' can be declared 'const' [misc-const-correctness]
    double yOfIntersection = getCrossProduct(acVector1, acVector2) / -abCrossProduct;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:123:12: note: FIX-IT applied suggested code changes
    double yOfIntersection = getCrossProduct(acVector1, acVector2) / -abCrossProduct;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:136:5: warning: variable 'direction1' of type 'RotationDirection' can be declared 'const' [misc-const-correctness]
    RotationDirection direction1 =
    ^
                      const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:136:23: note: FIX-IT applied suggested code changes
    RotationDirection direction1 =
                      ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:138:5: warning: variable 'direction2' of type 'RotationDirection' can be declared 'const' [misc-const-correctness]
    RotationDirection direction2 =
    ^
                      const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:138:23: note: FIX-IT applied suggested code changes
    RotationDirection direction2 =
                      ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:140:5: warning: variable 'direction3' of type 'RotationDirection' can be declared 'const' [misc-const-correctness]
    RotationDirection direction3 =
    ^
                      const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:140:23: note: FIX-IT applied suggested code changes
    RotationDirection direction3 =
                      ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:142:5: warning: variable 'direction4' of type 'RotationDirection' can be declared 'const' [misc-const-correctness]
    RotationDirection direction4 =
    ^
                      const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:142:23: note: FIX-IT applied suggested code changes
    RotationDirection direction4 =
                      ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:167:5: warning: variable 'commonRatioWithDistance' of type 'double' can be declared 'const' [misc-const-correctness]
    double commonRatioWithDistance =
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:167:12: note: FIX-IT applied suggested code changes
    double commonRatioWithDistance =
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:177:5: warning: variable 'delta' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point delta(deltaX, deltaY);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:177:11: note: FIX-IT applied suggested code changes
    Point delta(deltaX, deltaY);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:183:5: warning: variable 'isXZero' of type 'bool' can be declared 'const' [misc-const-correctness]
    bool isXZero = isAlmostEqual(point.getX(), 0.0);
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:183:10: note: FIX-IT applied suggested code changes
    bool isXZero = isAlmostEqual(point.getX(), 0.0);
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:184:5: warning: variable 'isYZero' of type 'bool' can be declared 'const' [misc-const-correctness]
    bool isYZero = isAlmostEqual(point.getY(), 0.0);
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:184:10: note: FIX-IT applied suggested code changes
    bool isYZero = isAlmostEqual(point.getY(), 0.0);
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:185:5: warning: variable 'signOfX' of type 'double' can be declared 'const' [misc-const-correctness]
    double signOfX = getSign(point.getX());
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:185:12: note: FIX-IT applied suggested code changes
    double signOfX = getSign(point.getX());
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:186:5: warning: variable 'signOfY' of type 'double' can be declared 'const' [misc-const-correctness]
    double signOfY = getSign(point.getY());
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:186:12: note: FIX-IT applied suggested code changes
    double signOfY = getSign(point.getY());
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:220:5: warning: variable 'deltaBA' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point deltaBA(b - a);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:220:11: note: FIX-IT applied suggested code changes
    Point deltaBA(b - a);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:221:5: warning: variable 'deltaCA' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point deltaCA(c - a);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:221:11: note: FIX-IT applied suggested code changes
    Point deltaCA(c - a);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:223:5: warning: variable 'crossProduct' of type 'double' can be declared 'const' [misc-const-correctness]
    double crossProduct = getCrossProduct(constructVector(deltaBA), constructVector(deltaCA));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:223:12: note: FIX-IT applied suggested code changes
    double crossProduct = getCrossProduct(constructVector(deltaBA), constructVector(deltaCA));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:237:5: warning: variable 'pointInLine1' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point pointInLine1(line.getAPoint());
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:237:11: note: FIX-IT applied suggested code changes
    Point pointInLine1(line.getAPoint());
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:238:5: warning: variable 'pointInLine2' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point pointInLine2(pointInLine1 + Point(line.getAUnitIncreaseInX(), line.getAUnitIncreaseInY()));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:238:11: note: FIX-IT applied suggested code changes
    Point pointInLine2(pointInLine1 + Point(line.getAUnitIncreaseInX(), line.getAUnitIncreaseInY()));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:254:5: warning: variable 'deltaS1AndP' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point deltaS1AndP = lineSegment.first - point;
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:254:11: note: FIX-IT applied suggested code changes
    Point deltaS1AndP = lineSegment.first - point;
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:255:5: warning: variable 'deltaS2AndP' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point deltaS2AndP = lineSegment.second - point;
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:255:11: note: FIX-IT applied suggested code changes
    Point deltaS2AndP = lineSegment.second - point;
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:256:5: warning: variable 'deltaS1AndS2' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point deltaS1AndS2 = lineSegment.second - lineSegment.first;
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:256:11: note: FIX-IT applied suggested code changes
    Point deltaS1AndS2 = lineSegment.second - lineSegment.first;
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:265:9: warning: variable 'perpendicularLine' of type 'Line' can be declared 'const' [misc-const-correctness]
        Line perpendicularLine(getLineWithPerpendicularSlope(line1, Point(0, 0)));
        ^
             const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:265:14: note: FIX-IT applied suggested code changes
        Line perpendicularLine(getLineWithPerpendicularSlope(line1, Point(0, 0)));
             ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:266:9: warning: variable 'pointOfIntersectionInLine1' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point pointOfIntersectionInLine1(getIntersectionOfTwoLines(perpendicularLine, line1));
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:266:15: note: FIX-IT applied suggested code changes
        Point pointOfIntersectionInLine1(getIntersectionOfTwoLines(perpendicularLine, line1));
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:267:9: warning: variable 'pointOfIntersectionInLine2' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point pointOfIntersectionInLine2(getIntersectionOfTwoLines(perpendicularLine, line2));
        ^
              const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:267:15: note: FIX-IT applied suggested code changes
        Point pointOfIntersectionInLine2(getIntersectionOfTwoLines(perpendicularLine, line2));
              ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:276:5: warning: variable 'delta' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point delta = point2 - point1;
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:276:11: note: FIX-IT applied suggested code changes
    Point delta = point2 - point1;
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:283:5: warning: variable 'delta' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point delta = point2 - point1;
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:283:11: note: FIX-IT applied suggested code changes
    Point delta = point2 - point1;
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:293:5: warning: variable 'point1Rotated' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point point1Rotated(point1.getX() + point1.getY(), point1.getY() - point1.getX());
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:293:11: note: FIX-IT applied suggested code changes
    Point point1Rotated(point1.getX() + point1.getY(), point1.getY() - point1.getX());
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:294:5: warning: variable 'point2Rotated' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point point2Rotated(point2.getX() + point2.getY(), point2.getY() - point2.getX());
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:294:11: note: FIX-IT applied suggested code changes
    Point point2Rotated(point2.getX() + point2.getY(), point2.getY() - point2.getX());
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:295:5: warning: variable 'deltaRotated' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point deltaRotated = point1Rotated - point2Rotated;
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:295:11: note: FIX-IT applied suggested code changes
    Point deltaRotated = point1Rotated - point2Rotated;
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:322:5: warning: variable 'adjacent' of type 'double' can be declared 'const' [misc-const-correctness]
    double adjacent = deltaX1;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:322:12: note: FIX-IT applied suggested code changes
    double adjacent = deltaX1;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:323:5: warning: variable 'hypotenuse' of type 'double' can be declared 'const' [misc-const-correctness]
    double hypotenuse = getSquareRootOfXSquaredPlusYSquared(deltaX1, deltaY1);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:323:12: note: FIX-IT applied suggested code changes
    double hypotenuse = getSquareRootOfXSquaredPlusYSquared(deltaX1, deltaY1);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:329:5: warning: variable 'numeratorPart' of type 'double' can be declared 'const' [misc-const-correctness]
    double numeratorPart = getDotProduct(deltaVector1, deltaVector2);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:329:12: note: FIX-IT applied suggested code changes
    double numeratorPart = getDotProduct(deltaVector1, deltaVector2);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:330:5: warning: variable 'denominatorPart' of type 'double' can be declared 'const' [misc-const-correctness]
    double denominatorPart = deltaVector1.getMagnitude() * deltaVector2.getMagnitude();
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:330:12: note: FIX-IT applied suggested code changes
    double denominatorPart = deltaVector1.getMagnitude() * deltaVector2.getMagnitude();
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:346:5: warning: variable 'deltaBA' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point deltaBA(b - a);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:346:11: note: FIX-IT applied suggested code changes
    Point deltaBA(b - a);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:347:5: warning: variable 'deltaCA' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point deltaCA(c - a);
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:347:11: note: FIX-IT applied suggested code changes
    Point deltaCA(c - a);
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:369:5: warning: variable 's' of type 'double' can be declared 'const' [misc-const-correctness]
    double s = (sides[0] + sides[1] + sides[2]) / 2;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:369:12: note: FIX-IT applied suggested code changes
    double s = (sides[0] + sides[1] + sides[2]) / 2;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:426:5: warning: variable 'direction1' of type 'RotationDirection' can be declared 'const' [misc-const-correctness]
    RotationDirection direction1 =
    ^
                      const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:426:23: note: FIX-IT applied suggested code changes
    RotationDirection direction1 =
                      ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:428:5: warning: variable 'direction2' of type 'RotationDirection' can be declared 'const' [misc-const-correctness]
    RotationDirection direction2 =
    ^
                      const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:428:23: note: FIX-IT applied suggested code changes
    RotationDirection direction2 =
                      ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:430:5: warning: variable 'direction3' of type 'RotationDirection' can be declared 'const' [misc-const-correctness]
    RotationDirection direction3 =
    ^
                      const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:430:23: note: FIX-IT applied suggested code changes
    RotationDirection direction3 =
                      ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:432:5: warning: variable 'direction4' of type 'RotationDirection' can be declared 'const' [misc-const-correctness]
    RotationDirection direction4 =
    ^
                      const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:432:23: note: FIX-IT applied suggested code changes
    RotationDirection direction4 =
                      ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:460:5: warning: variable 'areaOfTriangleOnly' of type 'double' can be declared 'const' [misc-const-correctness]
    double areaOfTriangleOnly = getAreaOfTriangleUsingThreePoints(triangle);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:460:12: note: FIX-IT applied suggested code changes
    double areaOfTriangleOnly = getAreaOfTriangleUsingThreePoints(triangle);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:461:5: warning: variable 'areaWithPoint' of type 'double' can be declared 'const' [misc-const-correctness]
    double areaWithPoint =
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:461:12: note: FIX-IT applied suggested code changes
    double areaWithPoint =
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:476:5: warning: variable 'newA' of type 'double' can be declared 'const' [misc-const-correctness]
    double newA = parabola.getA() * line.getBCoefficient();
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:476:12: note: FIX-IT applied suggested code changes
    double newA = parabola.getA() * line.getBCoefficient();
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:477:5: warning: variable 'newB' of type 'double' can be declared 'const' [misc-const-correctness]
    double newB = (parabola.getB() * line.getBCoefficient()) + line.getACoefficient();
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:477:12: note: FIX-IT applied suggested code changes
    double newB = (parabola.getB() * line.getBCoefficient()) + line.getACoefficient();
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:478:5: warning: variable 'newC' of type 'double' can be declared 'const' [misc-const-correctness]
    double newC = (parabola.getC() * line.getBCoefficient()) + line.getCCoefficient();
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:478:12: note: FIX-IT applied suggested code changes
    double newC = (parabola.getC() * line.getBCoefficient()) + line.getCCoefficient();
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:479:5: warning: variable 'xValues' of type 'AlbaNumbers' (aka 'vector<AlbaNumber>') can be declared 'const' [misc-const-correctness]
    AlbaNumbers xValues(
    ^
                const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:479:17: note: FIX-IT applied suggested code changes
    AlbaNumbers xValues(
                ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:490:5: warning: variable 'newA' of type 'double' can be declared 'const' [misc-const-correctness]
    double newA = parabola.getA() * line.getACoefficient();
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:490:12: note: FIX-IT applied suggested code changes
    double newA = parabola.getA() * line.getACoefficient();
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:491:5: warning: variable 'newB' of type 'double' can be declared 'const' [misc-const-correctness]
    double newB = (parabola.getB() * line.getACoefficient()) + line.getBCoefficient();
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:491:12: note: FIX-IT applied suggested code changes
    double newB = (parabola.getB() * line.getACoefficient()) + line.getBCoefficient();
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:492:5: warning: variable 'newC' of type 'double' can be declared 'const' [misc-const-correctness]
    double newC = (parabola.getC() * line.getACoefficient()) + line.getCCoefficient();
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:492:12: note: FIX-IT applied suggested code changes
    double newC = (parabola.getC() * line.getACoefficient()) + line.getCCoefficient();
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:493:5: warning: variable 'yValues' of type 'AlbaNumbers' (aka 'vector<AlbaNumber>') can be declared 'const' [misc-const-correctness]
    AlbaNumbers yValues(
    ^
                const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:493:17: note: FIX-IT applied suggested code changes
    AlbaNumbers yValues(
                ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:507:13: warning: variable 'currentDistance' of type 'double' can be declared 'const' [misc-const-correctness]
            double currentDistance(getDistance(*it, point));
            ^
                   const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:507:20: note: FIX-IT applied suggested code changes
            double currentDistance(getDistance(*it, point));
                   ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:520:5: warning: variable 'sinTheta' of type 'double' can be declared 'const' [misc-const-correctness]
    double sinTheta = sin(angle.getRadians());
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:520:12: note: FIX-IT applied suggested code changes
    double sinTheta = sin(angle.getRadians());
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:521:5: warning: variable 'cosTheta' of type 'double' can be declared 'const' [misc-const-correctness]
    double cosTheta = cos(angle.getRadians());
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:521:12: note: FIX-IT applied suggested code changes
    double cosTheta = cos(angle.getRadians());
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:522:5: warning: variable 'newX' of type 'double' can be declared 'const' [misc-const-correctness]
    double newX = point.getX() * cosTheta + point.getY() * sinTheta;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:522:12: note: FIX-IT applied suggested code changes
    double newX = point.getX() * cosTheta + point.getY() * sinTheta;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:523:5: warning: variable 'newY' of type 'double' can be declared 'const' [misc-const-correctness]
    double newY = -point.getX() * sinTheta + point.getY() * cosTheta;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:523:12: note: FIX-IT applied suggested code changes
    double newY = -point.getX() * sinTheta + point.getY() * cosTheta;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:528:5: warning: variable 'sinTheta' of type 'double' can be declared 'const' [misc-const-correctness]
    double sinTheta = sin(angle.getRadians());
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:528:12: note: FIX-IT applied suggested code changes
    double sinTheta = sin(angle.getRadians());
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:529:5: warning: variable 'cosTheta' of type 'double' can be declared 'const' [misc-const-correctness]
    double cosTheta = cos(angle.getRadians());
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:529:12: note: FIX-IT applied suggested code changes
    double cosTheta = cos(angle.getRadians());
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:530:5: warning: variable 'newX' of type 'double' can be declared 'const' [misc-const-correctness]
    double newX = point.getX() * cosTheta - point.getY() * sinTheta;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:530:12: note: FIX-IT applied suggested code changes
    double newX = point.getX() * cosTheta - point.getY() * sinTheta;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:531:5: warning: variable 'newY' of type 'double' can be declared 'const' [misc-const-correctness]
    double newY = point.getX() * sinTheta + point.getY() * cosTheta;
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:531:12: note: FIX-IT applied suggested code changes
    double newY = point.getX() * sinTheta + point.getY() * cosTheta;
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:556:5: warning: variable 'line' of type 'Line' can be declared 'const' [misc-const-correctness]
    Line line(previousPoint, currentPoint);
    ^
         const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:556:10: note: FIX-IT applied suggested code changes
    Line line(previousPoint, currentPoint);
         ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:577:5: warning: variable 'innerCircle' of type 'Circle' can be declared 'const' [misc-const-correctness]
    Circle innerCircle(center, innerRadius);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:577:12: note: FIX-IT applied suggested code changes
    Circle innerCircle(center, innerRadius);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:578:5: warning: variable 'outerCircle' of type 'Circle' can be declared 'const' [misc-const-correctness]
    Circle outerCircle(center, outerRadius);
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:578:12: note: FIX-IT applied suggested code changes
    Circle outerCircle(center, outerRadius);
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:579:5: warning: Variable 'y' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
    for (double y = 0; y < outerRadius; y += interval) {
    ^                  ~                ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:579:5: note: Variable 'y' with floating point type 'double' should not be used as a loop counter
    for (double y = 0; y < outerRadius; y += interval) {
    ^                  ~                ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:583:13: warning: Variable 'x' with floating point type 'double' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
            for (double x = xAtInnerCircleOptional.value(); x < xAtOuterCircleOptional.value(); x += interval) {
            ^                                               ~                                   ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:583:13: note: Variable 'x' with floating point type 'double' should not be used as a loop counter
            for (double x = xAtInnerCircleOptional.value(); x < xAtOuterCircleOptional.value(); x += interval) {
            ^                                               ~                                   ~
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:616:5: warning: variable 'nearestPoint' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point nearestPoint(circle.getNearestPointInCircumference(point));
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:616:11: note: FIX-IT applied suggested code changes
    Point nearestPoint(circle.getNearestPointInCircumference(point));
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:617:5: warning: variable 'center' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point center(circle.getCenter());
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:617:11: note: FIX-IT applied suggested code changes
    Point center(circle.getCenter());
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:618:5: warning: variable 'deltaNearestPoint' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
    Point deltaNearestPoint(nearestPoint.getX() - center.getX(), nearestPoint.getY() - center.getY());
    ^
          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:618:11: note: FIX-IT applied suggested code changes
    Point deltaNearestPoint(nearestPoint.getX() - center.getX(), nearestPoint.getY() - center.getY());
          ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:649:5: warning: variable 'firstPoints' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points firstPoints(getPointsInSortedIncreasingX(firstPointsToBeMerged));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:649:12: note: FIX-IT applied suggested code changes
    Points firstPoints(getPointsInSortedIncreasingX(firstPointsToBeMerged));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:650:5: warning: variable 'secondPoints' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points secondPoints(getPointsInSortedIncreasingX(secondPointsToBeMerged));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:650:12: note: FIX-IT applied suggested code changes
    Points secondPoints(getPointsInSortedIncreasingX(secondPointsToBeMerged));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:674:5: warning: variable 'firstPoints' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points firstPoints(getPointsInSortedDecreasingX(firstPointsToBeMerged));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:674:12: note: FIX-IT applied suggested code changes
    Points firstPoints(getPointsInSortedDecreasingX(firstPointsToBeMerged));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:675:5: warning: variable 'secondPoints' of type 'Points' (aka 'vector<AlbaXY<double>>') can be declared 'const' [misc-const-correctness]
    Points secondPoints(getPointsInSortedDecreasingX(secondPointsToBeMerged));
    ^
           const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:675:12: note: FIX-IT applied suggested code changes
    Points secondPoints(getPointsInSortedDecreasingX(secondPointsToBeMerged));
           ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:742:24: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        int endIndex = (startIndex + 1) % points.size();
                       ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:761:5: warning: variable 'auxiliarySize' of type 'int' can be declared 'const' [misc-const-correctness]
    int auxiliarySize = auxiliary.size();
    ^
        const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:761:9: note: FIX-IT applied suggested code changes
    int auxiliarySize = auxiliary.size();
        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:761:25: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int auxiliarySize = auxiliary.size();
                        ^
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:776:9: warning: variable 'direction' of type 'RotationDirection' can be declared 'const' [misc-const-correctness]
        RotationDirection direction = getRotationDirectionTraversing3Points(firstPoint, point1, point2);
        ^
                          const 
D:\a\aprg\aprg\AprgGeometry\AprgGeometry\src\Geometry\TwoDimensions\Utilities\TwoDimensionsUtilities.cpp:776:27: note: FIX-IT applied suggested code changes
        RotationDirection direction = getRotationDirectionTraversing3Points(firstPoint, point1, point2);
                          ^
[68/98] Linking CXX static library APRG_GEOMETRY.lib
[69/98] Building CXX object CMakeFiles/APRG_STATISTICS.dir/D_/a/aprg/aprg/AprgStatistics/AprgStatistics/src/Statistics/FrequencyStatistics.cpp.obj
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\FrequencyStatistics.cpp:39:5: warning: variable 'numberOfSamples' of type 'int' can be declared 'const' [misc-const-correctness]
    int numberOfSamples = calculateNumberOfSamples(samples);
    ^
        const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\FrequencyStatistics.cpp:39:9: note: FIX-IT applied suggested code changes
    int numberOfSamples = calculateNumberOfSamples(samples);
        ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\FrequencyStatistics.cpp:47:5: warning: variable 'numberOfSamples' of type 'int' can be declared 'const' [misc-const-correctness]
    int numberOfSamples = calculateNumberOfSamples(samples);
    ^
        const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\FrequencyStatistics.cpp:47:9: note: FIX-IT applied suggested code changes
    int numberOfSamples = calculateNumberOfSamples(samples);
        ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\FrequencyStatistics.cpp:48:5: warning: variable 'medianLocation' of type 'double' can be declared 'const' [misc-const-correctness]
    double medianLocation = (static_cast<double>(numberOfSamples) + 1) / 2;
    ^
           const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\FrequencyStatistics.cpp:48:12: note: FIX-IT applied suggested code changes
    double medianLocation = (static_cast<double>(numberOfSamples) + 1) / 2;
           ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\FrequencyStatistics.cpp:54:9: warning: variable 'minimumValueOffset' of type 'int' can be declared 'const' [misc-const-correctness]
        int minimumValueOffset = (frequencyPair.second > 0) ? 1 : 0;
        ^
            const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\FrequencyStatistics.cpp:54:13: note: FIX-IT applied suggested code changes
        int minimumValueOffset = (frequencyPair.second > 0) ? 1 : 0;
            ^
[70/98] Building CXX object CMakeFiles/APRG_STATISTICS.dir/D_/a/aprg/aprg/AprgStatistics/AprgStatistics/src/Statistics/KMeansClustering.cpp.obj
[71/98] Building CXX object CMakeFiles/APRG_STATISTICS.dir/D_/a/aprg/aprg/AprgStatistics/AprgStatistics/src/Statistics/OneDimensionsStatistics.cpp.obj
[72/98] Building CXX object CMakeFiles/APRG_STATISTICS.dir/D_/a/aprg/aprg/AprgStatistics/AprgStatistics/src/Statistics/TwoDimensionsStatistics.cpp.obj
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\TwoDimensionsStatistics.cpp:17:5: warning: variable 'mean' of type 'Sample' (aka 'DataSample<2>') can be declared 'const' [misc-const-correctness]
    Sample mean(statistics.getMean());
    ^
           const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\TwoDimensionsStatistics.cpp:17:12: note: FIX-IT applied suggested code changes
    Sample mean(statistics.getMean());
           ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\TwoDimensionsStatistics.cpp:19:9: warning: variable 'differenceInMeanInX' of type 'double' can be declared 'const' [misc-const-correctness]
        double differenceInMeanInX(sample.getValueAt(0) - mean.getValueAt(0));
        ^
               const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\TwoDimensionsStatistics.cpp:19:16: note: FIX-IT applied suggested code changes
        double differenceInMeanInX(sample.getValueAt(0) - mean.getValueAt(0));
               ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\TwoDimensionsStatistics.cpp:20:9: warning: variable 'differenceInMeanInY' of type 'double' can be declared 'const' [misc-const-correctness]
        double differenceInMeanInY(sample.getValueAt(1) - mean.getValueAt(1));
        ^
               const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\TwoDimensionsStatistics.cpp:20:16: note: FIX-IT applied suggested code changes
        double differenceInMeanInY(sample.getValueAt(1) - mean.getValueAt(1));
               ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\TwoDimensionsStatistics.cpp:37:9: warning: variable 'slopeInX' of type 'double' can be declared 'const' [misc-const-correctness]
        double slopeInX(xMinusXmeanTimesYMinusYmean / xMinusXmeanSquared);
        ^
               const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\TwoDimensionsStatistics.cpp:37:16: note: FIX-IT applied suggested code changes
        double slopeInX(xMinusXmeanTimesYMinusYmean / xMinusXmeanSquared);
               ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\TwoDimensionsStatistics.cpp:38:9: warning: variable 'slopeInY' of type 'double' can be declared 'const' [misc-const-correctness]
        double slopeInY(xMinusXmeanTimesYMinusYmean / yMinusYmeanSquared);
        ^
               const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\src\Statistics\TwoDimensionsStatistics.cpp:38:16: note: FIX-IT applied suggested code changes
        double slopeInY(xMinusXmeanTimesYMinusYmean / yMinusYmeanSquared);
               ^
[73/98] Linking CXX static library APRG_STATISTICS.lib
[74/98] Building CXX object CMakeFiles/AprgBitmapManipulator.dir/src/BitmapManipulator/AnimeFilter.cpp.obj
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimeFilter.cpp:17:5: warning: variable 'inputFilePathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler inputFilePathHandler(inputFile);
    ^
                         const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimeFilter.cpp:17:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler inputFilePathHandler(inputFile);
                         ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimeFilter.cpp:18:5: warning: variable 'outputFilePathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler outputFilePathHandler(outputFile);
    ^
                         const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimeFilter.cpp:18:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler outputFilePathHandler(outputFile);
                         ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimeFilter.cpp:106:5: warning: variable 'inputFilePathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler inputFilePathHandler(inputFilePath);
    ^
                         const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimeFilter.cpp:106:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler inputFilePathHandler(inputFilePath);
                         ^
[75/98] Building CXX object CMakeFiles/AprgBitmapManipulator.dir/src/BitmapManipulator/AnimizeColor.cpp.obj
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:31:5: warning: variable 'bitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap bitmap(bitmapPath);
    ^
           const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:31:12: note: FIX-IT applied suggested code changes
    Bitmap bitmap(bitmapPath);
           ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:32:5: warning: variable 'canvas' of type 'BitmapSnippet' can be declared 'const' [misc-const-correctness]
    BitmapSnippet canvas(bitmap.getSnippetReadFromFileWholeBitmap());
    ^
                  const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:32:19: note: FIX-IT applied suggested code changes
    BitmapSnippet canvas(bitmap.getSnippetReadFromFileWholeBitmap());
                  ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:34:9: warning: variable 'hslData' of type 'HueSaturationLightnessData' can be declared 'const' [misc-const-correctness]
        HueSaturationLightnessData hslData(convertColorToHueSaturationLightnessData(color));
        ^
                                   const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:34:36: note: FIX-IT applied suggested code changes
        HueSaturationLightnessData hslData(convertColorToHueSaturationLightnessData(color));
                                   ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:66:13: warning: variable 'iterators' of type 'pair<ColorDataMap::const_iterator, ColorDataMap::const_iterator>' (aka 'pair<_Tree_const_iterator<_Tree_val<std::_Tree_simple_types<std::pair<const double, alba::AprgBitmap::AnimizeColor::ColorDetails>>>>, _Tree_const_iterator<_Tree_val<std::_Tree_simple_types<std::pair<const double, alba::AprgBitmap::AnimizeColor::ColorDetails>>>>>') can be declared 'const' [misc-const-correctness]
            pair<ColorDataMap::const_iterator, ColorDataMap::const_iterator> iterators =
            ^
                                                                             const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:66:78: note: FIX-IT applied suggested code changes
            pair<ColorDataMap::const_iterator, ColorDataMap::const_iterator> iterators =
                                                                             ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:70:13: warning: variable 'deltaX' of type 'double' can be declared 'const' [misc-const-correctness]
            double deltaX = itUpper->first - itLower->first;
            ^
                   const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:70:20: note: FIX-IT applied suggested code changes
            double deltaX = itUpper->first - itLower->first;
                   ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:71:13: warning: variable 'deltaY' of type 'double' can be declared 'const' [misc-const-correctness]
            double deltaY = itUpper->second.newValue - itLower->second.newValue;
            ^
                   const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:71:20: note: FIX-IT applied suggested code changes
            double deltaY = itUpper->second.newValue - itLower->second.newValue;
                   ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:72:13: warning: variable 'deltaXToInterpolate' of type 'double' can be declared 'const' [misc-const-correctness]
            double deltaXToInterpolate = originalValue - itLower->first;
            ^
                   const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:72:20: note: FIX-IT applied suggested code changes
            double deltaXToInterpolate = originalValue - itLower->first;
                   ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:73:13: warning: variable 'deltaYInterpolated' of type 'double' can be declared 'const' [misc-const-correctness]
            double deltaYInterpolated = deltaXToInterpolate / deltaX * deltaY;
            ^
                   const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:73:20: note: FIX-IT applied suggested code changes
            double deltaYInterpolated = deltaXToInterpolate / deltaX * deltaY;
                   ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:90:5: warning: variable 'diffOfHighestAndLowestValue' of type 'double' can be declared 'const' [misc-const-correctness]
    double diffOfHighestAndLowestValue = m_highestIncludedValue - m_lowestIncludedValue;
    ^
           const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:90:12: note: FIX-IT applied suggested code changes
    double diffOfHighestAndLowestValue = m_highestIncludedValue - m_lowestIncludedValue;
           ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:92:9: warning: variable 'currentCount' of type 'int' can be declared 'const' [misc-const-correctness]
        int currentCount = colorDataPair.second.count;
        ^
            const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:92:13: note: FIX-IT applied suggested code changes
        int currentCount = colorDataPair.second.count;
            ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:113:5: warning: variable 'bitmapPathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler bitmapPathHandler(bitmapPath);
    ^
                         const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:113:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler bitmapPathHandler(bitmapPath);
                         ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:114:5: warning: variable 'colorDataPathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler colorDataPathHandler(
    ^
                         const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\AnimizeColor.cpp:114:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler colorDataPathHandler(
                         ^
[76/98] Building CXX object CMakeFiles/AprgBitmapManipulator.dir/src/BitmapManipulator/BitmapFilters.cpp.obj
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:27:9: warning: variable 'circle' of type 'Circle' can be declared 'const' [misc-const-correctness]
        Circle circle(convertBitmapXYToPoint(centerXY), penSearchRadius);
        ^
               const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:27:16: note: FIX-IT applied suggested code changes
        Circle circle(convertBitmapXYToPoint(centerXY), penSearchRadius);
               ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:30:9: warning: variable 'snippetTraversal' of type 'BitmapSnippetTraversal' can be declared 'const' [misc-const-correctness]
        BitmapSnippetTraversal snippetTraversal(inputSnippet);
        ^
                               const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:30:32: note: FIX-IT applied suggested code changes
        BitmapSnippetTraversal snippetTraversal(inputSnippet);
                               ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:63:9: warning: variable 'isPenPoint' of type 'bool' can be declared 'const' [misc-const-correctness]
        bool isPenPoint(penPoints.isPenPoint(bitmapPoint));
        ^
             const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:63:14: note: FIX-IT applied suggested code changes
        bool isPenPoint(penPoints.isPenPoint(bitmapPoint));
             ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:73:9: warning: variable 'isPenPoint' of type 'bool' can be declared 'const' [misc-const-correctness]
        bool isPenPoint(penPoints.isPenPoint(bitmapPoint));
        ^
             const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:73:14: note: FIX-IT applied suggested code changes
        bool isPenPoint(penPoints.isPenPoint(bitmapPoint));
             ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:88:9: warning: variable 'snippetTraversal' of type 'BitmapSnippetTraversal' can be declared 'const' [misc-const-correctness]
        BitmapSnippetTraversal snippetTraversal(snippet);
        ^
                               const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:88:32: note: FIX-IT applied suggested code changes
        BitmapSnippetTraversal snippetTraversal(snippet);
                               ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:89:9: warning: variable 'penCircle' of type 'Circle' can be declared 'const' [misc-const-correctness]
        Circle penCircle(convertBitmapXYToPoint(centerPoint), pointAndPenCircleDetailsPair.second.radius);
        ^
               const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:89:16: note: FIX-IT applied suggested code changes
        Circle penCircle(convertBitmapXYToPoint(centerPoint), pointAndPenCircleDetailsPair.second.radius);
               ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:119:9: warning: variable 'centerPoint' of type 'BitmapXY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
        BitmapXY centerPoint(traversal.getNextPoint());
        ^
                 const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:119:18: note: FIX-IT applied suggested code changes
        BitmapXY centerPoint(traversal.getNextPoint());
                 ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:144:5: warning: variable 'snippetTraversal' of type 'BitmapSnippetTraversal' can be declared 'const' [misc-const-correctness]
    BitmapSnippetTraversal snippetTraversal(inputSnippet);
    ^
                           const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:144:28: note: FIX-IT applied suggested code changes
    BitmapSnippetTraversal snippetTraversal(inputSnippet);
                           ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:145:5: warning: variable 'outwardTraversal' of type 'OutwardCircleTraversal' can be declared 'const' [misc-const-correctness]
    OutwardCircleTraversal outwardTraversal(MAX_PEN_CIRCLE_RADIUS_COORDINATE);
    ^
                           const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:145:28: note: FIX-IT applied suggested code changes
    OutwardCircleTraversal outwardTraversal(MAX_PEN_CIRCLE_RADIUS_COORDINATE);
                           ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:161:13: warning: variable 'calculatedPenPercentage' of type 'double' can be declared 'const' [misc-const-correctness]
            double calculatedPenPercentage = static_cast<double>(similarPixelsCount) / totalPixelCount;
            ^
                   const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:161:20: note: FIX-IT applied suggested code changes
            double calculatedPenPercentage = static_cast<double>(similarPixelsCount) / totalPixelCount;
                   ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:205:9: warning: variable 'pixelLabel' of type 'int' can be declared 'const' [misc-const-correctness]
        int pixelLabel = m_labelForPixels.getLabel(currentPoint);
        ^
            const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:205:13: note: FIX-IT applied suggested code changes
        int pixelLabel = m_labelForPixels.getLabel(currentPoint);
            ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:210:17: warning: variable 'poppedPoint' of type 'BitmapXY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
                BitmapXY poppedPoint(pointsInDeque.back());
                ^
                         const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:210:26: note: FIX-IT applied suggested code changes
                BitmapXY poppedPoint(pointsInDeque.back());
                         ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:230:9: warning: variable 'isPenPoint' of type 'bool' can be declared 'const' [misc-const-correctness]
        bool isPenPoint(penPoints.isPenPoint(bitmapPoint));
        ^
             const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:230:14: note: FIX-IT applied suggested code changes
        bool isPenPoint(penPoints.isPenPoint(bitmapPoint));
             ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:237:25: warning: variable 'isPointInCircleAPenPoint' of type 'bool' can be declared 'const' [misc-const-correctness]
                        bool isPointInCircleAPenPoint(penPoints.isPenPoint(pointInCircle));
                        ^
                             const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:237:30: note: FIX-IT applied suggested code changes
                        bool isPointInCircleAPenPoint(penPoints.isPenPoint(pointInCircle));
                             ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:268:34: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        previousNumberOfPoints = backgroundPoints.size();
                                 ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:272:13: warning: variable 'newColor' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
            uint32_t newColor = getBlurredColorUsingACircle(
            ^
                     const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:272:22: note: FIX-IT applied suggested code changes
            uint32_t newColor = getBlurredColorUsingACircle(
                     ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:290:9: warning: variable 'pixelLabel' of type 'int' can be declared 'const' [misc-const-correctness]
        int pixelLabel = m_labelForPixels.getLabel(bitmapPoint);
        ^
            const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:290:13: note: FIX-IT applied suggested code changes
        int pixelLabel = m_labelForPixels.getLabel(bitmapPoint);
            ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:298:5: warning: variable 'originalBitmapPathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler originalBitmapPathHandler(m_bitmap.getConfiguration().getPath());
    ^
                         const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:298:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler originalBitmapPathHandler(m_bitmap.getConfiguration().getPath());
                         ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:304:5: warning: variable 'newFilePathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler newFilePathHandler(fullFilePath);
    ^
                         const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:304:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler newFilePathHandler(fullFilePath);
                         ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:306:5: warning: variable 'newBitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap newBitmap(newFilePathHandler.getFullPath());
    ^
           const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:306:12: note: FIX-IT applied suggested code changes
    Bitmap newBitmap(newFilePathHandler.getFullPath());
           ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:318:5: warning: variable 'red' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
    uint8_t red = getBlurredColorPart(extractRed(centerColor), extractRed(colorToCompare), similarityColorLimit);
    ^
            const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:318:13: note: FIX-IT applied suggested code changes
    uint8_t red = getBlurredColorPart(extractRed(centerColor), extractRed(colorToCompare), similarityColorLimit);
            ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:319:5: warning: variable 'green' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
    uint8_t green = getBlurredColorPart(extractGreen(centerColor), extractGreen(colorToCompare), similarityColorLimit);
    ^
            const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:319:13: note: FIX-IT applied suggested code changes
    uint8_t green = getBlurredColorPart(extractGreen(centerColor), extractGreen(colorToCompare), similarityColorLimit);
            ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:320:5: warning: variable 'blue' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
    uint8_t blue = getBlurredColorPart(extractBlue(centerColor), extractBlue(colorToCompare), similarityColorLimit);
    ^
            const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:320:13: note: FIX-IT applied suggested code changes
    uint8_t blue = getBlurredColorPart(extractBlue(centerColor), extractBlue(colorToCompare), similarityColorLimit);
            ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:335:13: warning: variable 'neighborPointColor' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
            uint32_t neighborPointColor = inputSnippet.getColorAt(neighborPoint);
            ^
                     const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:335:22: note: FIX-IT applied suggested code changes
            uint32_t neighborPointColor = inputSnippet.getColorAt(neighborPoint);
                     ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:344:9: warning: variable 'newColor' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
        uint32_t newColor = combineRgbToColor(
        ^
                 const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:344:18: note: FIX-IT applied suggested code changes
        uint32_t newColor = combineRgbToColor(
                 ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:364:13: warning: variable 'snippetTraversal' of type 'BitmapSnippetTraversal' can be declared 'const' [misc-const-correctness]
            BitmapSnippetTraversal snippetTraversal(inputSnippet);
            ^
                                   const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:364:36: note: FIX-IT applied suggested code changes
            BitmapSnippetTraversal snippetTraversal(inputSnippet);
                                   ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:366:17: warning: variable 'isPointInCircleAPenPoint' of type 'bool' can be declared 'const' [misc-const-correctness]
                bool isPointInCircleAPenPoint(penPoints.isPenPoint(pointInPossibleCircle));
                ^
                     const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:366:22: note: FIX-IT applied suggested code changes
                bool isPointInCircleAPenPoint(penPoints.isPenPoint(pointInPossibleCircle));
                     ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:381:9: warning: variable 'snippetTraversal' of type 'BitmapSnippetTraversal' can be declared 'const' [misc-const-correctness]
        BitmapSnippetTraversal snippetTraversal(snippet);
        ^
                               const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:381:32: note: FIX-IT applied suggested code changes
        BitmapSnippetTraversal snippetTraversal(snippet);
                               ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:392:5: warning: variable 'colorToCompare' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
    uint32_t colorToCompare(snippet.getColorAt(point));
    ^
             const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:392:14: note: FIX-IT applied suggested code changes
    uint32_t colorToCompare(snippet.getColorAt(point));
             ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:393:5: warning: variable 'newColor' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
    uint32_t newColor(getBlurredColor(centerColor, colorToCompare, similarityColorLimit));
    ^
             const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:393:14: note: FIX-IT applied suggested code changes
    uint32_t newColor(getBlurredColor(centerColor, colorToCompare, similarityColorLimit));
             ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:433:9: warning: variable 'penPoint' of type 'Point' (aka 'AlbaXY<double>') can be declared 'const' [misc-const-correctness]
        Point penPoint(convertBitmapXYToPoint(penBitmapXY));
        ^
              const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:433:15: note: FIX-IT applied suggested code changes
        Point penPoint(convertBitmapXYToPoint(penBitmapXY));
              ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:451:5: warning: variable 'circle' of type 'Circle' can be declared 'const' [misc-const-correctness]
    Circle circle(convertBitmapXYToPoint(centerXY), blurRadius);
    ^
           const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:451:12: note: FIX-IT applied suggested code changes
    Circle circle(convertBitmapXYToPoint(centerXY), blurRadius);
           ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:452:5: warning: variable 'snippetTraversal' of type 'BitmapSnippetTraversal' can be declared 'const' [misc-const-correctness]
    BitmapSnippetTraversal snippetTraversal(snippet);
    ^
                           const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:452:28: note: FIX-IT applied suggested code changes
    BitmapSnippetTraversal snippetTraversal(snippet);
                           ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:457:13: warning: variable 'distanceFromCenter' of type 'double' can be declared 'const' [misc-const-correctness]
            double distanceFromCenter(twoDimensionsUtilities::getDistance(
            ^
                   const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:457:20: note: FIX-IT applied suggested code changes
            double distanceFromCenter(twoDimensionsUtilities::getDistance(
                   ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:459:13: warning: variable 'blurWeight' of type 'double' can be declared 'const' [misc-const-correctness]
            double blurWeight(getBlurWeight(distanceFromCenter, blurRadius));
            ^
                   const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:459:20: note: FIX-IT applied suggested code changes
            double blurWeight(getBlurWeight(distanceFromCenter, blurRadius));
                   ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:480:5: warning: variable 'neighbor1' of type 'BitmapXY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    BitmapXY neighbor1(poppedPoint.getX() - 1, poppedPoint.getY());
    ^
             const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:480:14: note: FIX-IT applied suggested code changes
    BitmapXY neighbor1(poppedPoint.getX() - 1, poppedPoint.getY());
             ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:481:5: warning: variable 'neighbor2' of type 'BitmapXY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    BitmapXY neighbor2(poppedPoint.getX(), poppedPoint.getY() - 1);
    ^
             const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:481:14: note: FIX-IT applied suggested code changes
    BitmapXY neighbor2(poppedPoint.getX(), poppedPoint.getY() - 1);
             ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:482:5: warning: variable 'neighbor3' of type 'BitmapXY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    BitmapXY neighbor3(poppedPoint.getX() + 1, poppedPoint.getY());
    ^
             const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:482:14: note: FIX-IT applied suggested code changes
    BitmapXY neighbor3(poppedPoint.getX() + 1, poppedPoint.getY());
             ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:483:5: warning: variable 'neighbor4' of type 'BitmapXY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    BitmapXY neighbor4(poppedPoint.getX(), poppedPoint.getY() + 1);
    ^
             const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:483:14: note: FIX-IT applied suggested code changes
    BitmapXY neighbor4(poppedPoint.getX(), poppedPoint.getY() + 1);
             ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:494:9: warning: variable 'neighborPointColor' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
        uint32_t neighborPointColor = inputSnippet.getColorAt(neighborPoint);
        ^
                 const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:494:18: note: FIX-IT applied suggested code changes
        uint32_t neighborPointColor = inputSnippet.getColorAt(neighborPoint);
                 ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:495:9: warning: variable 'neighborPointLabel' of type 'int' can be declared 'const' [misc-const-correctness]
        int neighborPointLabel = m_labelForPixels.getLabel(neighborPoint);
        ^
            const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:495:13: note: FIX-IT applied suggested code changes
        int neighborPointLabel = m_labelForPixels.getLabel(neighborPoint);
            ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:508:13: warning: variable 'smallestNeighborLabel' of type 'int' can be declared 'const' [misc-const-correctness]
            int smallestNeighborLabel =
            ^
                const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:508:17: note: FIX-IT applied suggested code changes
            int smallestNeighborLabel =
                ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:524:9: warning: variable 'pixelLabel' of type 'int' can be declared 'const' [misc-const-correctness]
        int pixelLabel = m_labelForPixels.getLabel(currentPoint);
        ^
            const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:524:13: note: FIX-IT applied suggested code changes
        int pixelLabel = m_labelForPixels.getLabel(currentPoint);
            ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:526:13: warning: variable 'smallestLabel' of type 'int' can be declared 'const' [misc-const-correctness]
            int smallestLabel = unionFindForLabels.getRoot(pixelLabel);
            ^
                const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:526:17: note: FIX-IT applied suggested code changes
            int smallestLabel = unionFindForLabels.getRoot(pixelLabel);
                ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:536:5: warning: variable 'neighbor1' of type 'BitmapXY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    BitmapXY neighbor1(neighborPoint.getX() - 1, neighborPoint.getY());
    ^
             const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:536:14: note: FIX-IT applied suggested code changes
    BitmapXY neighbor1(neighborPoint.getX() - 1, neighborPoint.getY());
             ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:537:5: warning: variable 'neighbor2' of type 'BitmapXY' (aka 'AlbaXY<int>') can be declared 'const' [misc-const-correctness]
    BitmapXY neighbor2(neighborPoint.getX(), neighborPoint.getY() - 1);
    ^
             const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:537:14: note: FIX-IT applied suggested code changes
    BitmapXY neighbor2(neighborPoint.getX(), neighborPoint.getY() - 1);
             ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:538:5: warning: variable 'neighbor1Label' of type 'int' can be declared 'const' [misc-const-correctness]
    int neighbor1Label = analyzeNeighborPointForConnectedComponentsTwoPassAneReturnLabel(inputSnippet, neighbor1);
    ^
        const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:538:9: note: FIX-IT applied suggested code changes
    int neighbor1Label = analyzeNeighborPointForConnectedComponentsTwoPassAneReturnLabel(inputSnippet, neighbor1);
        ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:539:5: warning: variable 'neighbor2Label' of type 'int' can be declared 'const' [misc-const-correctness]
    int neighbor2Label = analyzeNeighborPointForConnectedComponentsTwoPassAneReturnLabel(inputSnippet, neighbor2);
    ^
        const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:539:9: note: FIX-IT applied suggested code changes
    int neighbor2Label = analyzeNeighborPointForConnectedComponentsTwoPassAneReturnLabel(inputSnippet, neighbor2);
        ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:550:9: warning: variable 'neighborPointColor' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
        uint32_t neighborPointColor = inputSnippet.getColorAt(neighborPoint);
        ^
                 const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:550:18: note: FIX-IT applied suggested code changes
        uint32_t neighborPointColor = inputSnippet.getColorAt(neighborPoint);
                 ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:551:9: warning: variable 'neighborPointLabel' of type 'int' can be declared 'const' [misc-const-correctness]
        int neighborPointLabel = m_labelForPixels.getLabel(neighborPoint);
        ^
            const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\BitmapFilters.cpp:551:13: note: FIX-IT applied suggested code changes
        int neighborPointLabel = m_labelForPixels.getLabel(neighborPoint);
            ^
[77/98] Building CXX object CMakeFiles/AprgBitmapManipulator.dir/src/BitmapManipulator/ColorStatistics.cpp.obj
FAILED: CMakeFiles/AprgBitmapManipulator.dir/src/BitmapManipulator/ColorStatistics.cpp.obj 
"C:\Program Files\CMake\bin\cmake.exe" -E __run_co_compile --tidy="C:/Program Files/LLVM/bin/clang-tidy.exe;--fix;--header-filter=D:\/a\/aprg\/aprg\/AprgBitmapManipulator\/AprgBitmapManipulator.*;--config-file=D:/a/aprg/aprg/Clang/ClangTidyFiles/autofix.clang-tidy;--extra-arg-before=--driver-mode=g++" --source=D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp -- C:\PROGRA~1\LLVM\bin\CLANG_~1.EXE -DAPRG_CODE_REVISION=\"3b217d20f70a0974d3cc2b87e263042b70c17883\" -DAPRG_DEBUG -DAPRG_DIR=\"D:/a/aprg/aprg\" -DAPRG_TEST_MODE_ON -DOS_WINDOWS -ID:/a/aprg/aprg/AprgCommon/AprgCommon/src -ID:/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows -ID:/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities -ID:/a/aprg/aprg/AprgAlgorithm/AprgAlgorithm/src -ID:/a/aprg/aprg/AprgBitmap/AprgBitmap/src -ID:/a/aprg/aprg/AprgGeometry/AprgGeometry/src -ID:/a/aprg/aprg/AprgStatistics/AprgStatistics/src -ID:/a/aprg/aprg/AprgBitmapManipulator/AprgBitmapManipulator/src -ID:/a/aprg/aprg/AprgBitmapManipulator/AprgBitmapManipulator/tst -ID:/a/aprg/aprg/gtest/gtest/googletest/include -ID:/a/aprg/aprg/gtest/gtest/googletest -Wall -Wextra -pedantic -fcolor-diagnostics -std=c++20  -O0 -g -Xclang -gcodeview -D_DEBUG -D_DLL -D_MT -Xclang --dependent-lib=msvcrtd -MD -MT CMakeFiles/AprgBitmapManipulator.dir/src/BitmapManipulator/ColorStatistics.cpp.obj -MF CMakeFiles\AprgBitmapManipulator.dir\src\BitmapManipulator\ColorStatistics.cpp.obj.d -o CMakeFiles/AprgBitmapManipulator.dir/src/BitmapManipulator/ColorStatistics.cpp.obj -c D:/a/aprg/aprg/AprgBitmapManipulator/AprgBitmapManipulator/src/BitmapManipulator/ColorStatistics.cpp
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:14:5: warning: variable 'bitmap' of type 'Bitmap' can be declared 'const' [misc-const-correctness]
    Bitmap bitmap(bitmapPath);
    ^
           const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:14:12: note: FIX-IT applied suggested code changes
    Bitmap bitmap(bitmapPath);
           ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:15:5: warning: variable 'canvas' of type 'BitmapSnippet' can be declared 'const' [misc-const-correctness]
    BitmapSnippet canvas(bitmap.getSnippetReadFromFileWholeBitmap());
    ^
                  const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:15:19: note: FIX-IT applied suggested code changes
    BitmapSnippet canvas(bitmap.getSnippetReadFromFileWholeBitmap());
                  ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:17:9: warning: variable 'colorIntensity' of type 'double' can be declared 'const' [misc-const-correctness]
        double colorIntensity(calculateColorIntensityDecimal(color));
        ^
               const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:17:16: note: FIX-IT applied suggested code changes
        double colorIntensity(calculateColorIntensityDecimal(color));
               ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:18:9: warning: variable 'luma601' of type 'double' can be declared 'const' [misc-const-correctness]
        double luma601(calculateLuma601Decimal(color));
        ^
               const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:18:16: note: FIX-IT applied suggested code changes
        double luma601(calculateLuma601Decimal(color));
               ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:19:9: warning: variable 'luma709' of type 'double' can be declared 'const' [misc-const-correctness]
        double luma709(calculateLuma709Decimal(color));
        ^
               const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:19:16: note: FIX-IT applied suggested code changes
        double luma709(calculateLuma709Decimal(color));
               ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:23:9: warning: variable 'hslData' of type 'HueSaturationLightnessData' can be declared 'const' [misc-const-correctness]
        HueSaturationLightnessData hslData(convertColorToHueSaturationLightnessData(color));
        ^
                                   const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:23:36: note: FIX-IT applied suggested code changes
        HueSaturationLightnessData hslData(convertColorToHueSaturationLightnessData(color));
                                   ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:24:9: warning: variable 'hsvData' of type 'HueSaturationValueData' can be declared 'const' [misc-const-correctness]
        HueSaturationValueData hsvData(convertColorToHueSaturationValueData(color));
        ^
                               const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:24:32: note: FIX-IT applied suggested code changes
        HueSaturationValueData hsvData(convertColorToHueSaturationValueData(color));
                               ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:31:44: warning: unnecessary temporary object created while calling emplace_back [hicpp-use-emplace,modernize-use-emplace]
        colorIntensitySamples.emplace_back(OneDimensionStatistics::Sample{colorIntensity});
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~              ~
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:31:44: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:31:89: note: FIX-IT applied suggested code changes
        colorIntensitySamples.emplace_back(OneDimensionStatistics::Sample{colorIntensity});
                                                                                        ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:32:49: warning: unnecessary temporary object created while calling emplace_back [hicpp-use-emplace,modernize-use-emplace]
        saturationLightnessSamples.emplace_back(OneDimensionStatistics::Sample{hslData.saturationLightnessDecimal});
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                  ~
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:32:49: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:32:114: note: FIX-IT applied suggested code changes
        saturationLightnessSamples.emplace_back(OneDimensionStatistics::Sample{hslData.saturationLightnessDecimal});
                                                                                                                 ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:33:39: warning: unnecessary temporary object created while calling emplace_back [hicpp-use-emplace,modernize-use-emplace]
        lightnessSamples.emplace_back(OneDimensionStatistics::Sample{hslData.lightnessDecimal});
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ~
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:33:39: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:33:94: note: FIX-IT applied suggested code changes
        lightnessSamples.emplace_back(OneDimensionStatistics::Sample{hslData.lightnessDecimal});
                                                                                             ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:34:45: warning: unnecessary temporary object created while calling emplace_back [hicpp-use-emplace,modernize-use-emplace]
        saturationValueSamples.emplace_back(OneDimensionStatistics::Sample{hsvData.saturationValueDecimal});
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                              ~
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:34:45: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:34:106: note: FIX-IT applied suggested code changes
        saturationValueSamples.emplace_back(OneDimensionStatistics::Sample{hsvData.saturationValueDecimal});
                                                                                                         ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:35:35: warning: unnecessary temporary object created while calling emplace_back [hicpp-use-emplace,modernize-use-emplace]
        valueSamples.emplace_back(OneDimensionStatistics::Sample{hsvData.valueDecimalOfColorMax});
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                              ~
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:35:35: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:35:96: note: FIX-IT applied suggested code changes
        valueSamples.emplace_back(OneDimensionStatistics::Sample{hsvData.valueDecimalOfColorMax});
                                                                                               ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:36:37: warning: unnecessary temporary object created while calling emplace_back [hicpp-use-emplace,modernize-use-emplace]
        luma601Samples.emplace_back(OneDimensionStatistics::Sample{luma601});
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~       ~
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:36:37: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:36:75: note: FIX-IT applied suggested code changes
        luma601Samples.emplace_back(OneDimensionStatistics::Sample{luma601});
                                                                          ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:37:37: warning: unnecessary temporary object created while calling emplace_back [hicpp-use-emplace,modernize-use-emplace]
        luma709Samples.emplace_back(OneDimensionStatistics::Sample{luma709});
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~       ~
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:37:37: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:37:75: note: FIX-IT applied suggested code changes
        luma709Samples.emplace_back(OneDimensionStatistics::Sample{luma709});
                                                                          ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:62:5: warning: variable 'size' of type 'int' can be declared 'const' [misc-const-correctness]
    int size = min(
    ^
        const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:62:9: note: FIX-IT applied suggested code changes
    int size = min(
        ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:62:16: warning: narrowing conversion from 'unsigned long long' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int size = min(
               ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:104:5: warning: variable 'bitmapPathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler bitmapPathHandler(bitmapPath);
    ^
                         const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:104:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler bitmapPathHandler(bitmapPath);
                         ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:105:5: warning: variable 'colorDataPathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler colorDataPathHandler(
    ^
                         const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:105:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler colorDataPathHandler(
                         ^
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:107:5: warning: variable 'colorStatisticsPathHandler' of type 'AlbaLocalPathHandler' can be declared 'const' [misc-const-correctness]
    AlbaLocalPathHandler colorStatisticsPathHandler(
    ^
                         const 
D:\a\aprg\aprg\AprgBitmapManipulator\AprgBitmapManipulator\src\BitmapManipulator\ColorStatistics.cpp:107:26: note: FIX-IT applied suggested code changes
    AlbaLocalPathHandler colorStatisticsPathHandler(
                         ^
In file included from D:/a/aprg/aprg/AprgBitmapManipulator/AprgBitmapManipulator/src/BitmapManipulator/ColorStatistics.cpp:1:
In file included from D:/a/aprg/aprg/AprgBitmapManipulator/AprgBitmapManipulator/src/BitmapManipulator/ColorStatistics.hpp:3:
In file included from D:/a/aprg/aprg/AprgStatistics/AprgStatistics/src\Statistics/DataStatistics.hpp:2:
In file included from D:/a/aprg/aprg/AprgStatistics/AprgStatistics/src\Statistics/DataSample.hpp:3:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Container/AlbaContainerHelper.hpp:3:
In file included from C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\algorithm:11:
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\xmemory:717:9: error: no matching function for call to 'construct_at'
        _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
        ^~~~~~~~~~~~~~~~~
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\yvals_core.h:1853:20: note: expanded from macro '_STD'
#define _STD       ::std::
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vector:800:27: note: in instantiation of function template specialization 'std::_Default_allocator_traits<std::allocator<alba::DataSample<1>>>::construct<alba::DataSample<1>, const double &>' requested here
            _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
                          ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vector:782:20: note: in instantiation of function template specialization 'std::vector<alba::DataSample<1>>::_Emplace_back_with_unused_capacity<const double &>' requested here
            return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vector:864:24: note: in instantiation of function template specialization 'std::vector<alba::DataSample<1>>::_Emplace_one_at_back<const double &>' requested here
        _Ty& _Result = _Emplace_one_at_back(_STD forward<_Valty>(_Val)...);
                       ^
D:/a/aprg/aprg/AprgBitmapManipulator/AprgBitmapManipulator/src/BitmapManipulator/ColorStatistics.cpp:31:31: note: in instantiation of function template specialization 'std::vector<alba::DataSample<1>>::emplace_back<const double &>' requested here
        colorIntensitySamples.emplace_back(colorIntensity);
                              ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\xutility:239:16: note: candidate template ignored: substitution failure [with _Ty = alba::DataSample<1>, _Types = <const double &>]: no matching constructor for initialization of 'alba::DataSample<1>'
constexpr _Ty* construct_at(_Ty* const _Location, _Types&&... _Args) noexcept(
               ^
1 error generated.
ninja: build stopped: subcommand failed.
DONE!
