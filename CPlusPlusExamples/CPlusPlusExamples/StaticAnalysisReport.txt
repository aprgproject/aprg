StaticAnalysisJobIdentifier: [43]
2023-09-23T14:58:26
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ArgumentDependentLookupExamples/ArgumentDependentLookupExamples_unit.cpp:26:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ArgumentDependentLookupExamples/ArgumentDependentLookupExamples_unit.cpp:26:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ArgumentDependentLookupExamples/ArgumentDependentLookupExamples_unit.cpp:26:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ArgumentDependentLookupExamples/ArgumentDependentLookupExamples_unit.cpp:27:14: warning: 3.14 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ArgumentDependentLookupExamples/ArgumentDependentLookupExamples_unit.cpp:32:17: warning: 3.14 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:22:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:22:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:22:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:35:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:35:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:35:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:49:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:49:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:49:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:59:14: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:62:14: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:73:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:73:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:73:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:84:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:84:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:84:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:95:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:95:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:95:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:114:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:114:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:114:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:135:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:135:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:135:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:153:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:153:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:153:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:163:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:163:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:163:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:180:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:180:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:180:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:202:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:202:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:202:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:208:35: warning: 5.0 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:208:40: warning: 4.0 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:218:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:218:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:218:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:248:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:248:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:248:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:264:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:264:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:264:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/AlgorithmExamples/AlgorithmExamples_unit.cpp:265:18: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:11:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:11:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:11:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:12:5: warning: consider replacing 'long' with 'int64' [google-runtime-int]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:12:10: warning: variable name 'a' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:13:15: warning: consider replacing 'long' with 'int64' [google-runtime-int]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:13:20: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:22:14: warning: 44 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:32:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:32:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:32:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:33:5: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:33:9: warning: variable name 'a' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:35:10: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:35:14: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:37:10: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:39:16: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:39:20: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:42:16: warning: variable name 'd' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:42:20: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:44:10: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:52:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:52:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:52:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:54:10: warning: variable name 'p1' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:55:16: warning: variable name 'p2' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:57:16: warning: variable name 'p4' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:66:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:66:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:66:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:68:16: warning: variable name 'r1' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:69:16: warning: variable name 'r2' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:79:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:79:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:79:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:85:9: warning: variable name 'f' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:102:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:102:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:102:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:109:9: warning: variable name 'f' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:110:12: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:112:15: warning: variable name 'cf' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:113:13: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:116:17: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:119:19: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:125:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:125:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:125:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:132:9: warning: variable name 'f' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:133:11: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:135:15: warning: variable name 'cf' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:136:12: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:139:15: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:142:17: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:156:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:156:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:156:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:157:9: warning: variable name 'f' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:173:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:173:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:173:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:182:9: warning: variable name 'a' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:183:15: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:191:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:191:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:191:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:203:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:203:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:203:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:209:15: warning: unused variable 'a' [clang-diagnostic-unused-variable]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:209:15: warning: variable name 'a' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:216:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:216:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:216:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:223:18: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:225:23: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:252:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:252:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:252:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:284:24: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:285:24: warning: 30 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:308:21: warning: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:308:29: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:318:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:318:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:318:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:326:9: warning: variable name 'a' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:327:9: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ConstExamples/ConstExamples_unit.cpp:209:15: warning: unused variable 'a' [-Wunused-variable]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:45:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:45:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:45:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:68:15: warning: variable name 'pb' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:69:34: warning: 8675309 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:73:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:73:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:73:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:74:21: warning: variable name 'pb' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:87:27: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:92:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:92:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:92:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:93:18: warning: variable name 's' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:105:12: warning: variable name 's' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:110:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:110:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:110:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:111:18: warning: variable name 's' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:124:21: warning: variable 'happinessValue' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:124:21: warning: 'happinessValue' is a static definition in anonymous namespace; static is redundant here [readability-static-definition-in-anonymous-namespace]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:131:26: warning: 50 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:140:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:140:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:140:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:141:18: warning: variable name 's' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:153:8: warning: class 'MoveOnlyConstExprObject' defines a copy constructor, a copy assignment operator, a move constructor and a move assignment operator but does not define a destructor [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:210:16: warning: variable name 's' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:221:12: warning: variable name 's' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:232:18: warning: variable name 's' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:242:18: warning: variable name 's' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:251:12: warning: variable name 's' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:260:12: warning: variable name 's' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:271:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:271:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:271:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:295:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:295:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:295:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:296:20: warning: variable name 'v' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:297:18: warning: variable name 's' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:305:7: warning: use emplace_back instead of push_back [hicpp-use-emplace,modernize-use-emplace]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:311:19: warning: unused variable 's2' [clang-diagnostic-unused-variable]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:311:19: warning: variable name 's2' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:325:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:325:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:325:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:326:25: warning: variable name 'a' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:328:15: warning: variable name 'v' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:343:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:343:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:343:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:344:17: warning: variable name 'a' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:346:15: warning: variable name 'v' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:350:68: warning: parameter name 'i' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:362:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:362:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:362:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:375:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:375:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:375:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:391:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:391:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:391:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:392:30: warning: variable name 'v' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:394:29: warning: 42 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:394:42: warning: 3.14 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:395:29: warning: 42 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:395:42: warning: 3.14 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:400:79: warning: 42 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:400:92: warning: 3.14 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:415:20: warning: variable name 'i' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:422:20: warning: variable name 'i' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:428:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:428:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:428:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:437:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:437:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:437:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:447:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:447:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:447:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:450:13: warning: variable name 'm' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:460:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:460:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:460:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:462:7: warning: variable name 'm' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:474:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:474:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:474:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:476:7: warning: variable name 'm' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:488:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:488:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:488:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:490:7: warning: variable name 'm' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:502:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:502:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:502:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:504:7: warning: variable name 'm' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:520:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:520:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:520:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:522:7: warning: variable name 'm' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:537:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:537:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:537:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:553:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:553:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:553:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:571:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:571:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:571:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:587:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:587:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:587:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:107:12: warning: moving a local object in a return statement prevents copy elision [-Wpessimizing-move]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:107:12: note: remove std::move call here
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:311:19: warning: unused variable 's2' [-Wunused-variable]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:411:33: warning: returning address of local temporary object [-Wreturn-stack-address]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InPlaceConstructionExamples/InPlaceConstructionExamples_unit.cpp:422:24: note: in instantiation of function template specialization 'alba::InitializerListHasConstStorageSoWeCantLocalInitializerLists::f<1, 2, 3>' requested here
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/IncrementDecrementExamples/IncrementDecrementExamples_unit.cpp:9:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/IncrementDecrementExamples/IncrementDecrementExamples_unit.cpp:9:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/IncrementDecrementExamples/IncrementDecrementExamples_unit.cpp:9:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/IncrementDecrementExamples/IncrementDecrementExamples_unit.cpp:11:9: warning: variable name 'a' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/IncrementDecrementExamples/IncrementDecrementExamples_unit.cpp:12:15: warning: multiple unsequenced modifications to 'a' [clang-diagnostic-unsequenced]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/IncrementDecrementExamples/IncrementDecrementExamples_unit.cpp:13:9: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/IncrementDecrementExamples/IncrementDecrementExamples_unit.cpp:14:15: warning: multiple unsequenced modifications to 'b' [clang-diagnostic-unsequenced]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/IncrementDecrementExamples/IncrementDecrementExamples_unit.cpp:15:9: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/IncrementDecrementExamples/IncrementDecrementExamples_unit.cpp:16:14: warning: multiple unsequenced modifications to 'c' [clang-diagnostic-unsequenced]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/IncrementDecrementExamples/IncrementDecrementExamples_unit.cpp:12:15: warning: multiple unsequenced modifications to 'a' [-Wunsequenced]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/IncrementDecrementExamples/IncrementDecrementExamples_unit.cpp:14:15: warning: multiple unsequenced modifications to 'b' [-Wunsequenced]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/IncrementDecrementExamples/IncrementDecrementExamples_unit.cpp:16:14: warning: multiple unsequenced modifications to 'c' [-Wunsequenced]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:13:8: warning: class 'SampleClassWithInline' defines a copy constructor, a copy assignment operator, a move constructor and a move assignment operator but does not define a destructor [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:36:19: warning: variable 'staticInlineInteger' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:36:41: warning: 500 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:37:12: warning: variable 'inlineIntegerWithDefinition' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:37:42: warning: 200 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:38:12: warning: variable 'inlineIntegerWithDeclaration' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:39:19: warning: variable 'externInlineInteger' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:40:20: warning: initialization of 'inlineString' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/usr/lib/gcc/x86_64-linux-gnu/12/../../../../include/c++/12/bits/basic_string.h:642:7: note: possibly throwing constructor declared here
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:40:20: warning: variable 'inlineString' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:11:12: warning: variable 'externInlineInteger' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:11:34: warning: 410 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:14:12: warning: variable 'inlineIntegerAtTranslationUnit' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:14:45: warning: 710 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:15:5: warning: variable 'nonInlineAtTranslationUnit' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:15:34: warning: 810 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:20:35: warning: 210 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:21:36: warning: 310 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:22:27: warning: 410 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:23:27: warning: 510 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:25:38: warning: 710 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:26:34: warning: 810 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:46:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:46:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:46:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:46:1: warning: function 'TestBody' has cognitive complexity of 36 (threshold 25) [readability-function-cognitive-complexity]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:48:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:48:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:48:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:49:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:49:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:49:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:50:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:50:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:50:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:51:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:51:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:51:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:52:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:52:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:52:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:53:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:53:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:53:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:54:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:54:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:54:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:55:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:55:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:55:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:56:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:56:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:56:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:59:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:59:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:59:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:59:1: warning: function 'TestBody' has cognitive complexity of 36 (threshold 25) [readability-function-cognitive-complexity]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:70:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:70:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:70:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:71:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:71:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:71:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:72:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:72:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:72:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:73:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:73:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:73:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:74:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:74:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:74:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:75:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:75:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:75:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:76:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:76:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:76:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:77:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:77:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:77:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:78:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:78:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:78:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:62:35: warning: 211 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:63:36: warning: 311 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:64:27: warning: 411 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:65:27: warning: 511 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:67:38: warning: 711 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:68:34: warning: 811 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:82:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:82:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:82:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:82:1: warning: function 'TestBody' has cognitive complexity of 36 (threshold 25) [readability-function-cognitive-complexity]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:85:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:85:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:85:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:86:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:86:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:86:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:87:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:87:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:87:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:88:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:88:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:88:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:89:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:89:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:89:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:90:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:90:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:90:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:91:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:91:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:91:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:92:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:92:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:92:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:93:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:93:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:93:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:96:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:96:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:96:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:96:1: warning: function 'TestBody' has cognitive complexity of 36 (threshold 25) [readability-function-cognitive-complexity]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:109:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:109:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:109:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:110:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:110:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:110:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:111:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:111:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:111:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:112:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:112:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:112:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:113:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:113:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:113:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:114:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:114:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:114:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:115:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:115:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:115:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:116:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:116:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:116:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:117:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:117:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:117:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:100:35: warning: 212 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:101:36: warning: 312 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:102:27: warning: 412 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:105:38: warning: 712 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:106:34: warning: 812 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:122:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:122:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit1_unit.cpp:122:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:13:8: warning: class 'SampleClassWithInline' defines a copy constructor, a copy assignment operator, a move constructor and a move assignment operator but does not define a destructor [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:36:19: warning: variable 'staticInlineInteger' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:36:41: warning: 500 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:37:12: warning: variable 'inlineIntegerWithDefinition' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:37:42: warning: 200 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:38:12: warning: variable 'inlineIntegerWithDeclaration' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:39:19: warning: variable 'externInlineInteger' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:40:20: warning: initialization of 'inlineString' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/usr/lib/gcc/x86_64-linux-gnu/12/../../../../include/c++/12/bits/basic_string.h:642:7: note: possibly throwing constructor declared here
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/CommonHeaderForInlineOnTranslationUnits.hpp:40:20: warning: variable 'inlineString' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:11:12: warning: variable 'externInlineInteger' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:11:34: warning: 420 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:14:12: warning: variable 'inlineIntegerAtTranslationUnit' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:14:45: warning: 720 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:19:35: warning: 220 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:20:36: warning: 320 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:21:27: warning: 420 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:22:27: warning: 520 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:24:38: warning: 720 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:49:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:49:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:49:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:49:1: warning: function 'TestBody' has cognitive complexity of 32 (threshold 25) [readability-function-cognitive-complexity]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:51:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:51:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:51:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:52:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:52:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:52:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:53:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:53:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:53:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:54:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:54:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:54:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:55:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:55:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:55:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:56:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:56:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:56:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:57:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:57:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:57:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:59:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:59:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:59:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:62:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:62:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:62:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:62:1: warning: function 'TestBody' has cognitive complexity of 32 (threshold 25) [readability-function-cognitive-complexity]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:73:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:73:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:73:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:74:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:74:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:74:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:75:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:75:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:75:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:76:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:76:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:76:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:77:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:77:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:77:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:78:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:78:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:78:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:79:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:79:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:79:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:81:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:81:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:81:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:65:35: warning: 221 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:66:36: warning: 321 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:67:27: warning: 421 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:68:27: warning: 521 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:70:38: warning: 721 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:85:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:85:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:85:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:85:1: warning: function 'TestBody' has cognitive complexity of 36 (threshold 25) [readability-function-cognitive-complexity]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:88:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:88:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:88:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:89:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:89:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:89:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:90:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:90:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:90:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:91:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:91:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:91:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:92:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:92:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:92:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:93:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:93:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:93:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:94:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:94:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:94:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:95:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:95:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:95:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:96:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:96:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:96:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:99:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:99:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:99:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:99:1: warning: function 'TestBody' has cognitive complexity of 36 (threshold 25) [readability-function-cognitive-complexity]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:112:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:112:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:112:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:113:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:113:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:113:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:114:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:114:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:114:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:115:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:115:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:115:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:116:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:116:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:116:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:117:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:117:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:117:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:118:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:118:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:118:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:119:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:119:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:119:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:120:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:120:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:120:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:103:35: warning: 222 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:104:36: warning: 322 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:105:27: warning: 422 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:106:27: warning: 522 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:108:38: warning: 722 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:125:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:125:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/InlineExamples/InlineOnTranslationUnit/InlineOnTranslationUnit2_unit.cpp:125:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/RuleOfZeroExamples/RuleOfZeroExamples_unit.cpp:49:34: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/RuleOfZeroExamples/RuleOfZeroExamples_unit.cpp:84:40: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/RuleOfZeroExamples/RuleOfZeroExamples_unit.cpp:97:21: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/RuleOfZeroExamples/RuleOfZeroExamples_unit.cpp:103:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/RuleOfZeroExamples/RuleOfZeroExamples_unit.cpp:103:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/RuleOfZeroExamples/RuleOfZeroExamples_unit.cpp:103:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/RuleOfZeroExamples/RuleOfZeroExamples_unit.cpp:112:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/RuleOfZeroExamples/RuleOfZeroExamples_unit.cpp:112:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/RuleOfZeroExamples/RuleOfZeroExamples_unit.cpp:112:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic.cpp:6:28: warning: variable 'staticData' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic.cpp:6:41: warning: 200 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic.hpp:21:23: warning: variable 'staticInlinedData' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic.hpp:21:43: warning: 400 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic.hpp:22:31: warning: initialization of 'staticInlinedString' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/usr/lib/gcc/x86_64-linux-gnu/12/../../../../include/c++/12/bits/basic_string.h:642:7: note: possibly throwing constructor declared here
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic.hpp:22:31: warning: variable 'staticInlinedString' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic.hpp:25:16: warning: variable 'staticData' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:18:21: warning: parameter name 't' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:19:16: warning: variable name 'x' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:23:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:23:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:23:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:25:46: warning: 3.14 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:35:32: warning: parameter name 'y' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:36:26: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:39:6: warning: unused function 'badIncrementBy' [clang-diagnostic-unused-function]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:39:31: warning: parameter name 'y' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:41:26: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:46:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:46:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:46:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:60:5: warning: variable 'g' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:60:5: warning: variable name 'g' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:63:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:63:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:63:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:65:17: warning: variable name 'g' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:71:9: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:109:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:109:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:109:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:113:36: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:114:36: warning: 30 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:115:36: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:116:36: warning: 30 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:123:36: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:124:36: warning: 30 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:125:36: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:126:36: warning: 30 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:146:53: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:151:29: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:159:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:159:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:159:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:162:57: warning: 42 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:163:60: warning: 3.14 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:164:54: warning: 42 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:165:57: warning: 3.14 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:167:38: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:168:43: warning: 42 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:169:46: warning: 3.14 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:197:27: warning: parameter name 'xs' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:205:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:205:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:205:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:208:45: warning: 42 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:208:49: warning: 3.14 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:210:41: warning: parameter name 'xs' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:211:34: warning: 42 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:211:38: warning: 3.14 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:222:53: warning: parameter name 'v' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:223:67: warning: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:223:98: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:232:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:232:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:232:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:236:24: warning: 26 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:236:43: warning: 422 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:41:13: warning: address of stack memory associated with parameter 'y' returned [-Wreturn-stack-address]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:41:42: note: implicitly captured by reference due to use here
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/LambdaExamples/LambdaExamples_unit.cpp:39:6: warning: unused function 'badIncrementBy' [-Wunused-function]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:19:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:19:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:19:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:19:1: warning: function 'TestBody' has cognitive complexity of 40 (threshold 25) [readability-function-cognitive-complexity]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:20:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:20:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:20:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:21:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:21:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:21:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:22:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:22:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:22:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:23:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:23:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:23:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:24:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:24:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:24:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:26:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:26:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:26:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:27:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:27:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:27:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:28:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:28:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:28:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:29:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:29:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:29:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:30:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:30:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInFunction/StaticInFunction_unit.cpp:30:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic.hpp:21:23: warning: variable 'staticInlinedData' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic.hpp:21:43: warning: 400 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic.hpp:22:31: warning: initialization of 'staticInlinedString' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/usr/lib/gcc/x86_64-linux-gnu/12/../../../../include/c++/12/bits/basic_string.h:642:7: note: possibly throwing constructor declared here
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic.hpp:22:31: warning: variable 'staticInlinedString' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic.hpp:25:16: warning: variable 'staticData' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:7:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:7:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:7:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:19:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:19:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:19:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:19:1: warning: function 'TestBody' has cognitive complexity of 32 (threshold 25) [readability-function-cognitive-complexity]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:22:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:22:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:22:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:23:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:23:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:23:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:24:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:24:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:24:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:25:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:25:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:25:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:27:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:27:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:27:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:28:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:28:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:28:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:29:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:29:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:29:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:30:5: note: +1, including nesting penalty of 0, nesting level increased to 1
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:30:5: note: +2, including nesting penalty of 1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:30:5: note: +1, nesting level increased to 2
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:35:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:35:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:35:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:39:29: warning: 101 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:40:41: warning: 201 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:42:48: warning: 401 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:53:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:53:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:53:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:57:29: warning: 101 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:58:41: warning: 201 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:66:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:66:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:66:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:70:29: warning: 101 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticInClass/SampleClassWithStatic_unit.cpp:71:41: warning: 201 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/CommonHeaderForStaticOnTranslationUnits.hpp:16:12: warning: variable 'staticInteger' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/CommonHeaderForStaticOnTranslationUnits.hpp:16:28: warning: 200 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:13:5: warning: variable 'integer' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:13:15: warning: 310 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:15:12: warning: variable 'externInteger' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:16:5: warning: variable 'externInteger' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:16:21: warning: 410 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:21:21: warning: 210 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:22:15: warning: 310 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:23:21: warning: 410 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:34:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:34:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:34:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:43:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:43:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:43:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:46:21: warning: 211 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:47:15: warning: 311 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:48:21: warning: 411 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:58:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:58:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:58:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:68:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:68:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:68:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:72:21: warning: 212 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:73:15: warning: 312 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:74:21: warning: 412 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:86:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:86:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit1_unit.cpp:86:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/CommonHeaderForStaticOnTranslationUnits.hpp:16:12: warning: variable 'staticInteger' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/CommonHeaderForStaticOnTranslationUnits.hpp:16:28: warning: 200 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:15:12: warning: variable 'externInteger' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:21:21: warning: 220 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:23:21: warning: 420 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:35:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:35:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:35:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:44:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:44:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:44:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:47:21: warning: 221 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:49:21: warning: 421 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:59:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:59:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:59:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:69:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:69:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:69:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:73:21: warning: 222 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:75:21: warning: 422 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:87:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:87:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/StaticExamples/StaticOnTranslationUnit/StaticOnTranslationUnit2_unit.cpp:87:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:19:15: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:33:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:33:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:33:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:35:18: warning: 42.3 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:36:23: warning: 42 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:56:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:56:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:56:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:69:16: warning: variable 'intData' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:70:14: warning: variable 'tData' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:74:12: warning: variable 'intData' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:74:22: warning: 42 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:76:10: warning: variable 'tData' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:83:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:83:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:83:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:104:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:104:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:104:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:120:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:120:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:120:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:131:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:136:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:136:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:136:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:138:9: warning: 4.2 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:148:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:153:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:158:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:163:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:177:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:177:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:177:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:187:34: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:199:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:206:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:206:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:206:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:219:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:225:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:225:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:225:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:237:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:242:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:247:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:264:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:264:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:264:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:265:9: warning: variable name 'i' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:266:19: warning: variable name 'ci' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:270:20: warning: 42 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:287:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:293:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:293:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:293:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:329:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:329:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:329:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:346:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:351:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:351:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:351:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:352:17: warning: variable name 'v' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:371:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:371:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:371:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:372:23: warning: variable name 'v1' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:385:26: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:387:26: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:400:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:400:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:400:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:402:51: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:403:52: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:415:41: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:422:41: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:429:41: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:435:41: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:443:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:443:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:443:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:444:31: warning: variable name 'a' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:445:32: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:446:32: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:447:34: warning: variable name 'd' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:464:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:471:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:481:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:481:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:481:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:482:11: warning: variable name 'pv' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:505:17: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:513:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:520:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:520:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:520:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:521:11: warning: variable name 'pv' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:565:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:565:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:565:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:567:32: warning: unused variable 'variable2' [clang-diagnostic-unused-variable]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:568:35: warning: unused variable 'variable3' [clang-diagnostic-unused-variable]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:579:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:588:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:593:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:598:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:603:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:608:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:620:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:620:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:620:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:625:21: warning: 3.1 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:626:27: warning: 3.1 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:671:33: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:672:34: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:689:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:689:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:689:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:691:17: warning: variable name 'v1' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:692:17: warning: variable name 'v2' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:701:35: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:702:38: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:707:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:707:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:707:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:708:17: warning: variable name 'v1' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:709:17: warning: variable name 'v2' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:716:40: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:720:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:725:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:728:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:728:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:728:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:732:24: warning: 5.F is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:734:24: warning: 5.0 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:567:32: warning: unused variable 'variable2' [-Wunused-variable]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateExamples_unit.cpp:568:35: warning: unused variable 'variable3' [-Wunused-variable]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:20:17: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:29:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:29:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:29:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:39:26: warning: variable name 'A' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:72:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:72:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:72:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:94:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:101:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:108:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:113:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:113:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:113:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:142:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:149:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:156:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:162:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:162:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:162:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:198:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:198:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/TemplateExamples/TemplateIdiomsExamples_unit.cpp:198:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ValueCategoriesExamples/ValueCategoriesExamples_unit.cpp:14:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ValueCategoriesExamples/ValueCategoriesExamples_unit.cpp:14:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ValueCategoriesExamples/ValueCategoriesExamples_unit.cpp:14:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ValueCategoriesExamples/ValueCategoriesExamples_unit.cpp:15:19: warning: unused variable 'n' [clang-diagnostic-unused-variable]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ValueCategoriesExamples/ValueCategoriesExamples_unit.cpp:15:19: warning: variable name 'n' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ValueCategoriesExamples/ValueCategoriesExamples_unit.cpp:25:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ValueCategoriesExamples/ValueCategoriesExamples_unit.cpp:31:13: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
/home/runner/work/aprg/aprg/AprgCommon/AprgCommon/src/Common/Macros/AlbaMacros.hpp:18:41: note: expanded from macro 'ALBA_MACROS_GET_PRETTY_FUNCTION'
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ValueCategoriesExamples/ValueCategoriesExamples_unit.cpp:34:1: warning: initialization of 'test_info_' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ValueCategoriesExamples/ValueCategoriesExamples_unit.cpp:34:1: warning: variable 'test_info_' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ValueCategoriesExamples/ValueCategoriesExamples_unit.cpp:34:1: warning: initializing non-owner argument of type 'testing::internal::TestFactoryBase *' with a newly created 'gsl::owner<>' [cppcoreguidelines-owning-memory]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ValueCategoriesExamples/ValueCategoriesExamples_unit.cpp:35:12: warning: variable name 's' is too short, expected at least 3 characters [readability-identifier-length]
/home/runner/work/aprg/aprg/CPlusPlusExamples/CPlusPlusExamples/tst/ValueCategoriesExamples/ValueCategoriesExamples_unit.cpp:15:19: warning: unused variable 'n' [-Wunused-variable]
DONE!
