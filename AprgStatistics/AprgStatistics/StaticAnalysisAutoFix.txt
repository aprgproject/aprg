StaticAnalysisJobIdentifier: [011]
2023-09-11T13:33:05
[35m2023-09-11T13:34:20[0m | [33mBuildAndRun.sh:28[0m | The current path is [/d/a/aprg/aprg/AprgStatistics/AprgStatistics].
[35m2023-09-11T13:34:20[0m | [33mBuildAndRun.sh:29[0m | The scriptPath is [/d/a/aprg/aprg/AllCommonScripts/BuildAndRunScripts/BuildAndRun.sh].
[35m2023-09-11T13:34:21[0m | [33mBuildAndRun.sh:30[0m | The scriptOption is [buildOnOneCore].
[35m2023-09-11T13:34:21[0m | [33mBuildAndRun.sh:31[0m | The buildDirectoryName is [StaticAnalyzersBuild].
[35m2023-09-11T13:34:21[0m | [33mBuildAndRun.sh:32[0m | The argument1 is [Debug] and argument2 is [].
[35m2023-09-11T13:34:21[0m | [33mBuildAndRun.sh:33[0m | The immediateDirectoryName is [AprgStatistics].
[35m2023-09-11T13:34:21[0m | [33mBuildAndRun.sh:84[0m | The buildType is [Debug].
[35m2023-09-11T13:34:21[0m | [33mBuildAndRun.sh:85[0m | The numberOfCores is [2].
[35m2023-09-11T13:34:21[0m | [33mBuildAndRun.sh:68[0m | The build path is [/d/a/aprg/aprg/AprgStatistics/StaticAnalyzersBuild] and the output of [ls -la --color=auto]:
total 165
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 13:34 .
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 13:33 ..
-rw-r--r-- 1 runneradmin 197121  18031 Sep 11 13:34 CMakeCache.txt
drwxr-xr-x 1 runneradmin 197121      0 Sep 11 13:34 CMakeFiles
-rw-r--r-- 1 runneradmin 197121    562 Sep 11 13:34 CTestTestfile.cmake
-rw-r--r-- 1 runneradmin 197121 129489 Sep 11 13:34 build.ninja
-rw-r--r-- 1 runneradmin 197121   2292 Sep 11 13:34 cmake_install.cmake
[1/58] Building CXX object CMakeFiles/gtest.dir/D_/a/aprg/aprg/gtest/gtest/googletest/src/gtest-all.cc.obj
In file included from D:/a/aprg/aprg/gtest/gtest/googletest/src/gtest-all.cc:49:
D:/a/aprg/aprg/gtest/gtest/googletest\src/gtest.cc:2604:3: warning: extension used [-Wlanguage-extension-token]
  __try {
  ^
1 warning generated.
[2/58] Building CXX object CMakeFiles/gtest.dir/D_/a/aprg/aprg/gtest/gtest/googletest/src/gtest_main.cc.obj
[3/58] Linking CXX static library gtest.lib
[4/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Container/AlbaContainerHelper.cpp.obj
[5/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/File/AlbaFileReader.cpp.obj
[6/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Angle/AlbaAngle.cpp.obj
[7/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/ComplexNumberHelpers.cpp.obj
[8/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/ComputationHelpers.cpp.obj
[9/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/FactorAndMulitplesHelpers.cpp.obj
[10/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/PowerHelpers.cpp.obj
[11/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/PrecisionHelpers.cpp.obj
[12/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Helpers/StatisticsHelpers.cpp.obj
[13/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/AlbaComplexNumber.cpp.obj
[14/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/AlbaNumber.cpp.obj
[15/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberInterval.cpp.obj
[16/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberIntervalEndpoint.cpp.obj
[17/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Number/Interval/AlbaNumberIntervalHelpers.cpp.obj
[18/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Math/Ratio/AlbaRatio.cpp.obj
[19/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Memory/AlbaMemoryBuffer.cpp.obj
[20/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/PathHandler/AlbaPathHandler.cpp.obj
[21/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/PathHandler/AlbaWebPathHandler.cpp.obj
[22/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Print/AlbaPrintFunctions.cpp.obj
[23/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/AlbaOldRandomizer.cpp.obj
[24/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/EntropySources/AlbaCombinedEntropySource.cpp.obj
[25/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Randomizer/EntropySources/AlbaEntropySourceBasedOnTime.cpp.obj
[26/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamBitReader.cpp.obj
[27/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamBitWriter.cpp.obj
[28/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamParameterReader.cpp.obj
[29/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Stream/AlbaStreamParameterWriter.cpp.obj
[30/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/String/AlbaStringHelper.cpp.obj
[31/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaDateTime.cpp.obj
[32/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaDateTimeHelper.cpp.obj
[33/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimeHelper.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\Time\AlbaLocalTimeHelper.cpp:23:34: warning: 'localtime' is deprecated: This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [clang-diagnostic-deprecated-declarations]
    struct tm const localTime = *localtime(&currentTimeT);
                                 ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h:524:9: note: 'localtime' has been explicitly marked deprecated here
        _CRT_INSECURE_DEPRECATE(localtime_s)
        ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
D:/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimeHelper.cpp:23:34: warning: 'localtime' is deprecated: This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details. [-Wdeprecated-declarations]
    struct tm const localTime = *localtime(&currentTimeT);
                                 ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\time.h:524:9: note: 'localtime' has been explicitly marked deprecated here
        _CRT_INSECURE_DEPRECATE(localtime_s)
        ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:355:55: note: expanded from macro '_CRT_INSECURE_DEPRECATE'
        #define _CRT_INSECURE_DEPRECATE(_Replacement) _CRT_DEPRECATE_TEXT(    \
                                                      ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vcruntime.h:345:47: note: expanded from macro '_CRT_DEPRECATE_TEXT'
#define _CRT_DEPRECATE_TEXT(_Text) __declspec(deprecated(_Text))
                                              ^
1 warning generated.
[34/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Time/AlbaLocalTimer.cpp.obj
[35/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/User/AlbaUserInterface.cpp.obj
[36/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/User/DisplayTable.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\User\DisplayTable.cpp:205:67: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
int DisplayTablePrinter::getVerticalBorderLength() const { return m_verticalBorder.length(); }
                                                                  ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\src\Common\User\DisplayTable.cpp:208:12: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    return ((m_maxLengthAtColumn.size() + 1) * getVerticalBorderLength()) + m_totalColumnLength;
           ^
[37/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/src/Common/Utility/AlbaScopeGuard.cpp.obj
[38/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities/CommonTestsUtilities/File/BaseFileReaderTest.cpp.obj
[39/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities/CommonTestsUtilities/File/FileUtilities.cpp.obj
[40/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/PathHandler/AlbaWindowsPathHandler.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:28:24: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const length = fullPath.length();
                       ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:30:45: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
        int const indexWithSlashCharacter = fullPath.find_first_of(m_slashCharacterString, index);
                                            ^
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\PathHandler\AlbaWindowsPathHandler.cpp:270:23: warning: narrowing conversion from 'size_type' (aka 'unsigned long long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
    int const index = m_directory.find_first_of(m_slashCharacterString + ":");
                      ^
[41/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Time/AlbaWindowsTimeHelper.cpp.obj
D:\a\aprg\aprg\AprgCommon\AprgCommon\srcWindows\Common\Time\AlbaWindowsTimeHelper.cpp:6:12: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
    return AlbaDateTime(
           ^
[42/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Time/AlbaWindowsTimer.cpp.obj
[43/58] Building CXX object CMakeFiles/APRG_COMMON.dir/D_/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows/Common/Windows/AlbaWindowsHelper.cpp.obj
[44/58] Linking CXX static library APRG_COMMON.lib
[45/58] Building CXX object CMakeFiles/AprgStatistics.dir/src/Statistics/FrequencyStatistics.cpp.obj
[46/58] Building CXX object CMakeFiles/AprgStatistics.dir/src/Statistics/KMeansClustering.cpp.obj
[47/58] Building CXX object CMakeFiles/AprgStatistics.dir/src/Statistics/OneDimensionsStatistics.cpp.obj
[48/58] Building CXX object CMakeFiles/AprgStatistics.dir/src/Statistics/TwoDimensionsStatistics.cpp.obj
D:/a/aprg/aprg/AprgStatistics/AprgStatistics/src\Statistics/DataStatistics.hpp:78:13: warning: variable 'sampleSize' of type 'int' can be declared 'const' [misc-const-correctness]
            int sampleSize(m_samples.empty() ? 1 : m_samples.size());
            ^
                const 
D:/a/aprg/aprg/AprgStatistics/AprgStatistics/src\Statistics/DataStatistics.hpp:78:17: note: FIX-IT applied suggested code changes
            int sampleSize(m_samples.empty() ? 1 : m_samples.size());
                ^
[49/58] Building CXX object CMakeFiles/AprgStatistics.dir/tst/StatisticsTests/DataCollection_unit.cpp.obj
[50/58] Building CXX object CMakeFiles/AprgStatistics.dir/tst/StatisticsTests/DataSample_unit.cpp.obj
D:/a/aprg/aprg/AprgStatistics/AprgStatistics/src\Statistics/DataSample.hpp:22:9: warning: variable 'limit' of type 'int' can be declared 'const' [misc-const-correctness]
        int limit = std::min(DIMENSIONS, static_cast<int>(dataSampleValues.size()));
        ^
            const 
D:/a/aprg/aprg/AprgStatistics/AprgStatistics/src\Statistics/DataSample.hpp:22:13: note: FIX-IT applied suggested code changes
        int limit = std::min(DIMENSIONS, static_cast<int>(dataSampleValues.size()));
            ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:10:5: warning: variable 'dataSample' of type 'DataSample<5>' can be declared 'const' [misc-const-correctness]
    DataSample<5> dataSample;
    ^
                  const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:10:19: note: FIX-IT applied suggested code changes
    DataSample<5> dataSample;
                  ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:19:5: warning: variable 'dataSample' of type 'DataSample<5>' can be declared 'const' [misc-const-correctness]
    DataSample<5> dataSample{10, 20, 30, 40, 50};
    ^
                  const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:19:19: note: FIX-IT applied suggested code changes
    DataSample<5> dataSample{10, 20, 30, 40, 50};
                  ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:28:5: warning: variable 'dataSample' of type 'DataSample<5>' can be declared 'const' [misc-const-correctness]
    DataSample<5> dataSample{10, 20, 30, 40, 50};
    ^
                  const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:28:19: note: FIX-IT applied suggested code changes
    DataSample<5> dataSample{10, 20, 30, 40, 50};
                  ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:33:5: warning: variable 'dataSample' of type 'DataSample<5>' can be declared 'const' [misc-const-correctness]
    DataSample<5> dataSample{10, 20, 30, 40, 50};
    ^
                  const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:33:19: note: FIX-IT applied suggested code changes
    DataSample<5> dataSample{10, 20, 30, 40, 50};
                  ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:44:5: warning: variable 'dataSample' of type 'DataSample<5>' can be declared 'const' [misc-const-correctness]
    DataSample<5> dataSample{10, 20, 30, 40, 50};
    ^
                  const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:44:19: note: FIX-IT applied suggested code changes
    DataSample<5> dataSample{10, 20, 30, 40, 50};
                  ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:64:5: warning: variable 'dataSample' of type 'DataSample<5>' can be declared 'const' [misc-const-correctness]
    DataSample<5> dataSample{10, 20, 30, 40, 50};
    ^
                  const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:64:19: note: FIX-IT applied suggested code changes
    DataSample<5> dataSample{10, 20, 30, 40, 50};
                  ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:65:5: warning: variable 'dataSample2' of type 'DataSample<5>' can be declared 'const' [misc-const-correctness]
    DataSample<5> dataSample2{10, 20, 30, 40, 50};
    ^
                  const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:65:19: note: FIX-IT applied suggested code changes
    DataSample<5> dataSample2{10, 20, 30, 40, 50};
                  ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:66:5: warning: variable 'dataSample3' of type 'DataSample<5>' can be declared 'const' [misc-const-correctness]
    DataSample<5> dataSample3{10, 20, 25, 40, 50};
    ^
                  const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:66:19: note: FIX-IT applied suggested code changes
    DataSample<5> dataSample3{10, 20, 25, 40, 50};
                  ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:72:5: warning: variable 'dataSample1' of type 'DataSample<5>' can be declared 'const' [misc-const-correctness]
    DataSample<5> dataSample1{10, 20, 30, 40, 50};
    ^
                  const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:72:19: note: FIX-IT applied suggested code changes
    DataSample<5> dataSample1{10, 20, 30, 40, 50};
                  ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:73:5: warning: variable 'dataSample2' of type 'DataSample<5>' can be declared 'const' [misc-const-correctness]
    DataSample<5> dataSample2{10, 20, 30, 40, 50};
    ^
                  const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:73:19: note: FIX-IT applied suggested code changes
    DataSample<5> dataSample2{10, 20, 30, 40, 50};
                  ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:74:5: warning: variable 'actualResult' of type 'DataSample<5>' can be declared 'const' [misc-const-correctness]
    DataSample<5> actualResult = dataSample1 + dataSample2;
    ^
                  const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:74:19: note: FIX-IT applied suggested code changes
    DataSample<5> actualResult = dataSample1 + dataSample2;
                  ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:83:5: warning: variable 'dataSample1' of type 'DataSample<5>' can be declared 'const' [misc-const-correctness]
    DataSample<5> dataSample1{10, 20, 30, 40, 50};
    ^
                  const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:83:19: note: FIX-IT applied suggested code changes
    DataSample<5> dataSample1{10, 20, 30, 40, 50};
                  ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:84:5: warning: variable 'singleValue' of type 'int' can be declared 'const' [misc-const-correctness]
    int singleValue = 1;
    ^
        const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:84:9: note: FIX-IT applied suggested code changes
    int singleValue = 1;
        ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:85:5: warning: variable 'actualResult' of type 'DataSample<5>' can be declared 'const' [misc-const-correctness]
    DataSample<5> actualResult = dataSample1 + singleValue;
    ^
                  const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataSample_unit.cpp:85:19: note: FIX-IT applied suggested code changes
    DataSample<5> actualResult = dataSample1 + singleValue;
                  ^
[51/58] Building CXX object CMakeFiles/AprgStatistics.dir/tst/StatisticsTests/DataStatisticsUtilities_unit.cpp.obj
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatisticsUtilities_unit.cpp:16:5: warning: variable 'samples1' of type 'LocalSamples' (aka 'vector<DataSample<3>>') can be declared 'const' [misc-const-correctness]
    LocalSamples samples1;
    ^
                 const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatisticsUtilities_unit.cpp:16:18: note: FIX-IT applied suggested code changes
    LocalSamples samples1;
                 ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatisticsUtilities_unit.cpp:17:5: warning: variable 'samples2' of type 'LocalSamples' (aka 'vector<DataSample<3>>') can be declared 'const' [misc-const-correctness]
    LocalSamples samples2{LocalSample{1, 10, 100}, LocalSample{2, 20, 200}, LocalSample{3, 30, 300}};
    ^
                 const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatisticsUtilities_unit.cpp:17:18: note: FIX-IT applied suggested code changes
    LocalSamples samples2{LocalSample{1, 10, 100}, LocalSample{2, 20, 200}, LocalSample{3, 30, 300}};
                 ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatisticsUtilities_unit.cpp:18:5: warning: variable 'expectedSum1' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedSum1{0, 0, 0};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatisticsUtilities_unit.cpp:18:17: note: FIX-IT applied suggested code changes
    LocalSample expectedSum1{0, 0, 0};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatisticsUtilities_unit.cpp:19:5: warning: variable 'expectedSum2' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedSum2{6, 60, 600};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatisticsUtilities_unit.cpp:19:17: note: FIX-IT applied suggested code changes
    LocalSample expectedSum2{6, 60, 600};
                ^
[52/58] Building CXX object CMakeFiles/AprgStatistics.dir/tst/StatisticsTests/DataStatistics_unit.cpp.obj
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:15:5: warning: variable 'expectedSum' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedSum{0, 0, 0};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:15:17: note: FIX-IT applied suggested code changes
    LocalSample expectedSum{0, 0, 0};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:16:5: warning: variable 'expectedMean' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedMean{0, 0, 0};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:16:17: note: FIX-IT applied suggested code changes
    LocalSample expectedMean{0, 0, 0};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:17:5: warning: variable 'expectedSampleVariance' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedSampleVariance{0, 0, 0};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:17:17: note: FIX-IT applied suggested code changes
    LocalSample expectedSampleVariance{0, 0, 0};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:18:5: warning: variable 'expectedSampleStandardDeviation' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedSampleStandardDeviation{0, 0, 0};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:18:17: note: FIX-IT applied suggested code changes
    LocalSample expectedSampleStandardDeviation{0, 0, 0};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:19:5: warning: variable 'expectedPopulationVariance' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedPopulationVariance{0, 0, 0};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:19:17: note: FIX-IT applied suggested code changes
    LocalSample expectedPopulationVariance{0, 0, 0};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:20:5: warning: variable 'expectedPopulationStandardDeviation' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedPopulationStandardDeviation{0, 0, 0};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:20:17: note: FIX-IT applied suggested code changes
    LocalSample expectedPopulationStandardDeviation{0, 0, 0};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:21:5: warning: variable 'expectedDispersion' of type 'double' can be declared 'const' [misc-const-correctness]
    double expectedDispersion(0);
    ^
           const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:21:12: note: FIX-IT applied suggested code changes
    double expectedDispersion(0);
           ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:23:5: warning: variable 'samples' of type 'LocalSamples' (aka 'vector<DataSample<3>>') can be declared 'const' [misc-const-correctness]
    LocalSamples samples;
    ^
                 const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:23:18: note: FIX-IT applied suggested code changes
    LocalSamples samples;
                 ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:25:5: warning: variable 'sum' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample sum(localStatistics.getSum());
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:25:17: note: FIX-IT applied suggested code changes
    LocalSample sum(localStatistics.getSum());
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:26:5: warning: variable 'mean' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample mean(localStatistics.getMean());
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:26:17: note: FIX-IT applied suggested code changes
    LocalSample mean(localStatistics.getMean());
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:27:5: warning: variable 'sampleVariance' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample sampleVariance(localStatistics.getSampleVariance());
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:27:17: note: FIX-IT applied suggested code changes
    LocalSample sampleVariance(localStatistics.getSampleVariance());
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:28:5: warning: variable 'sampleStandardDeviation' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample sampleStandardDeviation(localStatistics.getSampleStandardDeviation());
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:28:17: note: FIX-IT applied suggested code changes
    LocalSample sampleStandardDeviation(localStatistics.getSampleStandardDeviation());
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:29:5: warning: variable 'populationVariance' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample populationVariance(localStatistics.getPopulationVariance());
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:29:17: note: FIX-IT applied suggested code changes
    LocalSample populationVariance(localStatistics.getPopulationVariance());
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:30:5: warning: variable 'populationStandardDeviation' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample populationStandardDeviation(localStatistics.getPopulationStandardDeviation());
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:30:17: note: FIX-IT applied suggested code changes
    LocalSample populationStandardDeviation(localStatistics.getPopulationStandardDeviation());
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:31:5: warning: variable 'dispersion' of type 'double' can be declared 'const' [misc-const-correctness]
    double dispersion(localStatistics.getDispersionAroundTheCentroid());
    ^
           const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:31:12: note: FIX-IT applied suggested code changes
    double dispersion(localStatistics.getDispersionAroundTheCentroid());
           ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:46:5: warning: variable 'expectedSum' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedSum{6, 60, 600};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:46:17: note: FIX-IT applied suggested code changes
    LocalSample expectedSum{6, 60, 600};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:47:5: warning: variable 'expectedMean' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedMean{2, 20, 200};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:47:17: note: FIX-IT applied suggested code changes
    LocalSample expectedMean{2, 20, 200};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:48:5: warning: variable 'expectedSampleVariance' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedSampleVariance{1, 100, 10000};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:48:17: note: FIX-IT applied suggested code changes
    LocalSample expectedSampleVariance{1, 100, 10000};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:49:5: warning: variable 'expectedSampleStandardDeviation' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedSampleStandardDeviation{1, 10, 100};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:49:17: note: FIX-IT applied suggested code changes
    LocalSample expectedSampleStandardDeviation{1, 10, 100};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:50:5: warning: variable 'expectedPopulationVariance' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedPopulationVariance{0.66666666666666662966, 66.666666666666671404, 6666.6666666666669698};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:50:17: note: FIX-IT applied suggested code changes
    LocalSample expectedPopulationVariance{0.66666666666666662966, 66.666666666666671404, 6666.6666666666669698};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:51:5: warning: variable 'expectedPopulationStandardDeviation' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedPopulationStandardDeviation{
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:51:17: note: FIX-IT applied suggested code changes
    LocalSample expectedPopulationStandardDeviation{
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:53:5: warning: variable 'expectedDispersion' of type 'double' can be declared 'const' [misc-const-correctness]
    double expectedDispersion(100.50373127401788);
    ^
           const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:53:12: note: FIX-IT applied suggested code changes
    double expectedDispersion(100.50373127401788);
           ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:55:5: warning: variable 'samples' of type 'LocalSamples' (aka 'vector<DataSample<3>>') can be declared 'const' [misc-const-correctness]
    LocalSamples samples{LocalSample{1, 10, 100}, LocalSample{2, 20, 200}, LocalSample{3, 30, 300}};
    ^
                 const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:55:18: note: FIX-IT applied suggested code changes
    LocalSamples samples{LocalSample{1, 10, 100}, LocalSample{2, 20, 200}, LocalSample{3, 30, 300}};
                 ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:57:5: warning: variable 'sum' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample sum(localStatistics.getSum());
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:57:17: note: FIX-IT applied suggested code changes
    LocalSample sum(localStatistics.getSum());
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:58:5: warning: variable 'mean' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample mean(localStatistics.getMean());
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:58:17: note: FIX-IT applied suggested code changes
    LocalSample mean(localStatistics.getMean());
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:59:5: warning: variable 'sampleVariance' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample sampleVariance(localStatistics.getSampleVariance());
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:59:17: note: FIX-IT applied suggested code changes
    LocalSample sampleVariance(localStatistics.getSampleVariance());
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:60:5: warning: variable 'sampleStandardDeviation' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample sampleStandardDeviation(localStatistics.getSampleStandardDeviation());
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:60:17: note: FIX-IT applied suggested code changes
    LocalSample sampleStandardDeviation(localStatistics.getSampleStandardDeviation());
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:61:5: warning: variable 'populationVariance' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample populationVariance(localStatistics.getPopulationVariance());
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:61:17: note: FIX-IT applied suggested code changes
    LocalSample populationVariance(localStatistics.getPopulationVariance());
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:62:5: warning: variable 'populationStandardDeviation' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample populationStandardDeviation(localStatistics.getPopulationStandardDeviation());
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:62:17: note: FIX-IT applied suggested code changes
    LocalSample populationStandardDeviation(localStatistics.getPopulationStandardDeviation());
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:63:5: warning: variable 'dispersion' of type 'double' can be declared 'const' [misc-const-correctness]
    double dispersion(localStatistics.getDispersionAroundTheCentroid());
    ^
           const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:63:12: note: FIX-IT applied suggested code changes
    double dispersion(localStatistics.getDispersionAroundTheCentroid());
           ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:78:5: warning: variable 'expectedSum' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedSum{0, 0, 0};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:78:17: note: FIX-IT applied suggested code changes
    LocalSample expectedSum{0, 0, 0};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:79:5: warning: variable 'expectedMean' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedMean{0, 0, 0};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:79:17: note: FIX-IT applied suggested code changes
    LocalSample expectedMean{0, 0, 0};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:80:5: warning: variable 'expectedSampleVariance' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedSampleVariance{0, 0, 0};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:80:17: note: FIX-IT applied suggested code changes
    LocalSample expectedSampleVariance{0, 0, 0};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:81:5: warning: variable 'expectedSampleStandardDeviation' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedSampleStandardDeviation{0, 0, 0};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:81:17: note: FIX-IT applied suggested code changes
    LocalSample expectedSampleStandardDeviation{0, 0, 0};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:82:5: warning: variable 'expectedPopulationVariance' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedPopulationVariance{0, 0, 0};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:82:17: note: FIX-IT applied suggested code changes
    LocalSample expectedPopulationVariance{0, 0, 0};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:83:5: warning: variable 'expectedPopulationStandardDeviation' of type 'LocalSample' (aka 'DataSample<3>') can be declared 'const' [misc-const-correctness]
    LocalSample expectedPopulationStandardDeviation{0, 0, 0};
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:83:17: note: FIX-IT applied suggested code changes
    LocalSample expectedPopulationStandardDeviation{0, 0, 0};
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:84:5: warning: variable 'expectedDispersion' of type 'double' can be declared 'const' [misc-const-correctness]
    double expectedDispersion(0);
    ^
           const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:84:12: note: FIX-IT applied suggested code changes
    double expectedDispersion(0);
           ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:102:5: warning: variable 'dispersion' of type 'double' can be declared 'const' [misc-const-correctness]
    double dispersion = localStatistics.getDispersionAroundTheCentroid();
    ^
           const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\DataStatistics_unit.cpp:102:12: note: FIX-IT applied suggested code changes
    double dispersion = localStatistics.getDispersionAroundTheCentroid();
           ^
[53/58] Building CXX object CMakeFiles/AprgStatistics.dir/tst/StatisticsTests/FrequencyStatistics_unit.cpp.obj
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\FrequencyStatistics_unit.cpp:12:5: warning: variable 'samples' of type 'FrequencyStatistics::FrequencySamples' (aka 'map<int, int>') can be declared 'const' [misc-const-correctness]
    FrequencyStatistics::FrequencySamples samples;
    ^
                                          const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\FrequencyStatistics_unit.cpp:12:43: note: FIX-IT applied suggested code changes
    FrequencyStatistics::FrequencySamples samples;
                                          ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\FrequencyStatistics_unit.cpp:14:5: warning: variable 'modes' of type 'FrequencyStatistics::MultipleValues' (aka 'vector<int>') can be declared 'const' [misc-const-correctness]
    FrequencyStatistics::MultipleValues modes(FrequencyStatistics::calculateMode(samples));
    ^
                                        const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\FrequencyStatistics_unit.cpp:14:41: note: FIX-IT applied suggested code changes
    FrequencyStatistics::MultipleValues modes(FrequencyStatistics::calculateMode(samples));
                                        ^
[54/58] Building CXX object CMakeFiles/AprgStatistics.dir/tst/StatisticsTests/KMeansClustering_unit.cpp.obj
FAILED: CMakeFiles/AprgStatistics.dir/tst/StatisticsTests/KMeansClustering_unit.cpp.obj 
"C:\Program Files\CMake\bin\cmake.exe" -E __run_co_compile --tidy="C:/Program Files/LLVM/bin/clang-tidy.exe;--fix;--header-filter=D:\/a\/aprg\/aprg\/AprgStatistics\/AprgStatistics.*;--config-file=D:/a/aprg/aprg/Clang/ClangTidyFiles/autofix.clang-tidy;--extra-arg-before=--driver-mode=g++" --source=D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\KMeansClustering_unit.cpp -- C:\PROGRA~1\LLVM\bin\CLANG_~1.EXE -DAPRG_CODE_REVISION=\"e6d71ebc697331d9536a23a9a26fc0581d0884cb\" -DAPRG_DEBUG -DAPRG_DIR=\"D:/a/aprg/aprg\" -DAPRG_TEST_MODE_ON -DOS_WINDOWS -ID:/a/aprg/aprg/AprgCommon/AprgCommon/src -ID:/a/aprg/aprg/AprgCommon/AprgCommon/srcWindows -ID:/a/aprg/aprg/AprgCommon/AprgCommon/tstUtilities -ID:/a/aprg/aprg/AprgStatistics/AprgStatistics/src -ID:/a/aprg/aprg/AprgStatistics/AprgStatistics/tst -ID:/a/aprg/aprg/gtest/gtest/googletest/include -ID:/a/aprg/aprg/gtest/gtest/googletest -Wall -Wextra -pedantic -fcolor-diagnostics -std=c++20  -O0 -g -Xclang -gcodeview -D_DEBUG -D_DLL -D_MT -Xclang --dependent-lib=msvcrtd -MD -MT CMakeFiles/AprgStatistics.dir/tst/StatisticsTests/KMeansClustering_unit.cpp.obj -MF CMakeFiles\AprgStatistics.dir\tst\StatisticsTests\KMeansClustering_unit.cpp.obj.d -o CMakeFiles/AprgStatistics.dir/tst/StatisticsTests/KMeansClustering_unit.cpp.obj -c D:/a/aprg/aprg/AprgStatistics/AprgStatistics/tst/StatisticsTests/KMeansClustering_unit.cpp
D:/a/aprg/aprg/AprgStatistics/AprgStatistics/src\Statistics/KMeansClustering.hpp:28:13: warning: variable 'groupOfSamples' of type 'GroupOfSamples' (aka 'vector<vector<DataSample<2>>>') can be declared 'const' [misc-const-correctness]
            GroupOfSamples groupOfSamples(
            ^
                           const 
D:/a/aprg/aprg/AprgStatistics/AprgStatistics/src\Statistics/KMeansClustering.hpp:28:28: note: FIX-IT applied suggested code changes
            GroupOfSamples groupOfSamples(
                           ^
D:/a/aprg/aprg/AprgStatistics/AprgStatistics/src\Statistics/KMeansClustering.hpp:36:21: warning: variable 'currentDistance' of type 'double' can be declared 'const' [misc-const-correctness]
                    double currentDistance(
                    ^
                           const 
D:/a/aprg/aprg/AprgStatistics/AprgStatistics/src\Statistics/KMeansClustering.hpp:36:28: note: FIX-IT applied suggested code changes
                    double currentDistance(
                           ^
D:/a/aprg/aprg/AprgStatistics/AprgStatistics/src\Statistics/KMeansClustering.hpp:86:9: warning: variable 'numberSamplesPerGroup' of type 'int' can be declared 'const' [misc-const-correctness]
        int numberSamplesPerGroup((m_samples.size() / numberOfGroups) + 1);
        ^
            const 
D:/a/aprg/aprg/AprgStatistics/AprgStatistics/src\Statistics/KMeansClustering.hpp:86:13: note: FIX-IT applied suggested code changes
        int numberSamplesPerGroup((m_samples.size() / numberOfGroups) + 1);
            ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\KMeansClustering_unit.cpp:13:69: warning: variable 'kMeans' of type 'LocalKMeans' (aka 'KMeansClustering<2>') can be declared 'const' [misc-const-correctness]
TEST(KMeansClusteringTestTwoDimensions, KMeansObjectCanbeCreated) { LocalKMeans kMeans; }
                                                                    ^
                                                                                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\KMeansClustering_unit.cpp:13:81: note: FIX-IT applied suggested code changes
TEST(KMeansClusteringTestTwoDimensions, KMeansObjectCanbeCreated) { LocalKMeans kMeans; }
                                                                                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\KMeansClustering_unit.cpp:28:26: warning: unnecessary temporary object created while calling emplace_back [hicpp-use-emplace,modernize-use-emplace]
    samples.emplace_back(LocalSample{1, 1});
                         ^~~~~~~~~~~~    ~
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\KMeansClustering_unit.cpp:28:26: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\KMeansClustering_unit.cpp:28:42: note: FIX-IT applied suggested code changes
    samples.emplace_back(LocalSample{1, 1});
                                         ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\KMeansClustering_unit.cpp:29:26: warning: unnecessary temporary object created while calling emplace_back [hicpp-use-emplace,modernize-use-emplace]
    samples.emplace_back(LocalSample{2, 2});
                         ^~~~~~~~~~~~    ~
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\KMeansClustering_unit.cpp:29:26: note: FIX-IT applied suggested code changes
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\KMeansClustering_unit.cpp:29:42: note: FIX-IT applied suggested code changes
    samples.emplace_back(LocalSample{2, 2});
                                         ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\KMeansClustering_unit.cpp:40:5: warning: variable 'kMeans' of type 'LocalKMeans' (aka 'KMeansClustering<2>') can be declared 'const' [misc-const-correctness]
    LocalKMeans kMeans;
    ^
                const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\KMeansClustering_unit.cpp:40:17: note: FIX-IT applied suggested code changes
    LocalKMeans kMeans;
                ^
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\KMeansClustering_unit.cpp:42:5: warning: variable 'result' of type 'LocalGroupOfSamples' (aka 'vector<vector<DataSample<2>>>') can be declared 'const' [misc-const-correctness]
    LocalGroupOfSamples result(kMeans.getGroupOfSamplesUsingKMeans(1));
    ^
                        const 
D:\a\aprg\aprg\AprgStatistics\AprgStatistics\tst\StatisticsTests\KMeansClustering_unit.cpp:42:25: note: FIX-IT applied suggested code changes
    LocalGroupOfSamples result(kMeans.getGroupOfSamplesUsingKMeans(1));
                        ^
In file included from D:/a/aprg/aprg/AprgStatistics/AprgStatistics/tst/StatisticsTests/KMeansClustering_unit.cpp:1:
In file included from D:/a/aprg/aprg/AprgStatistics/AprgStatistics/src\Statistics/KMeansClustering.hpp:3:
In file included from D:/a/aprg/aprg/AprgStatistics/AprgStatistics/src\Statistics/DataSample.hpp:3:
In file included from D:/a/aprg/aprg/AprgCommon/AprgCommon/src\Common/Container/AlbaContainerHelper.hpp:3:
In file included from C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\algorithm:11:
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\xmemory:717:9: error: no matching function for call to 'construct_at'
        _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
        ^~~~~~~~~~~~~~~~~
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\yvals_core.h:1853:20: note: expanded from macro '_STD'
#define _STD       ::std::
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vector:800:27: note: in instantiation of function template specialization 'std::_Default_allocator_traits<std::allocator<alba::DataSample<2>>>::construct<alba::DataSample<2>, int, int>' requested here
            _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
                          ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vector:782:20: note: in instantiation of function template specialization 'std::vector<alba::DataSample<2>>::_Emplace_back_with_unused_capacity<int, int>' requested here
            return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);
                   ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\vector:864:24: note: in instantiation of function template specialization 'std::vector<alba::DataSample<2>>::_Emplace_one_at_back<int, int>' requested here
        _Ty& _Result = _Emplace_one_at_back(_STD forward<_Valty>(_Val)...);
                       ^
D:/a/aprg/aprg/AprgStatistics/AprgStatistics/tst/StatisticsTests/KMeansClustering_unit.cpp:28:13: note: in instantiation of function template specialization 'std::vector<alba::DataSample<2>>::emplace_back<int, int>' requested here
    samples.emplace_back(1, 1);
            ^
C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.37.32822\include\xutility:239:16: note: candidate template ignored: substitution failure [with _Ty = alba::DataSample<2>, _Types = <int, int>]: no matching constructor for initialization of 'alba::DataSample<2>'
constexpr _Ty* construct_at(_Ty* const _Location, _Types&&... _Args) noexcept(
               ^
1 error generated.
ninja: build stopped: subcommand failed.
DONE!
